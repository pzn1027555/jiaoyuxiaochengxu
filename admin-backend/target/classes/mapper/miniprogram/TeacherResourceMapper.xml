<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.education.admin.modules.miniprogram.mapper.TeacherResourceMapper">

  <resultMap id="BaseResultMap" type="com.education.admin.modules.miniprogram.entity.TeacherResource">
    <id column="id" property="id" />
    <result column="teacher_id" property="teacherId" />
    <result column="type" property="type" />
    <result column="title" property="title" />
    <result column="description" property="description" />
    <result column="file_url" property="fileUrl" />
    <result column="cover_url" property="coverUrl" />
    <result column="file_size" property="fileSize" />
    <result column="price" property="price" />
    <result column="is_published" property="isPublished" />
    <result column="like_count" property="likeCount" />
    <result column="view_count" property="viewCount" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
  </resultMap>

  <select id="findByTeacherAndType" parameterType="map" resultMap="BaseResultMap">
    SELECT *
    FROM teacher_resource
    WHERE teacher_id = #{teacherId}
      AND type = #{type}
      AND is_published = 1
    ORDER BY create_time DESC
  </select>

  <insert id="insert" parameterType="com.education.admin.modules.miniprogram.entity.TeacherResource">
    INSERT INTO teacher_resource(
      teacher_id, type, title, description, file_url, cover_url, file_size, price, is_published, like_count, view_count, create_time, update_time
    ) VALUES (
      #{teacherId}, #{type}, #{title}, #{description}, #{fileUrl}, #{coverUrl}, #{fileSize}, #{price},
      #{isPublished}, #{likeCount}, #{viewCount}, NOW(), NOW()
    )
  </insert>

  <update id="update" parameterType="com.education.admin.modules.miniprogram.entity.TeacherResource">
    UPDATE teacher_resource
    SET title = #{title},
        description = #{description},
        file_url = #{fileUrl},
        cover_url = #{coverUrl},
        file_size = #{fileSize},
        price = #{price},
        type = #{type},
        update_time = NOW()
    WHERE id = #{id} AND teacher_id = #{teacherId}
  </update>

  <select id="findById" parameterType="long" resultMap="BaseResultMap">
    SELECT * FROM teacher_resource WHERE id = #{id}
  </select>

  <delete id="deleteByIdAndTeacher" parameterType="map">
    DELETE FROM teacher_resource WHERE id = #{id} AND teacher_id = #{teacherId}
  </delete>

</mapper>

