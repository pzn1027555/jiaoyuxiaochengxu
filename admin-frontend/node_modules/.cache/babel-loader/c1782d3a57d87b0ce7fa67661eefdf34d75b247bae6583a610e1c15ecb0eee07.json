{"ast":null,"code":"export default {\n  name: 'ThemeToggle',\n  data() {\n    return {\n      currentTheme: 'light'\n    };\n  },\n  methods: {\n    toggleTheme() {\n      this.currentTheme = this.currentTheme === 'light' ? 'dark' : 'light';\n      this.applyTheme();\n      this.$message.success(`已切换到${this.currentTheme === 'light' ? '浅色' : '深色'}主题`);\n    },\n    applyTheme() {\n      const root = document.documentElement;\n      if (this.currentTheme === 'dark') {\n        root.setAttribute('data-theme', 'dark');\n      } else {\n        root.removeAttribute('data-theme');\n      }\n      localStorage.setItem('theme', this.currentTheme);\n    },\n    initTheme() {\n      const savedTheme = localStorage.getItem('theme');\n      if (savedTheme) {\n        this.currentTheme = savedTheme;\n        this.applyTheme();\n      }\n    }\n  },\n  mounted() {\n    this.initTheme();\n  }\n};","map":{"version":3,"names":["name","data","currentTheme","methods","toggleTheme","applyTheme","$message","success","root","document","documentElement","setAttribute","removeAttribute","localStorage","setItem","initTheme","savedTheme","getItem","mounted"],"sources":["src/components/ThemeToggle.vue"],"sourcesContent":["<template>\r\n  <div class=\"theme-toggle\">\r\n    <el-tooltip content=\"切换主题模式\" placement=\"bottom\">\r\n      <el-button \r\n        type=\"text\" \r\n        :icon=\"currentTheme === 'light' ? 'el-icon-moon' : 'el-icon-sunny'\"\r\n        @click=\"toggleTheme\"\r\n        class=\"theme-btn\"\r\n      />\r\n    </el-tooltip>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ThemeToggle',\r\n  data() {\r\n    return {\r\n      currentTheme: 'light'\r\n    }\r\n  },\r\n  methods: {\r\n    toggleTheme() {\r\n      this.currentTheme = this.currentTheme === 'light' ? 'dark' : 'light'\r\n      this.applyTheme()\r\n      this.$message.success(`已切换到${this.currentTheme === 'light' ? '浅色' : '深色'}主题`)\r\n    },\r\n    \r\n    applyTheme() {\r\n      const root = document.documentElement\r\n      if (this.currentTheme === 'dark') {\r\n        root.setAttribute('data-theme', 'dark')\r\n      } else {\r\n        root.removeAttribute('data-theme')\r\n      }\r\n      localStorage.setItem('theme', this.currentTheme)\r\n    },\r\n    \r\n    initTheme() {\r\n      const savedTheme = localStorage.getItem('theme')\r\n      if (savedTheme) {\r\n        this.currentTheme = savedTheme\r\n        this.applyTheme()\r\n      }\r\n    }\r\n  },\r\n  \r\n  mounted() {\r\n    this.initTheme()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.theme-btn {\r\n  color: #606266;\r\n  font-size: 18px;\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.theme-btn:hover {\r\n  color: #1890ff;\r\n  background: #f0f9ff;\r\n}\r\n\r\n/* 深色主题样式 */\r\n:root[data-theme=\"dark\"] .theme-btn {\r\n  color: #a0a0a0;\r\n}\r\n\r\n:root[data-theme=\"dark\"] .theme-btn:hover {\r\n  color: #40a9ff;\r\n  background: rgba(64, 169, 255, 0.1);\r\n}\r\n</style>"],"mappings":"AAcA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAF,YAAA,QAAAA,YAAA;MACA,KAAAG,UAAA;MACA,KAAAC,QAAA,CAAAC,OAAA,aAAAL,YAAA;IACA;IAEAG,WAAA;MACA,MAAAG,IAAA,GAAAC,QAAA,CAAAC,eAAA;MACA,SAAAR,YAAA;QACAM,IAAA,CAAAG,YAAA;MACA;QACAH,IAAA,CAAAI,eAAA;MACA;MACAC,YAAA,CAAAC,OAAA,eAAAZ,YAAA;IACA;IAEAa,UAAA;MACA,MAAAC,UAAA,GAAAH,YAAA,CAAAI,OAAA;MACA,IAAAD,UAAA;QACA,KAAAd,YAAA,GAAAc,UAAA;QACA,KAAAX,UAAA;MACA;IACA;EACA;EAEAa,QAAA;IACA,KAAAH,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}