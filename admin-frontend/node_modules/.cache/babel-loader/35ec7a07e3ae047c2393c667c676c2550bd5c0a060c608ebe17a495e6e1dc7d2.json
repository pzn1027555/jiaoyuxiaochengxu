{"ast":null,"code":"import HorizontalMenu from './HorizontalMenu.vue';\nimport TabsContainer from './TabsContainer.vue';\nimport { findMenuByPath, getBreadcrumbData } from '@/config/menus';\nexport default {\n  name: 'HorizontalLayout',\n  components: {\n    HorizontalMenu,\n    TabsContainer\n  },\n  data() {\n    return {\n      showBreadcrumb: false,\n      // 使用标签页后隐藏面包屑\n      openTabs: [],\n      // 打开的标签页列表\n      currentTab: 'dashboard' // 当前激活的标签页\n    };\n  },\n  computed: {\n    userInfo() {\n      return this.$store.getters.getUser || {\n        username: 'Admin',\n        nickname: '管理员'\n      };\n    },\n    breadcrumbData() {\n      return getBreadcrumbData(this.$route.path);\n    }\n  },\n  watch: {\n    $route: {\n      handler(newRoute) {\n        this.addTabFromRoute(newRoute);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    /**\n     * 处理用户命令\n     */\n    handleUserCommand(command) {\n      switch (command) {\n        case 'profile':\n          this.$message.info('个人设置功能开发中...');\n          break;\n        case 'logout':\n          this.handleLogout();\n          break;\n      }\n    },\n    /**\n     * 处理登出\n     */\n    handleLogout() {\n      this.$confirm('确定要退出登录吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$store.dispatch('logout');\n        this.$message.success('退出登录成功');\n        this.$router.push('/login');\n      }).catch(() => {\n        // 取消操作\n      });\n    },\n    /**\n     * 从路由添加标签页\n     */\n    addTabFromRoute(route) {\n      if (!route.meta || !route.meta.title) return;\n      const tabKey = route.path;\n      const menuInfo = findMenuByPath(route.path);\n\n      // 创建标签页对象\n      const tab = {\n        key: tabKey,\n        label: route.meta.title,\n        path: route.path,\n        icon: this.getTabIcon(route.meta.module),\n        closable: route.path !== '/dashboard'\n      };\n\n      // 检查是否已存在\n      if (!this.openTabs.find(t => t.key === tabKey)) {\n        this.openTabs.push(tab);\n      }\n      this.currentTab = tabKey;\n    },\n    /**\n     * 获取标签页图标\n     */\n    getTabIcon(module) {\n      const iconMap = {\n        'data-research': 'el-icon-s-data',\n        'hr-admin': 'el-icon-user',\n        'xinghuo-plan': 'el-icon-star-on',\n        'exam-management': 'el-icon-document',\n        'competition-courses': 'el-icon-reading',\n        'system-management': 'el-icon-setting',\n        'finance-management': 'el-icon-money',\n        'operation-management': 'el-icon-pie-chart',\n        'content-management': 'el-icon-folder-opened',\n        'complaint-management': 'el-icon-warning-outline'\n      };\n      return iconMap[module] || 'el-icon-menu';\n    },\n    /**\n     * 处理标签页变化\n     */\n    handleTabChange(tab) {\n      this.currentTab = tab.key;\n      if (tab.path && tab.path !== this.$route.path) {\n        this.$router.push(tab.path);\n      }\n    },\n    /**\n     * 处理标签页关闭\n     */\n    handleTabClose(tab, index) {\n      this.openTabs.splice(index, 1);\n\n      // 如果关闭的是当前标签，需要切换到其他标签\n      if (this.currentTab === tab.key) {\n        if (this.openTabs.length > 0) {\n          // 优先选择右边的标签，如果没有则选择左边的\n          const nextTab = this.openTabs[index] || this.openTabs[index - 1];\n          this.handleTabChange(nextTab);\n        } else {\n          // 如果没有其他标签，切换到首页\n          this.$router.push('/dashboard');\n        }\n      }\n    },\n    /**\n     * 处理添加标签页\n     */\n    handleAddTab() {\n      this.$message.info('请通过菜单添加新标签页');\n    },\n    /**\n     * 关闭所有标签页\n     */\n    handleCloseAll() {\n      this.openTabs = [];\n      this.currentTab = 'dashboard';\n      this.$router.push('/dashboard');\n    },\n    /**\n     * 关闭其他标签页\n     */\n    handleCloseOthers(currentTab) {\n      this.openTabs = this.openTabs.filter(tab => tab.key === currentTab.key);\n      if (this.currentTab !== currentTab.key) {\n        this.handleTabChange(currentTab);\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}