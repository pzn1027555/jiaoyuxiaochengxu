{"ast":null,"code":"export default {\n  name: 'Questionnaire',\n  data() {\n    return {\n      loading: false,\n      filterForm: {\n        title: '',\n        status: '',\n        dateRange: []\n      },\n      questionnairesList: [{\n        id: 1,\n        title: '教学质量满意度调查',\n        description: '针对本学期教学质量进行综合评价',\n        type: 'teaching',\n        creator: 'George Li',\n        createTime: '2024-01-10 10:00:00',\n        endTime: '2024-01-20 23:59:59',\n        responses: 45,\n        status: 'published'\n      }, {\n        id: 2,\n        title: '学生课程反馈问卷',\n        description: '收集学生对课程内容和教学方式的反馈',\n        type: 'feedback',\n        creator: 'George Li',\n        createTime: '2024-01-15 14:30:00',\n        endTime: '2024-01-25 23:59:59',\n        responses: 0,\n        status: 'draft'\n      }, {\n        id: 3,\n        title: '在线学习体验调查',\n        description: '了解学生对在线学习平台的使用体验',\n        type: 'experience',\n        creator: 'George Li',\n        createTime: '2024-01-05 09:00:00',\n        endTime: '2024-01-15 23:59:59',\n        responses: 67,\n        status: 'ended'\n      }],\n      pagination: {\n        current: 1,\n        size: 20,\n        total: 3\n      }\n    };\n  },\n  methods: {\n    handleSearch() {\n      this.loadQuestionnaires();\n    },\n    resetFilter() {\n      this.filterForm = {\n        title: '',\n        status: '',\n        dateRange: []\n      };\n      this.loadQuestionnaires();\n    },\n    loadQuestionnaires() {\n      this.loading = true;\n      setTimeout(() => {\n        this.loading = false;\n      }, 1000);\n    },\n    createQuestionnaire() {\n      this.$message.info('创建问卷功能开发中...');\n    },\n    viewQuestionnaire(questionnaire) {\n      this.$message.info(`查看问卷：${questionnaire.title}`);\n    },\n    editQuestionnaire(questionnaire) {\n      this.$message.info(`编辑问卷：${questionnaire.title}`);\n    },\n    publishQuestionnaire(questionnaire) {\n      this.$confirm(`确定要发布问卷\"${questionnaire.title}\"吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'success'\n      }).then(() => {\n        questionnaire.status = 'published';\n        this.$message.success('问卷发布成功');\n      });\n    },\n    viewAnalysis(questionnaire) {\n      this.$message.info(`查看统计：${questionnaire.title}`);\n    },\n    deleteQuestionnaire(questionnaire) {\n      this.$confirm(`确定要删除问卷\"${questionnaire.title}\"吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message.success('删除成功');\n      });\n    },\n    handleSortChange(column) {\n      console.log('排序变化:', column);\n    },\n    handleSizeChange(size) {\n      this.pagination.size = size;\n      this.loadQuestionnaires();\n    },\n    handleCurrentChange(page) {\n      this.pagination.current = page;\n      this.loadQuestionnaires();\n    },\n    getTypeColor(type) {\n      const colors = {\n        teaching: 'primary',\n        feedback: 'success',\n        experience: 'warning'\n      };\n      return colors[type] || 'info';\n    },\n    getTypeName(type) {\n      const names = {\n        teaching: '教学调查',\n        feedback: '反馈调查',\n        experience: '体验调查'\n      };\n      return names[type] || '其他';\n    },\n    getStatusColor(status) {\n      const colors = {\n        draft: 'info',\n        published: 'success',\n        ended: 'warning'\n      };\n      return colors[status] || 'info';\n    },\n    getStatusName(status) {\n      const names = {\n        draft: '草稿',\n        published: '发布中',\n        ended: '已结束'\n      };\n      return names[status] || '未知';\n    },\n    formatDateTime(datetime) {\n      if (!datetime) return '-';\n      return new Date(datetime).toLocaleString('zh-CN');\n    }\n  },\n  mounted() {\n    this.loadQuestionnaires();\n  }\n};","map":{"version":3,"names":["name","data","loading","filterForm","title","status","dateRange","questionnairesList","id","description","type","creator","createTime","endTime","responses","pagination","current","size","total","methods","handleSearch","loadQuestionnaires","resetFilter","setTimeout","createQuestionnaire","$message","info","viewQuestionnaire","questionnaire","editQuestionnaire","publishQuestionnaire","$confirm","confirmButtonText","cancelButtonText","then","success","viewAnalysis","deleteQuestionnaire","handleSortChange","column","console","log","handleSizeChange","handleCurrentChange","page","getTypeColor","colors","teaching","feedback","experience","getTypeName","names","getStatusColor","draft","published","ended","getStatusName","formatDateTime","datetime","Date","toLocaleString","mounted"],"sources":["src/views/system/Questionnaire.vue"],"sourcesContent":["<template>\r\n  <div class=\"questionnaire-container\">\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <h2 class=\"page-title\">问卷调查管理</h2>\r\n        <p class=\"page-description\">创建和管理各类教学调查问卷</p>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"createQuestionnaire\">\r\n          创建问卷\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"page-content\">\r\n      <el-card class=\"content-card\">\r\n        <div class=\"filter-section\">\r\n          <el-form :model=\"filterForm\" inline class=\"filter-form\">\r\n            <el-form-item label=\"问卷标题\">\r\n              <el-input \r\n                v-model=\"filterForm.title\" \r\n                placeholder=\"请输入问卷标题\" \r\n                clearable\r\n              />\r\n            </el-form-item>\r\n            <el-form-item label=\"问卷状态\">\r\n              <el-select v-model=\"filterForm.status\" placeholder=\"请选择状态\" clearable>\r\n                <el-option label=\"草稿\" value=\"draft\" />\r\n                <el-option label=\"发布中\" value=\"published\" />\r\n                <el-option label=\"已结束\" value=\"ended\" />\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"创建日期\">\r\n              <el-date-picker\r\n                v-model=\"filterForm.dateRange\"\r\n                type=\"daterange\"\r\n                format=\"yyyy-MM-dd\"\r\n                value-format=\"yyyy-MM-dd\"\r\n                range-separator=\"至\"\r\n                start-placeholder=\"开始日期\"\r\n                end-placeholder=\"结束日期\"\r\n              />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n              <el-button @click=\"resetFilter\">重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n        \r\n        <div class=\"table-section\">\r\n          <el-table\r\n            v-loading=\"loading\"\r\n            :data=\"questionnairesList\"\r\n            style=\"width: 100%\"\r\n            @sort-change=\"handleSortChange\"\r\n          >\r\n            <el-table-column prop=\"title\" label=\"问卷标题\" min-width=\"200\">\r\n              <template slot-scope=\"scope\">\r\n                <div class=\"questionnaire-info\">\r\n                  <div class=\"questionnaire-title\">{{ scope.row.title }}</div>\r\n                  <div class=\"questionnaire-desc\">{{ scope.row.description }}</div>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column prop=\"type\" label=\"问卷类型\" width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag :type=\"getTypeColor(scope.row.type)\">\r\n                  {{ getTypeName(scope.row.type) }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column prop=\"creator\" label=\"创建者\" width=\"120\" />\r\n            \r\n            <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\" sortable=\"custom\">\r\n              <template slot-scope=\"scope\">\r\n                {{ formatDateTime(scope.row.createTime) }}\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column prop=\"endTime\" label=\"结束时间\" width=\"160\">\r\n              <template slot-scope=\"scope\">\r\n                {{ formatDateTime(scope.row.endTime) }}\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column prop=\"responses\" label=\"回收数量\" width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <span class=\"response-count\">{{ scope.row.responses }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag :type=\"getStatusColor(scope.row.status)\">\r\n                  {{ getStatusName(scope.row.status) }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column label=\"操作\" width=\"220\" fixed=\"right\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button type=\"text\" size=\"small\" @click=\"viewQuestionnaire(scope.row)\">\r\n                  查看\r\n                </el-button>\r\n                <el-button \r\n                  v-if=\"scope.row.status === 'draft'\"\r\n                  type=\"text\" \r\n                  size=\"small\" \r\n                  @click=\"editQuestionnaire(scope.row)\"\r\n                >\r\n                  编辑\r\n                </el-button>\r\n                <el-button \r\n                  v-if=\"scope.row.status === 'draft'\"\r\n                  type=\"text\" \r\n                  size=\"small\" \r\n                  @click=\"publishQuestionnaire(scope.row)\"\r\n                >\r\n                  发布\r\n                </el-button>\r\n                <el-button \r\n                  v-if=\"scope.row.status === 'published' || scope.row.status === 'ended'\"\r\n                  type=\"text\" \r\n                  size=\"small\" \r\n                  @click=\"viewAnalysis(scope.row)\"\r\n                >\r\n                  统计\r\n                </el-button>\r\n                <el-button \r\n                  type=\"text\" \r\n                  size=\"small\" \r\n                  style=\"color: #f56c6c;\" \r\n                  @click=\"deleteQuestionnaire(scope.row)\"\r\n                >\r\n                  删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          \r\n          <div class=\"pagination-section\">\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"pagination.current\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pagination.size\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"pagination.total\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Questionnaire',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      filterForm: {\r\n        title: '',\r\n        status: '',\r\n        dateRange: []\r\n      },\r\n      questionnairesList: [\r\n        {\r\n          id: 1,\r\n          title: '教学质量满意度调查',\r\n          description: '针对本学期教学质量进行综合评价',\r\n          type: 'teaching',\r\n          creator: 'George Li',\r\n          createTime: '2024-01-10 10:00:00',\r\n          endTime: '2024-01-20 23:59:59',\r\n          responses: 45,\r\n          status: 'published'\r\n        },\r\n        {\r\n          id: 2,\r\n          title: '学生课程反馈问卷',\r\n          description: '收集学生对课程内容和教学方式的反馈',\r\n          type: 'feedback',\r\n          creator: 'George Li',\r\n          createTime: '2024-01-15 14:30:00',\r\n          endTime: '2024-01-25 23:59:59',\r\n          responses: 0,\r\n          status: 'draft'\r\n        },\r\n        {\r\n          id: 3,\r\n          title: '在线学习体验调查',\r\n          description: '了解学生对在线学习平台的使用体验',\r\n          type: 'experience',\r\n          creator: 'George Li',\r\n          createTime: '2024-01-05 09:00:00',\r\n          endTime: '2024-01-15 23:59:59',\r\n          responses: 67,\r\n          status: 'ended'\r\n        }\r\n      ],\r\n      pagination: {\r\n        current: 1,\r\n        size: 20,\r\n        total: 3\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleSearch() {\r\n      this.loadQuestionnaires()\r\n    },\r\n    \r\n    resetFilter() {\r\n      this.filterForm = {\r\n        title: '',\r\n        status: '',\r\n        dateRange: []\r\n      }\r\n      this.loadQuestionnaires()\r\n    },\r\n    \r\n    loadQuestionnaires() {\r\n      this.loading = true\r\n      setTimeout(() => {\r\n        this.loading = false\r\n      }, 1000)\r\n    },\r\n    \r\n    createQuestionnaire() {\r\n      this.$message.info('创建问卷功能开发中...')\r\n    },\r\n    \r\n    viewQuestionnaire(questionnaire) {\r\n      this.$message.info(`查看问卷：${questionnaire.title}`)\r\n    },\r\n    \r\n    editQuestionnaire(questionnaire) {\r\n      this.$message.info(`编辑问卷：${questionnaire.title}`)\r\n    },\r\n    \r\n    publishQuestionnaire(questionnaire) {\r\n      this.$confirm(`确定要发布问卷\"${questionnaire.title}\"吗？`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'success'\r\n      }).then(() => {\r\n        questionnaire.status = 'published'\r\n        this.$message.success('问卷发布成功')\r\n      })\r\n    },\r\n    \r\n    viewAnalysis(questionnaire) {\r\n      this.$message.info(`查看统计：${questionnaire.title}`)\r\n    },\r\n    \r\n    deleteQuestionnaire(questionnaire) {\r\n      this.$confirm(`确定要删除问卷\"${questionnaire.title}\"吗？`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$message.success('删除成功')\r\n      })\r\n    },\r\n    \r\n    handleSortChange(column) {\r\n      console.log('排序变化:', column)\r\n    },\r\n    \r\n    handleSizeChange(size) {\r\n      this.pagination.size = size\r\n      this.loadQuestionnaires()\r\n    },\r\n    \r\n    handleCurrentChange(page) {\r\n      this.pagination.current = page\r\n      this.loadQuestionnaires()\r\n    },\r\n    \r\n    getTypeColor(type) {\r\n      const colors = {\r\n        teaching: 'primary',\r\n        feedback: 'success',\r\n        experience: 'warning'\r\n      }\r\n      return colors[type] || 'info'\r\n    },\r\n    \r\n    getTypeName(type) {\r\n      const names = {\r\n        teaching: '教学调查',\r\n        feedback: '反馈调查',\r\n        experience: '体验调查'\r\n      }\r\n      return names[type] || '其他'\r\n    },\r\n    \r\n    getStatusColor(status) {\r\n      const colors = {\r\n        draft: 'info',\r\n        published: 'success',\r\n        ended: 'warning'\r\n      }\r\n      return colors[status] || 'info'\r\n    },\r\n    \r\n    getStatusName(status) {\r\n      const names = {\r\n        draft: '草稿',\r\n        published: '发布中',\r\n        ended: '已结束'\r\n      }\r\n      return names[status] || '未知'\r\n    },\r\n    \r\n    formatDateTime(datetime) {\r\n      if (!datetime) return '-'\r\n      return new Date(datetime).toLocaleString('zh-CN')\r\n    }\r\n  },\r\n  \r\n  mounted() {\r\n    this.loadQuestionnaires()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.questionnaire-container {\r\n  padding: 0;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-bottom: 24px;\r\n  padding: 24px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.header-content {\r\n  flex: 1;\r\n}\r\n\r\n.page-title {\r\n  margin: 0 0 8px 0;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.page-description {\r\n  margin: 0;\r\n  color: #7f8c8d;\r\n  font-size: 14px;\r\n}\r\n\r\n.header-actions {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.page-content {\r\n  background: #f8f9fa;\r\n}\r\n\r\n.content-card {\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.filter-section {\r\n  padding: 20px;\r\n  background: #fafbfc;\r\n  border-bottom: 1px solid #e9ecef;\r\n  border-radius: 8px 8px 0 0;\r\n}\r\n\r\n.filter-form {\r\n  margin: 0;\r\n}\r\n\r\n.table-section {\r\n  padding: 0;\r\n}\r\n\r\n.questionnaire-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.questionnaire-title {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.questionnaire-desc {\r\n  font-size: 12px;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.response-count {\r\n  font-weight: 600;\r\n  color: #1890ff;\r\n}\r\n\r\n.pagination-section {\r\n  padding: 20px;\r\n  text-align: center;\r\n  border-top: 1px solid #e9ecef;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}