{"ast":null,"code":"import Layout from '@/components/Layout.vue';\nimport { teacherApi } from '@/api/teacher';\nexport default {\n  name: 'TeacherReview',\n  components: {\n    Layout\n  },\n  data() {\n    return {\n      loading: false,\n      teacherList: [],\n      selectedTeachers: [],\n      statistics: {\n        pendingReview: 0,\n        approved: 0,\n        rejected: 0,\n        todayReview: 0\n      },\n      searchForm: {\n        realName: '',\n        reviewStatus: null,\n        dateRange: null\n      },\n      pagination: {\n        page: 1,\n        size: 10,\n        total: 0\n      },\n      detailDialogVisible: false,\n      currentTeacher: null,\n      reviewForm: {\n        reviewStatus: 1,\n        reviewReason: ''\n      },\n      submitting: false\n    };\n  },\n  created() {\n    this.loadTeachers();\n    this.loadStatistics();\n  },\n  methods: {\n    async loadTeachers() {\n      this.loading = true;\n      try {\n        const params = {\n          page: this.pagination.page,\n          size: this.pagination.size,\n          ...this.searchForm\n        };\n\n        // 处理日期范围\n        if (this.searchForm.dateRange && this.searchForm.dateRange.length === 2) {\n          params.startDate = this.searchForm.dateRange[0];\n          params.endDate = this.searchForm.dateRange[1];\n        }\n        const response = await teacherApi.getTeachersByPage(params);\n        if (response.code === 200) {\n          this.teacherList = response.data.teachers || [];\n          this.pagination.total = response.data.total || 0;\n        }\n      } catch (error) {\n        this.$message.error('加载教师列表失败');\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async loadStatistics() {\n      try {\n        const response = await teacherApi.getStatistics();\n        if (response.code === 200) {\n          this.statistics = {\n            pendingReview: response.data.pendingReview || 0,\n            approved: response.data.approved || 0,\n            rejected: response.data.rejected || 0,\n            todayReview: response.data.todayReview || 0\n          };\n        }\n      } catch (error) {\n        console.error('加载统计数据失败:', error);\n      }\n    },\n    handleSearch() {\n      this.pagination.page = 1;\n      this.loadTeachers();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.pagination.page = 1;\n      this.loadTeachers();\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val;\n      this.pagination.page = 1;\n      this.loadTeachers();\n    },\n    handleCurrentChange(val) {\n      this.pagination.page = val;\n      this.loadTeachers();\n    },\n    handleSelectionChange(selection) {\n      this.selectedTeachers = selection;\n    },\n    handleViewDetail(teacher) {\n      this.currentTeacher = teacher;\n      this.reviewForm = {\n        reviewStatus: 1,\n        reviewReason: ''\n      };\n      this.detailDialogVisible = true;\n    },\n    handleDetailClose() {\n      this.currentTeacher = null;\n      this.reviewForm = {\n        reviewStatus: 1,\n        reviewReason: ''\n      };\n    },\n    async handleApprove(teacher) {\n      try {\n        const response = await teacherApi.reviewTeacher(teacher.id, {\n          reviewStatus: 1,\n          reviewReason: '审核通过'\n        });\n        if (response.code === 200) {\n          this.$message.success('审核通过成功');\n          this.loadTeachers();\n          this.loadStatistics();\n        }\n      } catch (error) {\n        this.$message.error('审核失败');\n      }\n    },\n    async handleReject(teacher) {\n      this.$prompt('请输入拒绝原因', '拒绝审核', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputType: 'textarea',\n        inputValidator: value => {\n          if (!value || value.trim() === '') {\n            return '请输入拒绝原因';\n          }\n          return true;\n        }\n      }).then(async ({\n        value\n      }) => {\n        try {\n          const response = await teacherApi.reviewTeacher(teacher.id, {\n            reviewStatus: 2,\n            reviewReason: value\n          });\n          if (response.code === 200) {\n            this.$message.success('审核拒绝成功');\n            this.loadTeachers();\n            this.loadStatistics();\n          }\n        } catch (error) {\n          this.$message.error('审核失败');\n        }\n      }).catch(() => {});\n    },\n    async handleReviewSubmit() {\n      if (!this.reviewForm.reviewStatus) {\n        this.$message.warning('请选择审核结果');\n        return;\n      }\n      this.submitting = true;\n      try {\n        const response = await teacherApi.reviewTeacher(this.currentTeacher.id, this.reviewForm);\n        if (response.code === 200) {\n          this.$message.success('审核成功');\n          this.detailDialogVisible = false;\n          this.loadTeachers();\n          this.loadStatistics();\n        }\n      } catch (error) {\n        this.$message.error('审核失败');\n      } finally {\n        this.submitting = false;\n      }\n    },\n    async batchApprove() {\n      if (this.selectedTeachers.length === 0) {\n        this.$message.warning('请选择要审核的教师');\n        return;\n      }\n      const pendingTeachers = this.selectedTeachers.filter(t => t.reviewStatus === 0);\n      if (pendingTeachers.length === 0) {\n        this.$message.warning('选中的教师中没有待审核的');\n        return;\n      }\n      try {\n        const ids = pendingTeachers.map(t => t.id);\n        const response = await teacherApi.batchApprove(ids);\n        if (response.code === 200) {\n          this.$message.success('批量审核通过成功');\n          this.loadTeachers();\n          this.loadStatistics();\n        }\n      } catch (error) {\n        this.$message.error('批量审核失败');\n      }\n    },\n    batchReject() {\n      if (this.selectedTeachers.length === 0) {\n        this.$message.warning('请选择要审核的教师');\n        return;\n      }\n      const pendingTeachers = this.selectedTeachers.filter(t => t.reviewStatus === 0);\n      if (pendingTeachers.length === 0) {\n        this.$message.warning('选中的教师中没有待审核的');\n        return;\n      }\n      this.$prompt('请输入拒绝原因', '批量拒绝', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputType: 'textarea',\n        inputValidator: value => {\n          if (!value || value.trim() === '') {\n            return '请输入拒绝原因';\n          }\n          return true;\n        }\n      }).then(async ({\n        value\n      }) => {\n        try {\n          const promises = pendingTeachers.map(teacher => teacherApi.reviewTeacher(teacher.id, {\n            reviewStatus: 2,\n            reviewReason: value\n          }));\n          await Promise.all(promises);\n          this.$message.success('批量审核拒绝成功');\n          this.loadTeachers();\n          this.loadStatistics();\n        } catch (error) {\n          this.$message.error('批量审核失败');\n        }\n      }).catch(() => {});\n    },\n    getReviewStatusText(status) {\n      const statusMap = {\n        0: '待审核',\n        1: '已通过',\n        2: '已拒绝'\n      };\n      return statusMap[status] || '未知';\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}