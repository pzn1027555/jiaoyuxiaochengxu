{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"categories-container\"\n  }, [_vm._m(0), _c('div', {\n    staticClass: \"toolbar\"\n  }, [_c('div', {\n    staticClass: \"toolbar-left\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"el-icon-plus\"\n    },\n    on: {\n      \"click\": _vm.showCreateDialog\n    }\n  }, [_vm._v(\"新增分类\")]), _c('el-button', {\n    attrs: {\n      \"icon\": \"el-icon-sort\"\n    },\n    on: {\n      \"click\": _vm.expandAll\n    }\n  }, [_vm._v(\"展开全部\")]), _c('el-button', {\n    attrs: {\n      \"icon\": \"el-icon-rank\"\n    },\n    on: {\n      \"click\": _vm.collapseAll\n    }\n  }, [_vm._v(\"收起全部\")]), _c('el-button', {\n    attrs: {\n      \"icon\": \"el-icon-refresh\"\n    },\n    on: {\n      \"click\": _vm.refreshTree\n    }\n  }, [_vm._v(\"刷新\")])], 1), _c('div', {\n    staticClass: \"toolbar-right\"\n  }, [_c('el-input', {\n    staticStyle: {\n      \"width\": \"250px\"\n    },\n    attrs: {\n      \"placeholder\": \"搜索分类...\",\n      \"prefix-icon\": \"el-icon-search\",\n      \"clearable\": \"\"\n    },\n    on: {\n      \"input\": _vm.handleSearch\n    },\n    model: {\n      value: _vm.searchKeyword,\n      callback: function ($$v) {\n        _vm.searchKeyword = $$v;\n      },\n      expression: \"searchKeyword\"\n    }\n  })], 1)]), _c('div', {\n    staticClass: \"tree-section\"\n  }, [_c('el-card', [_c('el-table', {\n    directives: [{\n      name: \"loading\",\n      rawName: \"v-loading\",\n      value: _vm.loading,\n      expression: \"loading\"\n    }],\n    attrs: {\n      \"data\": _vm.filteredTreeData,\n      \"row-key\": \"id\",\n      \"tree-props\": {\n        children: 'children',\n        hasChildren: 'hasChildren'\n      },\n      \"default-expand-all\": _vm.expandAll,\n      \"stripe\": \"\"\n    },\n    on: {\n      \"row-click\": _vm.handleRowClick\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"prop\": \"categoryName\",\n      \"label\": \"分类名称\",\n      \"width\": \"300\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (scope) {\n        return [_c('div', {\n          staticClass: \"category-name\"\n        }, [scope.row.icon ? _c('i', {\n          class: scope.row.icon,\n          staticStyle: {\n            \"margin-right\": \"8px\"\n          }\n        }) : _vm._e(), _c('span', [_vm._v(_vm._s(scope.row.categoryName))]), scope.row.level === 1 ? _c('el-tag', {\n          staticStyle: {\n            \"margin-left\": \"8px\"\n          },\n          attrs: {\n            \"type\": \"primary\",\n            \"size\": \"mini\"\n          }\n        }, [_vm._v(\"一级\")]) : scope.row.level === 2 ? _c('el-tag', {\n          staticStyle: {\n            \"margin-left\": \"8px\"\n          },\n          attrs: {\n            \"type\": \"success\",\n            \"size\": \"mini\"\n          }\n        }, [_vm._v(\"二级\")]) : _vm._e()], 1)];\n      }\n    }])\n  }), _c('el-table-column', {\n    attrs: {\n      \"prop\": \"description\",\n      \"label\": \"描述\",\n      \"show-overflow-tooltip\": \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.description || '-'))])];\n      }\n    }])\n  }), _c('el-table-column', {\n    attrs: {\n      \"prop\": \"sortOrder\",\n      \"label\": \"排序\",\n      \"width\": \"80\",\n      \"align\": \"center\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (scope) {\n        return [_c('span', {\n          staticClass: \"sort-order\"\n        }, [_vm._v(_vm._s(scope.row.sortOrder))])];\n      }\n    }])\n  }), _c('el-table-column', {\n    attrs: {\n      \"prop\": \"courseCount\",\n      \"label\": \"课程数\",\n      \"width\": \"80\",\n      \"align\": \"center\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (scope) {\n        return [_c('el-badge', {\n          staticClass: \"course-badge\",\n          attrs: {\n            \"value\": _vm.getCourseCount(scope.row)\n          }\n        }, [_c('span')])];\n      }\n    }])\n  }), _c('el-table-column', {\n    attrs: {\n      \"prop\": \"status\",\n      \"label\": \"状态\",\n      \"width\": \"80\",\n      \"align\": \"center\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (scope) {\n        return [_c('el-switch', {\n          attrs: {\n            \"active-value\": 1,\n            \"inactive-value\": 0\n          },\n          on: {\n            \"change\": function ($event) {\n              return _vm.handleStatusChange(scope.row);\n            }\n          },\n          model: {\n            value: scope.row.status,\n            callback: function ($$v) {\n              _vm.$set(scope.row, \"status\", $$v);\n            },\n            expression: \"scope.row.status\"\n          }\n        })];\n      }\n    }])\n  }), _c('el-table-column', {\n    attrs: {\n      \"prop\": \"createTime\",\n      \"label\": \"创建时间\",\n      \"width\": \"150\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (scope) {\n        return [_vm._v(\" \" + _vm._s(_vm.formatDate(scope.row.createTime)) + \" \")];\n      }\n    }])\n  }), _c('el-table-column', {\n    attrs: {\n      \"label\": \"操作\",\n      \"width\": \"200\",\n      \"fixed\": \"right\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (scope) {\n        return [_c('el-dropdown', {\n          attrs: {\n            \"trigger\": \"click\"\n          },\n          on: {\n            \"command\": _vm.handleCommand\n          }\n        }, [_c('el-button', {\n          attrs: {\n            \"type\": \"primary\",\n            \"size\": \"mini\"\n          }\n        }, [_vm._v(\" 操作\"), _c('i', {\n          staticClass: \"el-icon-arrow-down el-icon--right\"\n        })]), _c('el-dropdown-menu', {\n          attrs: {\n            \"slot\": \"dropdown\"\n          },\n          slot: \"dropdown\"\n        }, [_c('el-dropdown-item', {\n          attrs: {\n            \"command\": {\n              action: 'edit',\n              row: scope.row\n            }\n          }\n        }, [_c('i', {\n          staticClass: \"el-icon-edit\"\n        }), _vm._v(\" 编辑 \")]), scope.row.level < 2 ? _c('el-dropdown-item', {\n          attrs: {\n            \"command\": {\n              action: 'addChild',\n              row: scope.row\n            }\n          }\n        }, [_c('i', {\n          staticClass: \"el-icon-plus\"\n        }), _vm._v(\" 添加子分类 \")]) : _vm._e(), _c('el-dropdown-item', {\n          attrs: {\n            \"command\": {\n              action: 'moveUp',\n              row: scope.row\n            }\n          }\n        }, [_c('i', {\n          staticClass: \"el-icon-top\"\n        }), _vm._v(\" 上移 \")]), _c('el-dropdown-item', {\n          attrs: {\n            \"command\": {\n              action: 'moveDown',\n              row: scope.row\n            }\n          }\n        }, [_c('i', {\n          staticClass: \"el-icon-bottom\"\n        }), _vm._v(\" 下移 \")]), _vm.canDelete(scope.row) ? _c('el-dropdown-item', {\n          attrs: {\n            \"command\": {\n              action: 'delete',\n              row: scope.row\n            },\n            \"divided\": \"\"\n          }\n        }, [_c('i', {\n          staticClass: \"el-icon-delete\"\n        }), _vm._v(\" 删除 \")]) : _vm._e()], 1)], 1)];\n      }\n    }])\n  })], 1)], 1)], 1), _c('el-dialog', {\n    attrs: {\n      \"title\": _vm.dialogTitle,\n      \"visible\": _vm.showCategoryDialog,\n      \"width\": \"600px\",\n      \"close-on-click-modal\": false\n    },\n    on: {\n      \"update:visible\": function ($event) {\n        _vm.showCategoryDialog = $event;\n      }\n    }\n  }, [_c('el-form', {\n    ref: \"categoryForm\",\n    attrs: {\n      \"model\": _vm.categoryForm,\n      \"rules\": _vm.categoryRules,\n      \"label-width\": \"100px\"\n    }\n  }, [!_vm.isEditMode ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"父分类\"\n    }\n  }, [_c('el-select', {\n    attrs: {\n      \"placeholder\": \"选择父分类（不选为一级分类）\",\n      \"clearable\": \"\"\n    },\n    model: {\n      value: _vm.categoryForm.parentId,\n      callback: function ($$v) {\n        _vm.$set(_vm.categoryForm, \"parentId\", $$v);\n      },\n      expression: \"categoryForm.parentId\"\n    }\n  }, [_c('el-option', {\n    attrs: {\n      \"label\": \"无（一级分类）\",\n      \"value\": 0\n    }\n  }), _vm._l(_vm.parentCategories, function (category) {\n    return _c('el-option', {\n      key: category.id,\n      attrs: {\n        \"label\": category.categoryName,\n        \"value\": category.id\n      }\n    });\n  })], 2)], 1) : _vm._e(), _c('el-form-item', {\n    attrs: {\n      \"label\": \"分类名称\",\n      \"prop\": \"categoryName\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"placeholder\": \"请输入分类名称\",\n      \"maxlength\": \"50\",\n      \"show-word-limit\": \"\"\n    },\n    model: {\n      value: _vm.categoryForm.categoryName,\n      callback: function ($$v) {\n        _vm.$set(_vm.categoryForm, \"categoryName\", $$v);\n      },\n      expression: \"categoryForm.categoryName\"\n    }\n  })], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"分类图标\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"placeholder\": \"请输入图标类名，如：el-icon-folder\"\n    },\n    model: {\n      value: _vm.categoryForm.icon,\n      callback: function ($$v) {\n        _vm.$set(_vm.categoryForm, \"icon\", $$v);\n      },\n      expression: \"categoryForm.icon\"\n    }\n  }, [_c('template', {\n    slot: \"prepend\"\n  }, [_vm.categoryForm.icon ? _c('i', {\n    class: _vm.categoryForm.icon\n  }) : _c('i', {\n    staticClass: \"el-icon-picture\"\n  })])], 2)], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"排序\"\n    }\n  }, [_c('el-input-number', {\n    attrs: {\n      \"min\": 0,\n      \"max\": 999,\n      \"placeholder\": \"排序值，数字越小越靠前\"\n    },\n    model: {\n      value: _vm.categoryForm.sortOrder,\n      callback: function ($$v) {\n        _vm.$set(_vm.categoryForm, \"sortOrder\", $$v);\n      },\n      expression: \"categoryForm.sortOrder\"\n    }\n  })], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"分类描述\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\",\n      \"rows\": 3,\n      \"placeholder\": \"请输入分类描述\",\n      \"maxlength\": \"200\",\n      \"show-word-limit\": \"\"\n    },\n    model: {\n      value: _vm.categoryForm.description,\n      callback: function ($$v) {\n        _vm.$set(_vm.categoryForm, \"description\", $$v);\n      },\n      expression: \"categoryForm.description\"\n    }\n  })], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": \"状态\"\n    }\n  }, [_c('el-radio-group', {\n    model: {\n      value: _vm.categoryForm.status,\n      callback: function ($$v) {\n        _vm.$set(_vm.categoryForm, \"status\", $$v);\n      },\n      expression: \"categoryForm.status\"\n    }\n  }, [_c('el-radio', {\n    attrs: {\n      \"label\": 1\n    }\n  }, [_vm._v(\"启用\")]), _c('el-radio', {\n    attrs: {\n      \"label\": 0\n    }\n  }, [_vm._v(\"禁用\")])], 1)], 1)], 1), _c('div', {\n    attrs: {\n      \"slot\": \"footer\"\n    },\n    slot: \"footer\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": function ($event) {\n        _vm.showCategoryDialog = false;\n      }\n    }\n  }, [_vm._v(\"取消\")]), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"loading\": _vm.saving\n    },\n    on: {\n      \"click\": _vm.saveCategory\n    }\n  }, [_vm._v(\"确定\")])], 1)], 1), _c('el-dialog', {\n    attrs: {\n      \"title\": \"移动分类\",\n      \"visible\": _vm.showMoveDialog,\n      \"width\": \"500px\"\n    },\n    on: {\n      \"update:visible\": function ($event) {\n        _vm.showMoveDialog = $event;\n      }\n    }\n  }, [_c('div', {\n    staticClass: \"move-content\"\n  }, [_c('p', [_vm._v(\"将分类 \"), _c('strong', [_vm._v(_vm._s(_vm.currentCategory.categoryName))]), _vm._v(\" 移动到：\")]), _c('el-form', {\n    attrs: {\n      \"model\": _vm.moveForm,\n      \"label-width\": \"100px\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"目标位置\"\n    }\n  }, [_c('el-input-number', {\n    attrs: {\n      \"min\": 1,\n      \"max\": _vm.maxSortOrder,\n      \"placeholder\": \"新的排序位置\"\n    },\n    model: {\n      value: _vm.moveForm.newSortOrder,\n      callback: function ($$v) {\n        _vm.$set(_vm.moveForm, \"newSortOrder\", $$v);\n      },\n      expression: \"moveForm.newSortOrder\"\n    }\n  })], 1)], 1), _c('div', {\n    staticClass: \"move-preview\"\n  }, [_c('p', [_vm._v(\"预览：\")]), _c('el-tree', {\n    attrs: {\n      \"data\": _vm.getMovePreview(),\n      \"props\": {\n        children: 'children',\n        label: 'categoryName'\n      },\n      \"node-key\": \"id\",\n      \"highlight-current\": true\n    }\n  })], 1)], 1), _c('div', {\n    attrs: {\n      \"slot\": \"footer\"\n    },\n    slot: \"footer\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": function ($event) {\n        _vm.showMoveDialog = false;\n      }\n    }\n  }, [_vm._v(\"取消\")]), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.confirmMove\n    }\n  }, [_vm._v(\"确认移动\")])], 1)])], 1);\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"page-header\"\n  }, [_c('div', {\n    staticClass: \"header-title\"\n  }, [_c('h2', [_c('i', {\n    staticClass: \"el-icon-folder\"\n  }), _vm._v(\" 课程分类管理\")]), _c('p', [_vm._v(\"管理课程分类，支持多级分类和拖拽排序\")])])]);\n}];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}