{"ast":null,"code":"import { studentApi } from '@/api';\nimport CircleButton from '@/components/CircleButton.vue';\nexport default {\n  name: 'Students',\n  components: {\n    CircleButton\n  },\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      studentList: [],\n      selectedStudents: [],\n      statistics: {},\n      searchForm: {\n        studentNo: '',\n        realName: '',\n        level: null,\n        parentPhone: '',\n        grade: null\n      },\n      pagination: {\n        page: 1,\n        size: 10,\n        total: 0\n      },\n      dialogVisible: false,\n      levelDialogVisible: false,\n      parentDialogVisible: false,\n      progressDialogVisible: false,\n      isEdit: false,\n      currentStudent: {},\n      parentInfo: {},\n      progressInfo: {},\n      studentForm: {\n        studentNo: '',\n        realName: '',\n        grade: '',\n        school: '',\n        parentName: '',\n        parentPhone: '',\n        level: 1,\n        inviteCode: '',\n        provinceCode: '',\n        cityCode: '',\n        areaCode: ''\n      },\n      levelForm: {\n        level: null\n      },\n      formRules: {\n        realName: [{\n          required: true,\n          message: '请输入学生姓名',\n          trigger: 'blur'\n        }],\n        grade: [{\n          required: true,\n          message: '请选择年级',\n          trigger: 'change'\n        }],\n        parentPhone: [{\n          required: true,\n          message: '请输入家长电话',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入正确的手机号',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    dialogTitle() {\n      return this.isEdit ? '编辑学生' : '新增学生';\n    }\n  },\n  created() {\n    this.loadStudents();\n    this.loadStatistics();\n  },\n  methods: {\n    async loadStudents() {\n      this.loading = true;\n      try {\n        const params = {\n          page: this.pagination.page,\n          size: this.pagination.size,\n          ...this.searchForm\n        };\n        const response = await studentApi.getStudentsByPage(params);\n        if (response.code === 200) {\n          this.studentList = response.data.students || [];\n          this.pagination.total = response.data.total || 0;\n        }\n      } catch (error) {\n        this.$message.error('加载学生列表失败');\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async loadStatistics() {\n      try {\n        const response = await studentApi.getStatistics();\n        if (response.code === 200) {\n          this.statistics = response.data || {};\n        }\n      } catch (error) {\n        console.error('加载统计数据失败:', error);\n      }\n    },\n    handleSearch() {\n      this.pagination.page = 1;\n      this.loadStudents();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.pagination.page = 1;\n      this.loadStudents();\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val;\n      this.pagination.page = 1;\n      this.loadStudents();\n    },\n    handleCurrentChange(val) {\n      this.pagination.page = val;\n      this.loadStudents();\n    },\n    handleSelectionChange(selection) {\n      this.selectedStudents = selection;\n    },\n    handleCreate() {\n      this.isEdit = false;\n      this.dialogVisible = true;\n      this.generateStudentNo();\n      this.generateInviteCode();\n    },\n    async generateStudentNo() {\n      try {\n        const response = await studentApi.generateStudentNo();\n        if (response.code === 200) {\n          this.studentForm.studentNo = response.data;\n        }\n      } catch (error) {\n        console.error('生成学号失败:', error);\n      }\n    },\n    async generateInviteCode() {\n      try {\n        const response = await studentApi.generateInviteCode();\n        if (response.code === 200) {\n          this.studentForm.inviteCode = response.data;\n        }\n      } catch (error) {\n        console.error('生成邀请码失败:', error);\n      }\n    },\n    handleAction(actionData) {\n      const {\n        action,\n        data\n      } = actionData;\n      switch (action) {\n        case 'view-homework':\n          this.viewHomework(data);\n          break;\n        case 'view-schedule':\n          this.viewSchedule(data);\n          break;\n        case 'view-grades':\n          this.viewGrades(data);\n          break;\n        case 'view-vocabulary':\n          this.viewVocabulary(data);\n          break;\n        default:\n          console.log('未知操作:', action);\n      }\n    },\n    viewHomework(student) {\n      this.$message.info(`查看 ${student.realName || '学生'} 的作业`);\n    },\n    viewSchedule(student) {\n      this.$message.info(`查看 ${student.realName || '学生'} 的课表`);\n    },\n    viewGrades(student) {\n      this.$message.info(`查看 ${student.realName || '学生'} 的成绩记录`);\n    },\n    viewVocabulary(student) {\n      this.$message.info(`查看 ${student.realName || '学生'} 的单词详情`);\n    },\n    handleCommand(command) {\n      switch (command.type) {\n        case 'edit':\n          this.handleEdit(command.data);\n          break;\n        case 'level':\n          this.handleLevelAdjust(command.data);\n          break;\n        case 'parent':\n          this.handleViewParent(command.data);\n          break;\n        case 'progress':\n          this.handleViewProgress(command.data);\n          break;\n        case 'reward':\n          this.handleReward(command.data);\n          break;\n        case 'delete':\n          this.handleDelete(command.data);\n          break;\n      }\n    },\n    handleEdit(student) {\n      this.isEdit = true;\n      this.currentStudent = student;\n      this.studentForm = {\n        ...student\n      };\n      this.dialogVisible = true;\n    },\n    handleLevelAdjust(student) {\n      this.currentStudent = student;\n      this.levelForm.level = student.level;\n      this.levelDialogVisible = true;\n    },\n    async handleViewParent(student) {\n      try {\n        const response = await studentApi.getParentInfo(student.id);\n        if (response.code === 200) {\n          this.parentInfo = response.data || {};\n          this.parentDialogVisible = true;\n        }\n      } catch (error) {\n        this.$message.error('加载家长信息失败');\n      }\n    },\n    async handleViewProgress(student) {\n      try {\n        const response = await studentApi.getLearningProgress(student.id);\n        if (response.code === 200) {\n          this.progressInfo = response.data || {};\n          this.progressDialogVisible = true;\n        }\n      } catch (error) {\n        this.$message.error('加载学习进度失败');\n      }\n    },\n    handleReward(student) {\n      this.$message.info('邀请奖励功能开发中...');\n    },\n    async handleSubmit() {\n      try {\n        await this.$refs.studentForm.validate();\n        this.submitting = true;\n        const response = this.isEdit ? await studentApi.updateStudent(this.currentStudent.id, this.studentForm) : await studentApi.createStudent(this.studentForm);\n        if (response.code === 200) {\n          this.$message.success(this.isEdit ? '更新成功' : '创建成功');\n          this.dialogVisible = false;\n          this.loadStudents();\n          this.loadStatistics();\n        } else {\n          this.$message.error(response.message || '操作失败');\n        }\n      } catch (error) {\n        if (error !== false) {\n          // 不是表单验证错误\n          this.$message.error('操作失败');\n        }\n      } finally {\n        this.submitting = false;\n      }\n    },\n    async handleLevelSubmit() {\n      if (!this.levelForm.level) {\n        this.$message.warning('请选择新等级');\n        return;\n      }\n      this.submitting = true;\n      try {\n        const response = await studentApi.updateLevel(this.currentStudent.id, {\n          level: this.levelForm.level\n        });\n        if (response.code === 200) {\n          this.$message.success('等级调整成功');\n          this.levelDialogVisible = false;\n          this.loadStudents();\n          this.loadStatistics();\n        } else {\n          this.$message.error(response.message || '调整失败');\n        }\n      } catch (error) {\n        this.$message.error('调整失败');\n      } finally {\n        this.submitting = false;\n      }\n    },\n    async handleDelete(student) {\n      try {\n        await this.$confirm('确定要删除该学生吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        const response = await studentApi.deleteStudent(student.id);\n        if (response.code === 200) {\n          this.$message.success('删除成功');\n          this.loadStudents();\n          this.loadStatistics();\n        } else {\n          this.$message.error(response.message || '删除失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败');\n        }\n      }\n    },\n    async handleBatchUpgrade() {\n      if (this.selectedStudents.length === 0) {\n        this.$message.warning('请先选择学生');\n        return;\n      }\n      try {\n        await this.$confirm('确定要进行批量等级升级吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        const response = await studentApi.autoUpgradeLevel();\n        if (response.code === 200) {\n          this.$message.success('批量升级成功');\n          this.loadStudents();\n          this.loadStatistics();\n        } else {\n          this.$message.error(response.message || '升级失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('升级失败');\n        }\n      }\n    },\n    async handleBatchDelete() {\n      if (this.selectedStudents.length === 0) {\n        this.$message.warning('请先选择学生');\n        return;\n      }\n      try {\n        await this.$confirm(`确定要删除选中的 ${this.selectedStudents.length} 个学生吗？`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n\n        // 批量删除逻辑\n        for (const student of this.selectedStudents) {\n          await studentApi.deleteStudent(student.id);\n        }\n        this.$message.success('批量删除成功');\n        this.loadStudents();\n        this.loadStatistics();\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('批量删除失败');\n        }\n      }\n    },\n    handleExport() {\n      this.$message.info('导出功能开发中...');\n    },\n    resetForm() {\n      this.$refs.studentForm?.resetFields();\n      this.studentForm = {\n        studentNo: '',\n        realName: '',\n        grade: '',\n        school: '',\n        parentName: '',\n        parentPhone: '',\n        level: 1,\n        inviteCode: '',\n        provinceCode: '',\n        cityCode: '',\n        areaCode: ''\n      };\n      this.currentStudent = {};\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'pending': '暂缓中',\n        'active': '暂缓服务',\n        'completed': '已结课',\n        1: '暂缓中',\n        2: '暂缓服务',\n        3: '已结课'\n      };\n      return statusMap[status] || '暂缓中';\n    },\n    getStatusClass(status) {\n      const classMap = {\n        'pending': 'pending',\n        'active': 'active',\n        'completed': 'default',\n        1: 'pending',\n        2: 'active',\n        3: 'default'\n      };\n      return classMap[status] || 'pending';\n    },\n    getLevelText(level) {\n      const levelMap = {\n        1: '青铜',\n        2: '白银',\n        3: '黄金'\n      };\n      return levelMap[level] || '未知';\n    },\n    getLevelTagType(level) {\n      const typeMap = {\n        1: 'warning',\n        2: 'info',\n        3: 'success'\n      };\n      return typeMap[level] || 'info';\n    },\n    formatTime(time) {\n      if (!time) return '-';\n      return new Date(time).toLocaleDateString();\n    }\n  }\n};","map":{"version":3,"names":["studentApi","CircleButton","name","components","data","loading","submitting","studentList","selectedStudents","statistics","searchForm","studentNo","realName","level","parentPhone","grade","pagination","page","size","total","dialogVisible","levelDialogVisible","parentDialogVisible","progressDialogVisible","isEdit","currentStudent","parentInfo","progressInfo","studentForm","school","parentName","inviteCode","provinceCode","cityCode","areaCode","levelForm","formRules","required","message","trigger","pattern","computed","dialogTitle","created","loadStudents","loadStatistics","methods","params","response","getStudentsByPage","code","students","error","$message","console","getStatistics","handleSearch","handleReset","$refs","resetFields","handleSizeChange","val","handleCurrentChange","handleSelectionChange","selection","handleCreate","generateStudentNo","generateInviteCode","handleAction","actionData","action","viewHomework","viewSchedule","viewGrades","viewVocabulary","log","student","info","handleCommand","command","type","handleEdit","handleLevelAdjust","handleViewParent","handleViewProgress","handleReward","handleDelete","getParentInfo","id","getLearningProgress","handleSubmit","validate","updateStudent","createStudent","success","handleLevelSubmit","warning","updateLevel","$confirm","confirmButtonText","cancelButtonText","deleteStudent","handleBatchUpgrade","length","autoUpgradeLevel","handleBatchDelete","handleExport","resetForm","getStatusText","status","statusMap","getStatusClass","classMap","getLevelText","levelMap","getLevelTagType","typeMap","formatTime","time","Date","toLocaleDateString"],"sources":["src/views/education/Students.vue"],"sourcesContent":["<template>\n  <div class=\"students-container\">\n    <!-- 页面头部 -->\n    <div class=\"page-header\">\n      <div class=\"header-content\">\n        <h1 class=\"page-title\">\n          <i class=\"el-icon-user-solid\"></i>\n          一对一学员\n        </h1>\n        <p class=\"page-description\">管理一对一课程学员信息、课程安排和学习进度</p>\n      </div>\n      <div class=\"header-actions\">\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"handleCreate\">\n          新增学员\n        </el-button>\n        <el-button type=\"success\" icon=\"el-icon-upload2\" @click=\"handleBatchUpgrade\">\n          批量升级\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 统计卡片 -->\n    <div class=\"stats-grid\">\n      <div class=\"stat-card\">\n        <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #409eff 0%, #337ecc 100%)\">\n          <i class=\"el-icon-user-solid\"></i>\n        </div>\n        <div class=\"stat-content\">\n          <div class=\"stat-value\">{{ statistics.totalStudents || 0 }}</div>\n          <div class=\"stat-label\">学员总数</div>\n        </div>\n      </div>\n      <div class=\"stat-card\">\n        <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #cd7f32 0%, #b8860b 100%)\">\n          <i class=\"el-icon-medal-1\"></i>\n        </div>\n        <div class=\"stat-content\">\n          <div class=\"stat-value\">{{ statistics.bronzeStudents || 0 }}</div>\n          <div class=\"stat-label\">青铜学员</div>\n        </div>\n      </div>\n      <div class=\"stat-card\">\n        <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #c0c0c0 0%, #a8a8a8 100%)\">\n          <i class=\"el-icon-medal-1\"></i>\n        </div>\n        <div class=\"stat-content\">\n          <div class=\"stat-value\">{{ statistics.silverStudents || 0 }}</div>\n          <div class=\"stat-label\">白银学员</div>\n        </div>\n      </div>\n      <div class=\"stat-card\">\n        <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #ffd700 0%, #ffb347 100%)\">\n          <i class=\"el-icon-trophy\"></i>\n        </div>\n        <div class=\"stat-content\">\n          <div class=\"stat-value\">{{ statistics.goldStudents || 0 }}</div>\n          <div class=\"stat-label\">黄金学员</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 搜索和筛选 -->\n    <div class=\"search-container\">\n      <el-form :model=\"searchForm\" ref=\"searchForm\" class=\"search-form\" inline>\n        <el-form-item label=\"学生姓名\" prop=\"realName\">\n          <el-input\n            v-model=\"searchForm.realName\"\n            placeholder=\"请输入学生姓名\"\n            clearable\n            style=\"width: 200px\"\n          />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"searchForm.status\" placeholder=\"请选择\" clearable style=\"width: 120px\">\n            <el-option label=\"暂缓中\" value=\"pending\" />\n            <el-option label=\"暂缓服务\" value=\"suspended\" />\n            <el-option label=\"已结课\" value=\"completed\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"courseType\">\n          <el-select v-model=\"searchForm.courseType\" placeholder=\"请选择\" clearable style=\"width: 140px\">\n            <el-option label=\"1对1\" value=\"one-to-one\" />\n            <el-option label=\"IGCSE(CIE考试局)\" value=\"igcse-cie\" />\n            <el-option label=\"A_level(CIE考试局)\" value=\"alevel-cie\" />\n            <el-option label=\"A_level(AQA考试局)\" value=\"alevel-aqa\" />\n            <el-option label=\"A_level(爱德思考试局)\" value=\"alevel-edexcel\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">\n            查询\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <!-- 学员列表 -->\n    <div class=\"table-container\">\n      <div class=\"table-header\">\n        <div class=\"table-title\">学员信息</div>\n      </div>\n      \n      <el-table\n        :data=\"studentList\"\n        v-loading=\"loading\"\n        style=\"width: 100%\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <el-table-column prop=\"avatar\" label=\"学员信息\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <div class=\"student-info\">\n              <el-avatar :size=\"40\" :src=\"scope.row.avatar\" icon=\"el-icon-user-solid\" />\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"realName\" label=\"类型\" width=\"100\">\n          <template>\n            <span class=\"course-type\">1对1</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"courseCategory\" label=\"课程类型\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.courseCategory || 'IGCSE(CIE考试局)' }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"courseName\" label=\"课程名称\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.courseName || '物理' }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"teacher\" label=\"讲师\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.teacher || 'George Li' }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <span :class=\"['status-tag', getStatusClass(scope.row.status)]\">\n              {{ getStatusText(scope.row.status) }}\n            </span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"查看作业\" width=\"90\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <CircleButton \n              :actions=\"[{ icon: 'el-icon-view', type: 'primary', tooltip: '查看作业', action: 'view-homework', data: scope.row }]\"\n              @action-click=\"handleAction\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"学员课表\" width=\"90\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <CircleButton \n              :actions=\"[{ icon: 'el-icon-date', type: 'info', tooltip: '学员课表', action: 'view-schedule', data: scope.row }]\"\n              @action-click=\"handleAction\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"成绩记录\" width=\"90\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <CircleButton \n              :actions=\"[{ icon: 'el-icon-medal', type: 'warning', tooltip: '成绩记录', action: 'view-grades', data: scope.row }]\"\n              @action-click=\"handleAction\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"单词详情\" width=\"90\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <CircleButton \n              :actions=\"[{ icon: 'el-icon-document', type: 'success', tooltip: '单词详情', action: 'view-vocabulary', data: scope.row }]\"\n              @action-click=\"handleAction\"\n            />\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination-wrapper\">\n        <div class=\"pagination-info\">\n          显示 1 - 12 条，共 12 条\n        </div>\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pagination.page\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"pagination.size\"\n          :total=\"pagination.total\"\n          layout=\"prev, pager, next\"\n          background\n        />\n      </div>\n    </div>\n\n    <!-- 批量操作栏 -->\n    <div v-if=\"selectedStudents.length > 0\" class=\"batch-actions\">\n      <el-card>\n        <span>已选择 {{ selectedStudents.length }} 个学生</span>\n        <el-button type=\"primary\" icon=\"el-icon-upload2\" @click=\"handleBatchUpgrade\">\n          批量升级\n        </el-button>\n        <el-button type=\"danger\" icon=\"el-icon-delete\" @click=\"handleBatchDelete\">\n          批量删除\n        </el-button>\n      </el-card>\n    </div>\n\n    <!-- 学生表单对话框 -->\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\"\n      width=\"800px\"\n      @close=\"resetForm\"\n    >\n      <el-form\n        :model=\"studentForm\"\n        :rules=\"formRules\"\n        ref=\"studentForm\"\n        label-width=\"100px\"\n      >\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"学号\" prop=\"studentNo\">\n              <el-input v-model=\"studentForm.studentNo\" placeholder=\"自动生成\" readonly />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"学生姓名\" prop=\"realName\">\n              <el-input v-model=\"studentForm.realName\" placeholder=\"请输入学生姓名\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"年级\" prop=\"grade\">\n              <el-select v-model=\"studentForm.grade\" placeholder=\"请选择年级\">\n                <el-option label=\"小学一年级\" value=\"1\" />\n                <el-option label=\"小学二年级\" value=\"2\" />\n                <el-option label=\"小学三年级\" value=\"3\" />\n                <el-option label=\"小学四年级\" value=\"4\" />\n                <el-option label=\"小学五年级\" value=\"5\" />\n                <el-option label=\"小学六年级\" value=\"6\" />\n                <el-option label=\"初中一年级\" value=\"7\" />\n                <el-option label=\"初中二年级\" value=\"8\" />\n                <el-option label=\"初中三年级\" value=\"9\" />\n                <el-option label=\"高中一年级\" value=\"10\" />\n                <el-option label=\"高中二年级\" value=\"11\" />\n                <el-option label=\"高中三年级\" value=\"12\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"学校\" prop=\"school\">\n              <el-input v-model=\"studentForm.school\" placeholder=\"请输入学校名称\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"家长姓名\" prop=\"parentName\">\n              <el-input v-model=\"studentForm.parentName\" placeholder=\"请输入家长姓名\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"家长电话\" prop=\"parentPhone\">\n              <el-input v-model=\"studentForm.parentPhone\" placeholder=\"请输入家长电话\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"学生等级\" prop=\"level\">\n              <el-select v-model=\"studentForm.level\" placeholder=\"请选择等级\">\n                <el-option label=\"青铜\" :value=\"1\" />\n                <el-option label=\"白银\" :value=\"2\" />\n                <el-option label=\"黄金\" :value=\"3\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"邀请码\" prop=\"inviteCode\">\n              <el-input v-model=\"studentForm.inviteCode\" placeholder=\"自动生成\" readonly />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-form-item label=\"省市区\">\n          <el-col :span=\"8\">\n            <el-select v-model=\"studentForm.provinceCode\" placeholder=\"省份\">\n              <el-option label=\"北京市\" value=\"110000\" />\n              <el-option label=\"上海市\" value=\"310000\" />\n              <el-option label=\"广东省\" value=\"440000\" />\n              <el-option label=\"浙江省\" value=\"330000\" />\n              <el-option label=\"江苏省\" value=\"320000\" />\n            </el-select>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-select v-model=\"studentForm.cityCode\" placeholder=\"城市\">\n              <el-option label=\"北京市\" value=\"110100\" />\n              <el-option label=\"上海市\" value=\"310100\" />\n              <el-option label=\"广州市\" value=\"440100\" />\n              <el-option label=\"深圳市\" value=\"440300\" />\n              <el-option label=\"杭州市\" value=\"330100\" />\n            </el-select>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-select v-model=\"studentForm.areaCode\" placeholder=\"区县\">\n              <el-option label=\"朝阳区\" value=\"110105\" />\n              <el-option label=\"海淀区\" value=\"110108\" />\n              <el-option label=\"黄浦区\" value=\"310101\" />\n              <el-option label=\"徐汇区\" value=\"310104\" />\n            </el-select>\n          </el-col>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\n          {{ isEdit ? '更新' : '创建' }}\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 等级调整对话框 -->\n    <el-dialog title=\"调整学生等级\" :visible.sync=\"levelDialogVisible\" width=\"400px\">\n      <el-form :model=\"levelForm\" ref=\"levelForm\" label-width=\"80px\">\n        <el-form-item label=\"学生姓名\">\n          <span>{{ currentStudent.realName }}</span>\n        </el-form-item>\n        <el-form-item label=\"当前等级\">\n          <el-tag :type=\"getLevelTagType(currentStudent.level)\">\n            {{ getLevelText(currentStudent.level) }}\n          </el-tag>\n        </el-form-item>\n        <el-form-item label=\"新等级\" prop=\"level\">\n          <el-select v-model=\"levelForm.level\" placeholder=\"请选择新等级\">\n            <el-option label=\"青铜\" :value=\"1\" />\n            <el-option label=\"白银\" :value=\"2\" />\n            <el-option label=\"黄金\" :value=\"3\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"levelDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleLevelSubmit\" :loading=\"submitting\">\n          确定\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 家长信息对话框 -->\n    <el-dialog title=\"家长信息\" :visible.sync=\"parentDialogVisible\" width=\"500px\">\n      <div class=\"parent-info\" v-if=\"parentInfo\">\n        <el-descriptions :column=\"1\" border>\n          <el-descriptions-item label=\"家长姓名\">\n            {{ parentInfo.parentName || '-' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"联系电话\">\n            {{ parentInfo.parentPhone || '-' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"微信号\">\n            {{ parentInfo.parentWechat || '-' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"邮箱\">\n            {{ parentInfo.parentEmail || '-' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"关系\">\n            {{ parentInfo.relationship || '-' }}\n          </el-descriptions-item>\n        </el-descriptions>\n      </div>\n    </el-dialog>\n\n    <!-- 学习进度对话框 -->\n    <el-dialog title=\"学习进度\" :visible.sync=\"progressDialogVisible\" width=\"600px\">\n      <div class=\"progress-info\" v-if=\"progressInfo\">\n        <el-row :gutter=\"20\" class=\"progress-stats\">\n          <el-col :span=\"6\">\n            <div class=\"progress-card\">\n              <div class=\"progress-value\">{{ progressInfo.totalCourses || 0 }}</div>\n              <div class=\"progress-label\">总课程数</div>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"progress-card\">\n              <div class=\"progress-value\">{{ progressInfo.completedCourses || 0 }}</div>\n              <div class=\"progress-label\">已完成</div>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"progress-card\">\n              <div class=\"progress-value\">{{ progressInfo.studyHours || 0 }}</div>\n              <div class=\"progress-label\">学习时长(h)</div>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"progress-card\">\n              <div class=\"progress-value\">{{ (progressInfo.completionRate || 0).toFixed(1) }}%</div>\n              <div class=\"progress-label\">完成率</div>\n            </div>\n          </el-col>\n        </el-row>\n        <div class=\"progress-chart\">\n          <el-progress \n            :percentage=\"progressInfo.completionRate || 0\"\n            :stroke-width=\"20\"\n            :text-inside=\"true\"\n          />\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { studentApi } from '@/api'\nimport CircleButton from '@/components/CircleButton.vue'\n\nexport default {\n  name: 'Students',\n  components: {\n    CircleButton\n  },\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      studentList: [],\n      selectedStudents: [],\n      statistics: {},\n      searchForm: {\n        studentNo: '',\n        realName: '',\n        level: null,\n        parentPhone: '',\n        grade: null\n      },\n      pagination: {\n        page: 1,\n        size: 10,\n        total: 0\n      },\n      dialogVisible: false,\n      levelDialogVisible: false,\n      parentDialogVisible: false,\n      progressDialogVisible: false,\n      isEdit: false,\n      currentStudent: {},\n      parentInfo: {},\n      progressInfo: {},\n      studentForm: {\n        studentNo: '',\n        realName: '',\n        grade: '',\n        school: '',\n        parentName: '',\n        parentPhone: '',\n        level: 1,\n        inviteCode: '',\n        provinceCode: '',\n        cityCode: '',\n        areaCode: ''\n      },\n      levelForm: {\n        level: null\n      },\n      formRules: {\n        realName: [\n          { required: true, message: '请输入学生姓名', trigger: 'blur' }\n        ],\n        grade: [\n          { required: true, message: '请选择年级', trigger: 'change' }\n        ],\n        parentPhone: [\n          { required: true, message: '请输入家长电话', trigger: 'blur' },\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    dialogTitle() {\n      return this.isEdit ? '编辑学生' : '新增学生'\n    }\n  },\n  created() {\n    this.loadStudents()\n    this.loadStatistics()\n  },\n  methods: {\n    async loadStudents() {\n      this.loading = true\n      try {\n        const params = {\n          page: this.pagination.page,\n          size: this.pagination.size,\n          ...this.searchForm\n        }\n        const response = await studentApi.getStudentsByPage(params)\n        if (response.code === 200) {\n          this.studentList = response.data.students || []\n          this.pagination.total = response.data.total || 0\n        }\n      } catch (error) {\n        this.$message.error('加载学生列表失败')\n        console.error(error)\n      } finally {\n        this.loading = false\n      }\n    },\n    async loadStatistics() {\n      try {\n        const response = await studentApi.getStatistics()\n        if (response.code === 200) {\n          this.statistics = response.data || {}\n        }\n      } catch (error) {\n        console.error('加载统计数据失败:', error)\n      }\n    },\n    handleSearch() {\n      this.pagination.page = 1\n      this.loadStudents()\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields()\n      this.pagination.page = 1\n      this.loadStudents()\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val\n      this.pagination.page = 1\n      this.loadStudents()\n    },\n    handleCurrentChange(val) {\n      this.pagination.page = val\n      this.loadStudents()\n    },\n    handleSelectionChange(selection) {\n      this.selectedStudents = selection\n    },\n    handleCreate() {\n      this.isEdit = false\n      this.dialogVisible = true\n      this.generateStudentNo()\n      this.generateInviteCode()\n    },\n    async generateStudentNo() {\n      try {\n        const response = await studentApi.generateStudentNo()\n        if (response.code === 200) {\n          this.studentForm.studentNo = response.data\n        }\n      } catch (error) {\n        console.error('生成学号失败:', error)\n      }\n    },\n    async generateInviteCode() {\n      try {\n        const response = await studentApi.generateInviteCode()\n        if (response.code === 200) {\n          this.studentForm.inviteCode = response.data\n        }\n      } catch (error) {\n        console.error('生成邀请码失败:', error)\n      }\n    },\n    handleAction(actionData) {\n      const { action, data } = actionData\n      switch (action) {\n        case 'view-homework':\n          this.viewHomework(data)\n          break\n        case 'view-schedule':\n          this.viewSchedule(data)\n          break\n        case 'view-grades':\n          this.viewGrades(data)\n          break\n        case 'view-vocabulary':\n          this.viewVocabulary(data)\n          break\n        default:\n          console.log('未知操作:', action)\n      }\n    },\n    viewHomework(student) {\n      this.$message.info(`查看 ${student.realName || '学生'} 的作业`)\n    },\n    viewSchedule(student) {\n      this.$message.info(`查看 ${student.realName || '学生'} 的课表`)\n    },\n    viewGrades(student) {\n      this.$message.info(`查看 ${student.realName || '学生'} 的成绩记录`)\n    },\n    viewVocabulary(student) {\n      this.$message.info(`查看 ${student.realName || '学生'} 的单词详情`)\n    },\n    handleCommand(command) {\n      switch (command.type) {\n        case 'edit':\n          this.handleEdit(command.data)\n          break\n        case 'level':\n          this.handleLevelAdjust(command.data)\n          break\n        case 'parent':\n          this.handleViewParent(command.data)\n          break\n        case 'progress':\n          this.handleViewProgress(command.data)\n          break\n        case 'reward':\n          this.handleReward(command.data)\n          break\n        case 'delete':\n          this.handleDelete(command.data)\n          break\n      }\n    },\n    handleEdit(student) {\n      this.isEdit = true\n      this.currentStudent = student\n      this.studentForm = { ...student }\n      this.dialogVisible = true\n    },\n    handleLevelAdjust(student) {\n      this.currentStudent = student\n      this.levelForm.level = student.level\n      this.levelDialogVisible = true\n    },\n    async handleViewParent(student) {\n      try {\n        const response = await studentApi.getParentInfo(student.id)\n        if (response.code === 200) {\n          this.parentInfo = response.data || {}\n          this.parentDialogVisible = true\n        }\n      } catch (error) {\n        this.$message.error('加载家长信息失败')\n      }\n    },\n    async handleViewProgress(student) {\n      try {\n        const response = await studentApi.getLearningProgress(student.id)\n        if (response.code === 200) {\n          this.progressInfo = response.data || {}\n          this.progressDialogVisible = true\n        }\n      } catch (error) {\n        this.$message.error('加载学习进度失败')\n      }\n    },\n    handleReward(student) {\n      this.$message.info('邀请奖励功能开发中...')\n    },\n    async handleSubmit() {\n      try {\n        await this.$refs.studentForm.validate()\n        this.submitting = true\n        \n        const response = this.isEdit \n          ? await studentApi.updateStudent(this.currentStudent.id, this.studentForm)\n          : await studentApi.createStudent(this.studentForm)\n          \n        if (response.code === 200) {\n          this.$message.success(this.isEdit ? '更新成功' : '创建成功')\n          this.dialogVisible = false\n          this.loadStudents()\n          this.loadStatistics()\n        } else {\n          this.$message.error(response.message || '操作失败')\n        }\n      } catch (error) {\n        if (error !== false) { // 不是表单验证错误\n          this.$message.error('操作失败')\n        }\n      } finally {\n        this.submitting = false\n      }\n    },\n    async handleLevelSubmit() {\n      if (!this.levelForm.level) {\n        this.$message.warning('请选择新等级')\n        return\n      }\n      \n      this.submitting = true\n      try {\n        const response = await studentApi.updateLevel(this.currentStudent.id, {\n          level: this.levelForm.level\n        })\n        if (response.code === 200) {\n          this.$message.success('等级调整成功')\n          this.levelDialogVisible = false\n          this.loadStudents()\n          this.loadStatistics()\n        } else {\n          this.$message.error(response.message || '调整失败')\n        }\n      } catch (error) {\n        this.$message.error('调整失败')\n      } finally {\n        this.submitting = false\n      }\n    },\n    async handleDelete(student) {\n      try {\n        await this.$confirm('确定要删除该学生吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        const response = await studentApi.deleteStudent(student.id)\n        if (response.code === 200) {\n          this.$message.success('删除成功')\n          this.loadStudents()\n          this.loadStatistics()\n        } else {\n          this.$message.error(response.message || '删除失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败')\n        }\n      }\n    },\n    async handleBatchUpgrade() {\n      if (this.selectedStudents.length === 0) {\n        this.$message.warning('请先选择学生')\n        return\n      }\n      \n      try {\n        await this.$confirm('确定要进行批量等级升级吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        const response = await studentApi.autoUpgradeLevel()\n        if (response.code === 200) {\n          this.$message.success('批量升级成功')\n          this.loadStudents()\n          this.loadStatistics()\n        } else {\n          this.$message.error(response.message || '升级失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('升级失败')\n        }\n      }\n    },\n    async handleBatchDelete() {\n      if (this.selectedStudents.length === 0) {\n        this.$message.warning('请先选择学生')\n        return\n      }\n      \n      try {\n        await this.$confirm(`确定要删除选中的 ${this.selectedStudents.length} 个学生吗？`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        // 批量删除逻辑\n        for (const student of this.selectedStudents) {\n          await studentApi.deleteStudent(student.id)\n        }\n        \n        this.$message.success('批量删除成功')\n        this.loadStudents()\n        this.loadStatistics()\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('批量删除失败')\n        }\n      }\n    },\n    handleExport() {\n      this.$message.info('导出功能开发中...')\n    },\n    resetForm() {\n      this.$refs.studentForm?.resetFields()\n      this.studentForm = {\n        studentNo: '',\n        realName: '',\n        grade: '',\n        school: '',\n        parentName: '',\n        parentPhone: '',\n        level: 1,\n        inviteCode: '',\n        provinceCode: '',\n        cityCode: '',\n        areaCode: ''\n      }\n      this.currentStudent = {}\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'pending': '暂缓中',\n        'active': '暂缓服务',\n        'completed': '已结课',\n        1: '暂缓中',\n        2: '暂缓服务',\n        3: '已结课'\n      }\n      return statusMap[status] || '暂缓中'\n    },\n    getStatusClass(status) {\n      const classMap = {\n        'pending': 'pending',\n        'active': 'active', \n        'completed': 'default',\n        1: 'pending',\n        2: 'active',\n        3: 'default'\n      }\n      return classMap[status] || 'pending'\n    },\n    getLevelText(level) {\n      const levelMap = {\n        1: '青铜',\n        2: '白银',\n        3: '黄金'\n      }\n      return levelMap[level] || '未知'\n    },\n    getLevelTagType(level) {\n      const typeMap = {\n        1: 'warning',\n        2: 'info',\n        3: 'success'\n      }\n      return typeMap[level] || 'info'\n    },\n    formatTime(time) {\n      if (!time) return '-'\n      return new Date(time).toLocaleDateString()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.students-container {\n  padding: 24px;\n  background-color: var(--background-color, #f8f9fa);\n  min-height: 100vh;\n}\n\n.student-info {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.course-type {\n  background: #e6f7ff;\n  color: var(--primary-color, #409eff);\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n/* 页面头部 */\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  background: var(--card-background, #ffffff);\n  padding: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--border-lighter, #ebeef5);\n  color: var(--text-primary, #303133);\n}\n\n.header-content .page-title {\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0 0 8px 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--text-primary, #303133);\n}\n\n.header-content .page-description {\n  font-size: 14px;\n  color: var(--text-secondary, #909399);\n  margin: 0;\n}\n\n.header-actions {\n  display: flex;\n  gap: 12px;\n}\n\n/* 使用全局统计卡片样式 */\n.stats-grid {\n  margin-bottom: 16px;\n}\n\n/* 搜索筛选 */\n.search-container {\n  margin-bottom: 16px;\n}\n\n/* 表格 */\n.table-container {\n  margin-bottom: 16px;\n}\n\n.amount-text {\n  color: #e74c3c;\n  font-weight: 600;\n}\n\n.pagination-wrapper {\n  padding: 16px 24px;\n  background: var(--card-background, #ffffff);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-top: 1px solid var(--border-lighter, #ebeef5);\n}\n\n.pagination-info {\n  color: var(--text-secondary, #909399);\n  font-size: 14px;\n}\n\n/* 批量操作 */\n.batch-actions {\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 1000;\n}\n\n.batch-actions .el-card {\n  padding: 8px 24px;\n  border-radius: 30px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n}\n\n/* 家长信息 */\n.parent-info {\n  margin: 16px 0;\n}\n\n/* 学习进度 */\n.progress-info {\n  margin: 16px 0;\n}\n\n.progress-stats {\n  margin-bottom: 24px;\n}\n\n.progress-card {\n  text-align: center;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n}\n\n.progress-value {\n  font-size: 24px;\n  font-weight: 700;\n  color: #2c3e50;\n  margin-bottom: 4px;\n}\n\n.progress-label {\n  font-size: 12px;\n  color: #7f8c8d;\n}\n\n.progress-chart {\n  margin-top: 20px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .students-container {\n    padding: 16px;\n  }\n  \n  .page-header {\n    flex-direction: column;\n    text-align: center;\n    gap: 16px;\n  }\n  \n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .header-actions {\n    flex-direction: column;\n    width: 100%;\n  }\n  \n  .search-form {\n    flex-direction: column;\n  }\n  \n  .pagination-wrapper {\n    flex-direction: column;\n    gap: 12px;\n    text-align: center;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}