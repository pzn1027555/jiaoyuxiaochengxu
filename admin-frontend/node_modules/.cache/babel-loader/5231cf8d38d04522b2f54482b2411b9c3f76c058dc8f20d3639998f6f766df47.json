{"ast":null,"code":"export default {\n  name: 'Exams',\n  data() {\n    return {\n      loading: false,\n      showCreateDialog: false,\n      showStudentsDialog: false,\n      showResultsDialog: false,\n      editMode: false,\n      currentRow: null,\n      currentExamStudents: [],\n      currentExamResults: null,\n      // 筛选表单\n      filterForm: {\n        examName: '',\n        examType: '',\n        subject: '',\n        status: '',\n        dateRange: []\n      },\n      // 分页数据\n      pagination: {\n        currentPage: 1,\n        pageSize: 20,\n        total: 0\n      },\n      // 表格数据\n      tableData: [{\n        id: 1,\n        examName: 'IGCSE数学期末考试',\n        examType: 'igcse',\n        subject: '数学',\n        examDate: '2024-01-20',\n        duration: 120,\n        totalStudents: 25,\n        submittedCount: 25,\n        averageScore: 78.5,\n        status: 'completed',\n        createTime: '2024-01-10 14:30:00'\n      }, {\n        id: 2,\n        examName: 'A-Level物理模拟考',\n        examType: 'a-level',\n        subject: 'AS物理',\n        examDate: '2024-01-25',\n        duration: 90,\n        totalStudents: 18,\n        submittedCount: 0,\n        averageScore: null,\n        status: 'pending',\n        createTime: '2024-01-15 09:15:00'\n      }],\n      // 学生列表\n      studentList: [{\n        id: 1,\n        name: '陈舍'\n      }, {\n        id: 2,\n        name: '孙小涵'\n      }, {\n        id: 3,\n        name: 'Bella'\n      }, {\n        id: 4,\n        name: 'Duoduo'\n      }, {\n        id: 5,\n        name: 'Camellia'\n      }],\n      // 表单数据\n      formData: {\n        examName: '',\n        examType: '',\n        subject: '',\n        examDate: '',\n        duration: 120,\n        description: '',\n        students: []\n      },\n      // 表单验证规则\n      formRules: {\n        examName: [{\n          required: true,\n          message: '请输入考试名称',\n          trigger: 'blur'\n        }],\n        examType: [{\n          required: true,\n          message: '请选择考试类型',\n          trigger: 'change'\n        }],\n        subject: [{\n          required: true,\n          message: '请选择科目',\n          trigger: 'change'\n        }],\n        examDate: [{\n          required: true,\n          message: '请选择考试时间',\n          trigger: 'change'\n        }],\n        duration: [{\n          required: true,\n          message: '请输入考试时长',\n          trigger: 'blur'\n        }],\n        students: [{\n          required: true,\n          message: '请选择参考学生',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: {\n    dialogTitle() {\n      return this.editMode ? '编辑考试' : '创建考试';\n    }\n  },\n  mounted() {\n    this.loadData();\n  },\n  methods: {\n    // 加载数据\n    loadData() {\n      this.loading = true;\n      // 模拟API调用\n      setTimeout(() => {\n        this.pagination.total = this.tableData.length;\n        this.loading = false;\n      }, 500);\n    },\n    // 搜索\n    handleSearch() {\n      console.log('搜索参数:', this.filterForm);\n      this.loadData();\n    },\n    // 重置\n    handleReset() {\n      this.filterForm = {\n        examName: '',\n        examType: '',\n        subject: '',\n        status: '',\n        dateRange: []\n      };\n      this.loadData();\n    },\n    // 分页\n    handleSizeChange(val) {\n      this.pagination.pageSize = val;\n      this.loadData();\n    },\n    handleCurrentChange(val) {\n      this.pagination.currentPage = val;\n      this.loadData();\n    },\n    // 状态相关方法\n    getExamTypeColor(type) {\n      const colorMap = {\n        igcse: 'primary',\n        'a-level': 'success',\n        mock: 'warning',\n        stage: 'info'\n      };\n      return colorMap[type] || 'info';\n    },\n    getExamTypeText(type) {\n      const textMap = {\n        igcse: 'IGCSE',\n        'a-level': 'A-Level',\n        mock: '模拟考试',\n        stage: '阶段测试'\n      };\n      return textMap[type] || '未知';\n    },\n    getStatusType(status) {\n      const statusMap = {\n        pending: 'warning',\n        ongoing: 'primary',\n        completed: 'success',\n        cancelled: 'danger'\n      };\n      return statusMap[status] || 'info';\n    },\n    getStatusText(status) {\n      const statusMap = {\n        pending: '未开始',\n        ongoing: '进行中',\n        completed: '已完成',\n        cancelled: '已取消'\n      };\n      return statusMap[status] || '未知';\n    },\n    // 操作方法\n    handleView(row) {\n      this.$message.info(`查看考试：${row.examName}`);\n    },\n    handleEdit(row) {\n      this.editMode = true;\n      this.currentRow = row;\n      this.formData = {\n        examName: row.examName,\n        examType: row.examType,\n        subject: row.subject,\n        examDate: row.examDate + ' 09:00:00',\n        duration: row.duration,\n        description: '',\n        students: [1, 2, 3]\n      };\n      this.showCreateDialog = true;\n    },\n    handleStudents(row) {\n      this.currentExamStudents = [{\n        studentName: '陈舍',\n        studentId: 'S001',\n        class: '数学A班',\n        submitTime: '2024-01-20 10:30:00',\n        score: 85,\n        status: 'submitted'\n      }, {\n        studentName: '孙小涵',\n        studentId: 'S002',\n        class: '数学A班',\n        submitTime: '2024-01-20 10:25:00',\n        score: 92,\n        status: 'submitted'\n      }];\n      this.showStudentsDialog = true;\n    },\n    handleResults(row) {\n      this.currentExamResults = {\n        totalStudents: 25,\n        averageScore: 78.5,\n        highestScore: 95,\n        passRate: 88\n      };\n      this.showResultsDialog = true;\n    },\n    handleGrading(row) {\n      this.$message.info(`为${row.studentName}评分`);\n    },\n    handleDelete(row) {\n      this.$confirm(`确定要删除考试\"${row.examName}\"吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message.success('删除成功');\n        this.loadData();\n      });\n    },\n    // 表单提交\n    handleSubmit() {\n      this.$refs.examForm.validate(valid => {\n        if (valid) {\n          console.log('提交数据:', this.formData);\n          this.$message.success(this.editMode ? '更新成功' : '创建成功');\n          this.showCreateDialog = false;\n          this.loadData();\n        }\n      });\n    },\n    // 重置表单\n    resetForm() {\n      this.editMode = false;\n      this.currentRow = null;\n      this.formData = {\n        examName: '',\n        examType: '',\n        subject: '',\n        examDate: '',\n        duration: 120,\n        description: '',\n        students: []\n      };\n      if (this.$refs.examForm) {\n        this.$refs.examForm.resetFields();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","loading","showCreateDialog","showStudentsDialog","showResultsDialog","editMode","currentRow","currentExamStudents","currentExamResults","filterForm","examName","examType","subject","status","dateRange","pagination","currentPage","pageSize","total","tableData","id","examDate","duration","totalStudents","submittedCount","averageScore","createTime","studentList","formData","description","students","formRules","required","message","trigger","computed","dialogTitle","mounted","loadData","methods","setTimeout","length","handleSearch","console","log","handleReset","handleSizeChange","val","handleCurrentChange","getExamTypeColor","type","colorMap","igcse","mock","stage","getExamTypeText","textMap","getStatusType","statusMap","pending","ongoing","completed","cancelled","getStatusText","handleView","row","$message","info","handleEdit","handleStudents","studentName","studentId","class","submitTime","score","handleResults","highestScore","passRate","handleGrading","handleDelete","$confirm","confirmButtonText","cancelButtonText","then","success","handleSubmit","$refs","examForm","validate","valid","resetForm","resetFields"],"sources":["src/views/education/Exams.vue"],"sourcesContent":["<template>\r\n  <div class=\"exams-page\">\r\n    <!-- 页面头部 -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <h2 class=\"page-title\">\r\n          <i class=\"el-icon-document\" />\r\n          考试管理\r\n        </h2>\r\n        <p class=\"page-description\">管理各类考试安排、成绩录入和分析</p>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showCreateDialog = true\">\r\n          创建考试\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 筛选区域 -->\r\n    <div class=\"filter-section\">\r\n      <el-card class=\"filter-card\">\r\n        <el-form :model=\"filterForm\" :inline=\"true\" class=\"filter-form\">\r\n          <el-form-item label=\"考试名称\">\r\n            <el-input\r\n              v-model=\"filterForm.examName\"\r\n              placeholder=\"请输入考试名称\"\r\n              clearable\r\n              style=\"width: 200px\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"考试类型\">\r\n            <el-select\r\n              v-model=\"filterForm.examType\"\r\n              placeholder=\"请选择考试类型\"\r\n              clearable\r\n              style=\"width: 150px\"\r\n            >\r\n              <el-option label=\"IGCSE\" value=\"igcse\" />\r\n              <el-option label=\"A-Level\" value=\"a-level\" />\r\n              <el-option label=\"模拟考试\" value=\"mock\" />\r\n              <el-option label=\"阶段测试\" value=\"stage\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"科目\">\r\n            <el-select\r\n              v-model=\"filterForm.subject\"\r\n              placeholder=\"请选择科目\"\r\n              clearable\r\n              style=\"width: 120px\"\r\n            >\r\n              <el-option label=\"数学\" value=\"math\" />\r\n              <el-option label=\"物理\" value=\"physics\" />\r\n              <el-option label=\"化学\" value=\"chemistry\" />\r\n              <el-option label=\"AS物理\" value=\"as_physics\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"考试状态\">\r\n            <el-select\r\n              v-model=\"filterForm.status\"\r\n              placeholder=\"请选择状态\"\r\n              clearable\r\n              style=\"width: 120px\"\r\n            >\r\n              <el-option label=\"未开始\" value=\"pending\" />\r\n              <el-option label=\"进行中\" value=\"ongoing\" />\r\n              <el-option label=\"已完成\" value=\"completed\" />\r\n              <el-option label=\"已取消\" value=\"cancelled\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"考试时间\">\r\n            <el-date-picker\r\n              v-model=\"filterForm.dateRange\"\r\n              type=\"daterange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              format=\"yyyy-MM-dd\"\r\n              value-format=\"yyyy-MM-dd\"\r\n              style=\"width: 250px\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">\r\n              搜索\r\n            </el-button>\r\n            <el-button icon=\"el-icon-refresh\" @click=\"handleReset\">\r\n              重置\r\n            </el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 数据表格 -->\r\n    <div class=\"table-section\">\r\n      <el-card class=\"table-card\">\r\n        <el-table\r\n          v-loading=\"loading\"\r\n          :data=\"tableData\"\r\n          stripe\r\n          class=\"exams-table\"\r\n        >\r\n          <el-table-column type=\"index\" label=\"序号\" width=\"60\" />\r\n          <el-table-column prop=\"examName\" label=\"考试名称\" min-width=\"200\" show-overflow-tooltip />\r\n          <el-table-column prop=\"examType\" label=\"考试类型\" width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag :type=\"getExamTypeColor(scope.row.examType)\" size=\"small\">\r\n                {{ getExamTypeText(scope.row.examType) }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"subject\" label=\"科目\" width=\"100\" />\r\n          <el-table-column prop=\"examDate\" label=\"考试日期\" width=\"120\" />\r\n          <el-table-column prop=\"duration\" label=\"考试时长\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              {{ scope.row.duration }}分钟\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"totalStudents\" label=\"参考人数\" width=\"100\" />\r\n          <el-table-column prop=\"submittedCount\" label=\"已提交\" width=\"100\" />\r\n          <el-table-column prop=\"averageScore\" label=\"平均分\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <span v-if=\"scope.row.averageScore !== null\">\r\n                {{ scope.row.averageScore }}分\r\n              </span>\r\n              <span v-else class=\"text-muted\">-</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag :type=\"getStatusType(scope.row.status)\" size=\"small\">\r\n                {{ getStatusText(scope.row.status) }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"140\" />\r\n          <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button size=\"mini\" type=\"text\" @click=\"handleView(scope.row)\">\r\n                查看\r\n              </el-button>\r\n              <el-button \r\n                v-if=\"scope.row.status === 'pending'\" \r\n                size=\"mini\" \r\n                type=\"text\" \r\n                @click=\"handleEdit(scope.row)\"\r\n              >\r\n                编辑\r\n              </el-button>\r\n              <el-button size=\"mini\" type=\"text\" @click=\"handleStudents(scope.row)\">\r\n                学生列表\r\n              </el-button>\r\n              <el-button \r\n                v-if=\"scope.row.status === 'completed'\" \r\n                size=\"mini\" \r\n                type=\"text\" \r\n                @click=\"handleResults(scope.row)\"\r\n              >\r\n                成绩分析\r\n              </el-button>\r\n              <el-button\r\n                size=\"mini\"\r\n                type=\"text\"\r\n                class=\"danger-text\"\r\n                @click=\"handleDelete(scope.row)\"\r\n              >\r\n                删除\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 分页 -->\r\n        <div class=\"pagination-wrapper\">\r\n          <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pagination.currentPage\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            :page-size=\"pagination.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"pagination.total\"\r\n          />\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 创建/编辑对话框 -->\r\n    <el-dialog\r\n      :title=\"dialogTitle\"\r\n      :visible.sync=\"showCreateDialog\"\r\n      width=\"700px\"\r\n      @close=\"resetForm\"\r\n    >\r\n      <el-form\r\n        ref=\"examForm\"\r\n        :model=\"formData\"\r\n        :rules=\"formRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"考试名称\" prop=\"examName\">\r\n          <el-input v-model=\"formData.examName\" placeholder=\"请输入考试名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"考试类型\" prop=\"examType\">\r\n          <el-select v-model=\"formData.examType\" placeholder=\"请选择考试类型\" style=\"width: 100%\">\r\n            <el-option label=\"IGCSE\" value=\"igcse\" />\r\n            <el-option label=\"A-Level\" value=\"a-level\" />\r\n            <el-option label=\"模拟考试\" value=\"mock\" />\r\n            <el-option label=\"阶段测试\" value=\"stage\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"科目\" prop=\"subject\">\r\n          <el-select v-model=\"formData.subject\" placeholder=\"请选择科目\" style=\"width: 100%\">\r\n            <el-option label=\"数学\" value=\"数学\" />\r\n            <el-option label=\"物理\" value=\"物理\" />\r\n            <el-option label=\"化学\" value=\"化学\" />\r\n            <el-option label=\"AS物理\" value=\"AS物理\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"考试时间\" prop=\"examDate\">\r\n          <el-date-picker\r\n            v-model=\"formData.examDate\"\r\n            type=\"datetime\"\r\n            placeholder=\"选择考试时间\"\r\n            format=\"yyyy-MM-dd HH:mm\"\r\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"考试时长\" prop=\"duration\">\r\n          <el-input-number\r\n            v-model=\"formData.duration\"\r\n            :min=\"30\"\r\n            :max=\"300\"\r\n            :step=\"15\"\r\n            controls-position=\"right\"\r\n            style=\"width: 100%\"\r\n          />\r\n          <span style=\"margin-left: 8px;\">分钟</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"考试说明\" prop=\"description\">\r\n          <el-input\r\n            v-model=\"formData.description\"\r\n            type=\"textarea\"\r\n            :rows=\"4\"\r\n            placeholder=\"请输入考试说明\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"参考学生\" prop=\"students\">\r\n          <el-select\r\n            v-model=\"formData.students\"\r\n            multiple\r\n            placeholder=\"请选择参考学生\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-option\r\n              v-for=\"student in studentList\"\r\n              :key=\"student.id\"\r\n              :label=\"student.name\"\r\n              :value=\"student.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"showCreateDialog = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 学生列表对话框 -->\r\n    <el-dialog\r\n      title=\"参考学生列表\"\r\n      :visible.sync=\"showStudentsDialog\"\r\n      width=\"800px\"\r\n    >\r\n      <el-table :data=\"currentExamStudents\" stripe>\r\n        <el-table-column type=\"index\" label=\"序号\" width=\"60\" />\r\n        <el-table-column prop=\"studentName\" label=\"学生姓名\" width=\"120\" />\r\n        <el-table-column prop=\"studentId\" label=\"学号\" width=\"120\" />\r\n        <el-table-column prop=\"class\" label=\"班级\" width=\"100\" />\r\n        <el-table-column prop=\"submitTime\" label=\"提交时间\" width=\"140\" />\r\n        <el-table-column prop=\"score\" label=\"成绩\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <span v-if=\"scope.row.score !== null\">{{ scope.row.score }}分</span>\r\n            <span v-else class=\"text-muted\">未评分</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag \r\n              :type=\"scope.row.status === 'submitted' ? 'success' : 'warning'\" \r\n              size=\"small\"\r\n            >\r\n              {{ scope.row.status === 'submitted' ? '已提交' : '未提交' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button \r\n              v-if=\"scope.row.status === 'submitted'\" \r\n              size=\"mini\" \r\n              type=\"text\" \r\n              @click=\"handleGrading(scope.row)\"\r\n            >\r\n              评分\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-dialog>\r\n\r\n    <!-- 成绩分析对话框 -->\r\n    <el-dialog\r\n      title=\"成绩分析\"\r\n      :visible.sync=\"showResultsDialog\"\r\n      width=\"900px\"\r\n    >\r\n      <div class=\"results-content\" v-if=\"currentExamResults\">\r\n        <div class=\"results-summary\">\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"6\">\r\n              <div class=\"result-item\">\r\n                <div class=\"result-number\">{{ currentExamResults.totalStudents }}</div>\r\n                <div class=\"result-label\">参考人数</div>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div class=\"result-item\">\r\n                <div class=\"result-number\">{{ currentExamResults.averageScore }}</div>\r\n                <div class=\"result-label\">平均分</div>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div class=\"result-item\">\r\n                <div class=\"result-number\">{{ currentExamResults.highestScore }}</div>\r\n                <div class=\"result-label\">最高分</div>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div class=\"result-item\">\r\n                <div class=\"result-number\">{{ currentExamResults.passRate }}%</div>\r\n                <div class=\"result-label\">及格率</div>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n        \r\n        <div class=\"results-charts\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">\r\n              <span>成绩分布</span>\r\n            </div>\r\n            <div class=\"chart-placeholder\">\r\n              <i class=\"el-icon-s-data\" style=\"font-size: 48px; color: #ccc;\" />\r\n              <p>成绩分布图表</p>\r\n            </div>\r\n          </el-card>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Exams',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      showCreateDialog: false,\r\n      showStudentsDialog: false,\r\n      showResultsDialog: false,\r\n      editMode: false,\r\n      currentRow: null,\r\n      currentExamStudents: [],\r\n      currentExamResults: null,\r\n      \r\n      // 筛选表单\r\n      filterForm: {\r\n        examName: '',\r\n        examType: '',\r\n        subject: '',\r\n        status: '',\r\n        dateRange: []\r\n      },\r\n      \r\n      // 分页数据\r\n      pagination: {\r\n        currentPage: 1,\r\n        pageSize: 20,\r\n        total: 0\r\n      },\r\n      \r\n      // 表格数据\r\n      tableData: [\r\n        {\r\n          id: 1,\r\n          examName: 'IGCSE数学期末考试',\r\n          examType: 'igcse',\r\n          subject: '数学',\r\n          examDate: '2024-01-20',\r\n          duration: 120,\r\n          totalStudents: 25,\r\n          submittedCount: 25,\r\n          averageScore: 78.5,\r\n          status: 'completed',\r\n          createTime: '2024-01-10 14:30:00'\r\n        },\r\n        {\r\n          id: 2,\r\n          examName: 'A-Level物理模拟考',\r\n          examType: 'a-level',\r\n          subject: 'AS物理',\r\n          examDate: '2024-01-25',\r\n          duration: 90,\r\n          totalStudents: 18,\r\n          submittedCount: 0,\r\n          averageScore: null,\r\n          status: 'pending',\r\n          createTime: '2024-01-15 09:15:00'\r\n        }\r\n      ],\r\n      \r\n      // 学生列表\r\n      studentList: [\r\n        { id: 1, name: '陈舍' },\r\n        { id: 2, name: '孙小涵' },\r\n        { id: 3, name: 'Bella' },\r\n        { id: 4, name: 'Duoduo' },\r\n        { id: 5, name: 'Camellia' }\r\n      ],\r\n      \r\n      // 表单数据\r\n      formData: {\r\n        examName: '',\r\n        examType: '',\r\n        subject: '',\r\n        examDate: '',\r\n        duration: 120,\r\n        description: '',\r\n        students: []\r\n      },\r\n      \r\n      // 表单验证规则\r\n      formRules: {\r\n        examName: [\r\n          { required: true, message: '请输入考试名称', trigger: 'blur' }\r\n        ],\r\n        examType: [\r\n          { required: true, message: '请选择考试类型', trigger: 'change' }\r\n        ],\r\n        subject: [\r\n          { required: true, message: '请选择科目', trigger: 'change' }\r\n        ],\r\n        examDate: [\r\n          { required: true, message: '请选择考试时间', trigger: 'change' }\r\n        ],\r\n        duration: [\r\n          { required: true, message: '请输入考试时长', trigger: 'blur' }\r\n        ],\r\n        students: [\r\n          { required: true, message: '请选择参考学生', trigger: 'change' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dialogTitle() {\r\n      return this.editMode ? '编辑考试' : '创建考试'\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadData()\r\n  },\r\n  methods: {\r\n    // 加载数据\r\n    loadData() {\r\n      this.loading = true\r\n      // 模拟API调用\r\n      setTimeout(() => {\r\n        this.pagination.total = this.tableData.length\r\n        this.loading = false\r\n      }, 500)\r\n    },\r\n    \r\n    // 搜索\r\n    handleSearch() {\r\n      console.log('搜索参数:', this.filterForm)\r\n      this.loadData()\r\n    },\r\n    \r\n    // 重置\r\n    handleReset() {\r\n      this.filterForm = {\r\n        examName: '',\r\n        examType: '',\r\n        subject: '',\r\n        status: '',\r\n        dateRange: []\r\n      }\r\n      this.loadData()\r\n    },\r\n    \r\n    // 分页\r\n    handleSizeChange(val) {\r\n      this.pagination.pageSize = val\r\n      this.loadData()\r\n    },\r\n    \r\n    handleCurrentChange(val) {\r\n      this.pagination.currentPage = val\r\n      this.loadData()\r\n    },\r\n    \r\n    // 状态相关方法\r\n    getExamTypeColor(type) {\r\n      const colorMap = {\r\n        igcse: 'primary',\r\n        'a-level': 'success',\r\n        mock: 'warning',\r\n        stage: 'info'\r\n      }\r\n      return colorMap[type] || 'info'\r\n    },\r\n    \r\n    getExamTypeText(type) {\r\n      const textMap = {\r\n        igcse: 'IGCSE',\r\n        'a-level': 'A-Level',\r\n        mock: '模拟考试',\r\n        stage: '阶段测试'\r\n      }\r\n      return textMap[type] || '未知'\r\n    },\r\n    \r\n    getStatusType(status) {\r\n      const statusMap = {\r\n        pending: 'warning',\r\n        ongoing: 'primary',\r\n        completed: 'success',\r\n        cancelled: 'danger'\r\n      }\r\n      return statusMap[status] || 'info'\r\n    },\r\n    \r\n    getStatusText(status) {\r\n      const statusMap = {\r\n        pending: '未开始',\r\n        ongoing: '进行中',\r\n        completed: '已完成',\r\n        cancelled: '已取消'\r\n      }\r\n      return statusMap[status] || '未知'\r\n    },\r\n    \r\n    // 操作方法\r\n    handleView(row) {\r\n      this.$message.info(`查看考试：${row.examName}`)\r\n    },\r\n    \r\n    handleEdit(row) {\r\n      this.editMode = true\r\n      this.currentRow = row\r\n      this.formData = {\r\n        examName: row.examName,\r\n        examType: row.examType,\r\n        subject: row.subject,\r\n        examDate: row.examDate + ' 09:00:00',\r\n        duration: row.duration,\r\n        description: '',\r\n        students: [1, 2, 3]\r\n      }\r\n      this.showCreateDialog = true\r\n    },\r\n    \r\n    handleStudents(row) {\r\n      this.currentExamStudents = [\r\n        {\r\n          studentName: '陈舍',\r\n          studentId: 'S001',\r\n          class: '数学A班',\r\n          submitTime: '2024-01-20 10:30:00',\r\n          score: 85,\r\n          status: 'submitted'\r\n        },\r\n        {\r\n          studentName: '孙小涵',\r\n          studentId: 'S002',\r\n          class: '数学A班',\r\n          submitTime: '2024-01-20 10:25:00',\r\n          score: 92,\r\n          status: 'submitted'\r\n        }\r\n      ]\r\n      this.showStudentsDialog = true\r\n    },\r\n    \r\n    handleResults(row) {\r\n      this.currentExamResults = {\r\n        totalStudents: 25,\r\n        averageScore: 78.5,\r\n        highestScore: 95,\r\n        passRate: 88\r\n      }\r\n      this.showResultsDialog = true\r\n    },\r\n    \r\n    handleGrading(row) {\r\n      this.$message.info(`为${row.studentName}评分`)\r\n    },\r\n    \r\n    handleDelete(row) {\r\n      this.$confirm(`确定要删除考试\"${row.examName}\"吗？`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$message.success('删除成功')\r\n        this.loadData()\r\n      })\r\n    },\r\n    \r\n    // 表单提交\r\n    handleSubmit() {\r\n      this.$refs.examForm.validate((valid) => {\r\n        if (valid) {\r\n          console.log('提交数据:', this.formData)\r\n          this.$message.success(this.editMode ? '更新成功' : '创建成功')\r\n          this.showCreateDialog = false\r\n          this.loadData()\r\n        }\r\n      })\r\n    },\r\n    \r\n    // 重置表单\r\n    resetForm() {\r\n      this.editMode = false\r\n      this.currentRow = null\r\n      this.formData = {\r\n        examName: '',\r\n        examType: '',\r\n        subject: '',\r\n        examDate: '',\r\n        duration: 120,\r\n        description: '',\r\n        students: []\r\n      }\r\n      if (this.$refs.examForm) {\r\n        this.$refs.examForm.resetFields()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.exams-page {\r\n  padding: 20px;\r\n  background: #f5f7fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header-content {\r\n  flex: 1;\r\n}\r\n\r\n.page-title {\r\n  margin: 0 0 8px 0;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.page-title i {\r\n  font-size: 28px;\r\n  color: #1890ff;\r\n}\r\n\r\n.page-description {\r\n  margin: 0;\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n\r\n.header-actions {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.filter-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-card {\r\n  border: 1px solid #e4e7ed;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.filter-form {\r\n  margin: 0;\r\n}\r\n\r\n.table-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.table-card {\r\n  border: 1px solid #e4e7ed;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.exams-table {\r\n  width: 100%;\r\n}\r\n\r\n.pagination-wrapper {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n\r\n.danger-text {\r\n  color: #f56c6c;\r\n}\r\n\r\n.danger-text:hover {\r\n  color: #f78989;\r\n}\r\n\r\n.text-muted {\r\n  color: #999;\r\n}\r\n\r\n.results-content {\r\n  padding: 10px 0;\r\n}\r\n\r\n.results-summary {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.result-item {\r\n  text-align: center;\r\n  padding: 20px;\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n  border: 1px solid #e9ecef;\r\n}\r\n\r\n.result-number {\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  color: #1890ff;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.result-label {\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.chart-card {\r\n  margin-top: 20px;\r\n}\r\n\r\n.chart-placeholder {\r\n  height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #999;\r\n}\r\n\r\n.chart-placeholder p {\r\n  margin: 10px 0 0 0;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .exams-page {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .page-header {\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .filter-form .el-form-item {\r\n    margin-right: 0;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .filter-form .el-input,\r\n  .filter-form .el-select,\r\n  .filter-form .el-date-picker {\r\n    width: 100% !important;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}