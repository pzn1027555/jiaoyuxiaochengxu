{"ast":null,"code":"import axios from 'axios';\nimport { Message } from 'element-ui';\n\n// 创建axios实例\nconst request = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\nrequest.interceptors.request.use(config => {\n  // 添加token到请求头\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nrequest.interceptors.response.use(response => {\n  const res = response.data;\n\n  // 如果返回的状态码不是200，则显示错误信息\n  if (res.code !== 200) {\n    Message({\n      message: res.message || '请求失败',\n      type: 'error',\n      duration: 5 * 1000\n    });\n\n    // 如果是401，跳转到登录页\n    if (res.code === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(new Error(res.message || '请求失败'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.error('API请求错误:', error);\n  let message = '请求失败';\n  if (error.response) {\n    message = error.response.data?.message || `请求失败(${error.response.status})`;\n  } else if (error.request) {\n    message = '网络连接失败';\n  }\n  Message({\n    message: message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default request;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}