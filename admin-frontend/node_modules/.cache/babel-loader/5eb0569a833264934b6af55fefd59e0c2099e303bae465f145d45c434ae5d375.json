{"ast":null,"code":"export default {\n  name: 'MySchedule',\n  data() {\n    return {\n      selectedDate: new Date(),\n      timeSlots: ['08:00', '09:00', '10:00', '11:00', '14:00', '15:00', '16:00', '17:00', '19:00', '20:00', '21:00'],\n      scheduleData: [{\n        date: '2024-07-22',\n        time: '09:00',\n        title: '高二数学提高班',\n        students: 25,\n        duration: 90,\n        color: '#409eff'\n      }, {\n        date: '2024-07-22',\n        time: '14:00',\n        title: '初三物理竞赛班',\n        students: 18,\n        duration: 120,\n        color: '#67c23a'\n      }, {\n        date: '2024-07-23',\n        time: '10:00',\n        title: '高一英语基础班',\n        students: 30,\n        duration: 90,\n        color: '#e6a23c'\n      }, {\n        date: '2024-07-24',\n        time: '15:00',\n        title: '高三化学冲刺班',\n        students: 22,\n        duration: 120,\n        color: '#f56c6c'\n      }, {\n        date: '2024-07-25',\n        time: '09:00',\n        title: '初二数学基础班',\n        students: 28,\n        duration: 90,\n        color: '#909399'\n      }]\n    };\n  },\n  computed: {\n    weekDays() {\n      const days = [];\n      const start = this.getWeekStart(this.selectedDate);\n      const dayNames = ['周一', '周二', '周三', '周四', '周五', '周六', '周日'];\n      for (let i = 0; i < 7; i++) {\n        const date = new Date(start);\n        date.setDate(start.getDate() + i);\n        days.push({\n          name: dayNames[i],\n          date: date.toISOString().slice(0, 10)\n        });\n      }\n      return days;\n    },\n    weekStats() {\n      const weekCourses = this.scheduleData.filter(course => {\n        const courseDate = new Date(course.date);\n        const weekStart = this.getWeekStart(this.selectedDate);\n        const weekEnd = new Date(weekStart);\n        weekEnd.setDate(weekStart.getDate() + 6);\n        return courseDate >= weekStart && courseDate <= weekEnd;\n      });\n      return {\n        totalCourses: weekCourses.length,\n        totalHours: Math.round(weekCourses.reduce((sum, course) => sum + course.duration / 60, 0) * 10) / 10,\n        totalStudents: weekCourses.reduce((sum, course) => sum + course.students, 0),\n        avgRating: 4.6\n      };\n    }\n  },\n  methods: {\n    getWeekStart(date) {\n      const d = new Date(date);\n      const day = d.getDay();\n      const diff = d.getDate() - day + (day === 0 ? -6 : 1);\n      return new Date(d.setDate(diff));\n    },\n    getCourse(date, time) {\n      return this.scheduleData.find(course => course.date === date && course.time === time);\n    },\n    handleWeekChange(date) {\n      console.log('切换周:', date);\n    }\n  }\n};","map":{"version":3,"names":["name","data","selectedDate","Date","timeSlots","scheduleData","date","time","title","students","duration","color","computed","weekDays","days","start","getWeekStart","dayNames","i","setDate","getDate","push","toISOString","slice","weekStats","weekCourses","filter","course","courseDate","weekStart","weekEnd","totalCourses","length","totalHours","Math","round","reduce","sum","totalStudents","avgRating","methods","d","day","getDay","diff","getCourse","find","handleWeekChange","console","log"],"sources":["src/views/education/MySchedule.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-schedule-container\">\r\n    <div class=\"header\">\r\n      <h2>我的课表</h2>\r\n      <div class=\"date-controls\">\r\n        <el-date-picker\r\n          v-model=\"selectedDate\"\r\n          type=\"week\"\r\n          format=\"yyyy 第 WW 周\"\r\n          placeholder=\"选择周\"\r\n          @change=\"handleWeekChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <el-card>\r\n        <div class=\"schedule-wrapper\">\r\n          <div class=\"time-column\">\r\n            <div class=\"time-header\">时间</div>\r\n            <div \r\n              v-for=\"timeSlot in timeSlots\"\r\n              :key=\"timeSlot\"\r\n              class=\"time-slot\"\r\n            >\r\n              {{ timeSlot }}\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"days-grid\">\r\n            <div \r\n              v-for=\"day in weekDays\"\r\n              :key=\"day.date\"\r\n              class=\"day-column\"\r\n            >\r\n              <div class=\"day-header\">\r\n                <div class=\"day-name\">{{ day.name }}</div>\r\n                <div class=\"day-date\">{{ day.date }}</div>\r\n              </div>\r\n              \r\n              <div \r\n                v-for=\"(timeSlot, index) in timeSlots\"\r\n                :key=\"index\"\r\n                class=\"schedule-cell\"\r\n                :class=\"{ 'has-course': getCourse(day.date, timeSlot) }\"\r\n              >\r\n                <div \r\n                  v-if=\"getCourse(day.date, timeSlot)\"\r\n                  class=\"course-card\"\r\n                  :style=\"{ background: getCourse(day.date, timeSlot).color }\"\r\n                >\r\n                  <div class=\"course-title\">{{ getCourse(day.date, timeSlot).title }}</div>\r\n                  <div class=\"course-info\">{{ getCourse(day.date, timeSlot).students }}人</div>\r\n                  <div class=\"course-time\">{{ getCourse(day.date, timeSlot).duration }}分钟</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n\r\n      <!-- 课程统计 -->\r\n      <el-row :gutter=\"20\" class=\"statistics\">\r\n        <el-col :span=\"6\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-value\">{{ weekStats.totalCourses }}</div>\r\n              <div class=\"stat-label\">本周课程</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-value\">{{ weekStats.totalHours }}</div>\r\n              <div class=\"stat-label\">总课时</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-value\">{{ weekStats.totalStudents }}</div>\r\n              <div class=\"stat-label\">学生总数</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-value\">{{ weekStats.avgRating }}</div>\r\n              <div class=\"stat-label\">平均评分</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MySchedule',\r\n  data() {\r\n    return {\r\n      selectedDate: new Date(),\r\n      timeSlots: [\r\n        '08:00', '09:00', '10:00', '11:00', \r\n        '14:00', '15:00', '16:00', '17:00', \r\n        '19:00', '20:00', '21:00'\r\n      ],\r\n      scheduleData: [\r\n        {\r\n          date: '2024-07-22',\r\n          time: '09:00',\r\n          title: '高二数学提高班',\r\n          students: 25,\r\n          duration: 90,\r\n          color: '#409eff'\r\n        },\r\n        {\r\n          date: '2024-07-22',\r\n          time: '14:00',\r\n          title: '初三物理竞赛班',\r\n          students: 18,\r\n          duration: 120,\r\n          color: '#67c23a'\r\n        },\r\n        {\r\n          date: '2024-07-23',\r\n          time: '10:00',\r\n          title: '高一英语基础班',\r\n          students: 30,\r\n          duration: 90,\r\n          color: '#e6a23c'\r\n        },\r\n        {\r\n          date: '2024-07-24',\r\n          time: '15:00',\r\n          title: '高三化学冲刺班',\r\n          students: 22,\r\n          duration: 120,\r\n          color: '#f56c6c'\r\n        },\r\n        {\r\n          date: '2024-07-25',\r\n          time: '09:00',\r\n          title: '初二数学基础班',\r\n          students: 28,\r\n          duration: 90,\r\n          color: '#909399'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    weekDays() {\r\n      const days = []\r\n      const start = this.getWeekStart(this.selectedDate)\r\n      const dayNames = ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n      \r\n      for (let i = 0; i < 7; i++) {\r\n        const date = new Date(start)\r\n        date.setDate(start.getDate() + i)\r\n        days.push({\r\n          name: dayNames[i],\r\n          date: date.toISOString().slice(0, 10)\r\n        })\r\n      }\r\n      return days\r\n    },\r\n    weekStats() {\r\n      const weekCourses = this.scheduleData.filter(course => {\r\n        const courseDate = new Date(course.date)\r\n        const weekStart = this.getWeekStart(this.selectedDate)\r\n        const weekEnd = new Date(weekStart)\r\n        weekEnd.setDate(weekStart.getDate() + 6)\r\n        return courseDate >= weekStart && courseDate <= weekEnd\r\n      })\r\n\r\n      return {\r\n        totalCourses: weekCourses.length,\r\n        totalHours: Math.round(weekCourses.reduce((sum, course) => sum + course.duration / 60, 0) * 10) / 10,\r\n        totalStudents: weekCourses.reduce((sum, course) => sum + course.students, 0),\r\n        avgRating: 4.6\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getWeekStart(date) {\r\n      const d = new Date(date)\r\n      const day = d.getDay()\r\n      const diff = d.getDate() - day + (day === 0 ? -6 : 1)\r\n      return new Date(d.setDate(diff))\r\n    },\r\n    getCourse(date, time) {\r\n      return this.scheduleData.find(course => \r\n        course.date === date && course.time === time\r\n      )\r\n    },\r\n    handleWeekChange(date) {\r\n      console.log('切换周:', date)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.my-schedule-container {\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header h2 {\r\n  margin: 0;\r\n  color: #303133;\r\n}\r\n\r\n.schedule-wrapper {\r\n  display: flex;\r\n  min-height: 600px;\r\n}\r\n\r\n.time-column {\r\n  width: 80px;\r\n  border-right: 1px solid #ebeef5;\r\n}\r\n\r\n.time-header {\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  border-bottom: 1px solid #ebeef5;\r\n}\r\n\r\n.time-slot {\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 1px solid #ebeef5;\r\n  font-size: 12px;\r\n  color: #606266;\r\n}\r\n\r\n.days-grid {\r\n  flex: 1;\r\n  display: flex;\r\n}\r\n\r\n.day-column {\r\n  flex: 1;\r\n  border-right: 1px solid #ebeef5;\r\n}\r\n\r\n.day-column:last-child {\r\n  border-right: none;\r\n}\r\n\r\n.day-header {\r\n  height: 60px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 1px solid #ebeef5;\r\n  background: #f8f9fa;\r\n}\r\n\r\n.day-name {\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n}\r\n\r\n.day-date {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 2px;\r\n}\r\n\r\n.schedule-cell {\r\n  height: 60px;\r\n  border-bottom: 1px solid #ebeef5;\r\n  position: relative;\r\n  padding: 4px;\r\n}\r\n\r\n.course-card {\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  padding: 8px;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.course-card:hover {\r\n  transform: scale(1.02);\r\n}\r\n\r\n.course-title {\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  margin-bottom: 2px;\r\n  line-height: 1.2;\r\n}\r\n\r\n.course-info, .course-time {\r\n  font-size: 10px;\r\n  opacity: 0.9;\r\n}\r\n\r\n.statistics {\r\n  margin-top: 20px;\r\n}\r\n\r\n.stat-card {\r\n  text-align: center;\r\n}\r\n\r\n.stat-item {\r\n  padding: 15px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #409eff;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n</style>"],"mappings":"AAqGA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,YAAA,MAAAC,IAAA;MACAC,SAAA,GACA,oCACA,oCACA,0BACA;MACAC,YAAA,GACA;QACAC,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,QAAA;QACAC,KAAA;MACA,GACA;QACAL,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,QAAA;QACAC,KAAA;MACA,GACA;QACAL,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,QAAA;QACAC,KAAA;MACA,GACA;QACAL,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,QAAA;QACAC,KAAA;MACA,GACA;QACAL,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,QAAA;QACAC,KAAA;MACA;IAEA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,MAAAC,IAAA;MACA,MAAAC,KAAA,QAAAC,YAAA,MAAAd,YAAA;MACA,MAAAe,QAAA;MAEA,SAAAC,CAAA,MAAAA,CAAA,MAAAA,CAAA;QACA,MAAAZ,IAAA,OAAAH,IAAA,CAAAY,KAAA;QACAT,IAAA,CAAAa,OAAA,CAAAJ,KAAA,CAAAK,OAAA,KAAAF,CAAA;QACAJ,IAAA,CAAAO,IAAA;UACArB,IAAA,EAAAiB,QAAA,CAAAC,CAAA;UACAZ,IAAA,EAAAA,IAAA,CAAAgB,WAAA,GAAAC,KAAA;QACA;MACA;MACA,OAAAT,IAAA;IACA;IACAU,UAAA;MACA,MAAAC,WAAA,QAAApB,YAAA,CAAAqB,MAAA,CAAAC,MAAA;QACA,MAAAC,UAAA,OAAAzB,IAAA,CAAAwB,MAAA,CAAArB,IAAA;QACA,MAAAuB,SAAA,QAAAb,YAAA,MAAAd,YAAA;QACA,MAAA4B,OAAA,OAAA3B,IAAA,CAAA0B,SAAA;QACAC,OAAA,CAAAX,OAAA,CAAAU,SAAA,CAAAT,OAAA;QACA,OAAAQ,UAAA,IAAAC,SAAA,IAAAD,UAAA,IAAAE,OAAA;MACA;MAEA;QACAC,YAAA,EAAAN,WAAA,CAAAO,MAAA;QACAC,UAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAV,WAAA,CAAAW,MAAA,EAAAC,GAAA,EAAAV,MAAA,KAAAU,GAAA,GAAAV,MAAA,CAAAjB,QAAA;QACA4B,aAAA,EAAAb,WAAA,CAAAW,MAAA,EAAAC,GAAA,EAAAV,MAAA,KAAAU,GAAA,GAAAV,MAAA,CAAAlB,QAAA;QACA8B,SAAA;MACA;IACA;EACA;EACAC,OAAA;IACAxB,aAAAV,IAAA;MACA,MAAAmC,CAAA,OAAAtC,IAAA,CAAAG,IAAA;MACA,MAAAoC,GAAA,GAAAD,CAAA,CAAAE,MAAA;MACA,MAAAC,IAAA,GAAAH,CAAA,CAAArB,OAAA,KAAAsB,GAAA,IAAAA,GAAA;MACA,WAAAvC,IAAA,CAAAsC,CAAA,CAAAtB,OAAA,CAAAyB,IAAA;IACA;IACAC,UAAAvC,IAAA,EAAAC,IAAA;MACA,YAAAF,YAAA,CAAAyC,IAAA,CAAAnB,MAAA,IACAA,MAAA,CAAArB,IAAA,KAAAA,IAAA,IAAAqB,MAAA,CAAApB,IAAA,KAAAA,IACA;IACA;IACAwC,iBAAAzC,IAAA;MACA0C,OAAA,CAAAC,GAAA,SAAA3C,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}