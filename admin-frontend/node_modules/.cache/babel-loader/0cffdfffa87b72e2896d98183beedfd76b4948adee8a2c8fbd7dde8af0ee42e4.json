{"ast":null,"code":"export default {\n  name: 'Courses',\n  data() {\n    return {\n      loading: false,\n      courseList: [],\n      selectedCourses: [],\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      // 统计数据\n      overallStats: {},\n      // 搜索表单\n      searchForm: {\n        courseNo: '',\n        title: '',\n        categoryId: null,\n        teacherId: null,\n        difficultyLevel: null,\n        reviewStatus: null,\n        publishStatus: null,\n        isLive: null,\n        isFree: null\n      },\n      // 分类和教师数据\n      categories: [],\n      teachers: [],\n      // 对话框相关\n      showCourseDialog: false,\n      isEdit: false,\n      courseForm: {\n        courseNo: '',\n        title: '',\n        subtitle: '',\n        categoryId: null,\n        teacherId: null,\n        difficultyLevel: 1,\n        duration: 0,\n        lessonCount: 0,\n        originalPrice: 0,\n        currentPrice: 0,\n        isFree: false,\n        isLive: false,\n        liveStartTime: null,\n        liveEndTime: null,\n        maxStudents: 0,\n        coverImage: '',\n        videoUrl: '',\n        description: '',\n        objectives: '',\n        requirements: '',\n        tags: ''\n      },\n      // 表单验证规则\n      courseRules: {\n        courseNo: [{\n          required: true,\n          message: '请输入课程编号',\n          trigger: 'blur'\n        }],\n        title: [{\n          required: true,\n          message: '请输入课程标题',\n          trigger: 'blur'\n        }],\n        categoryId: [{\n          required: true,\n          message: '请选择课程分类',\n          trigger: 'change'\n        }],\n        teacherId: [{\n          required: true,\n          message: '请选择授课教师',\n          trigger: 'change'\n        }],\n        difficultyLevel: [{\n          required: true,\n          message: '请选择难度等级',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: {\n    dialogTitle() {\n      return this.isEdit ? '编辑课程' : '新增课程';\n    }\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    // 初始化\n    async init() {\n      await Promise.all([this.loadCourses(), this.loadCategories(), this.loadTeachers(), this.loadOverallStats()]);\n    },\n    // 加载课程列表\n    async loadCourses() {\n      this.loading = true;\n      try {\n        const response = await this.$api.course.getCoursesByPage(this.currentPage, this.pageSize);\n        if (response.code === 200) {\n          this.courseList = response.data.courses;\n          this.total = response.data.total;\n        }\n      } catch (error) {\n        this.$message.error('加载课程列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 加载分类\n    async loadCategories() {\n      try {\n        const response = await this.$api.category.getAllCategories();\n        if (response.code === 200) {\n          this.categories = response.data;\n        }\n      } catch (error) {\n        console.error('加载分类失败:', error);\n      }\n    },\n    // 加载教师\n    async loadTeachers() {\n      try {\n        const response = await this.$api.teacher.getAllTeachers();\n        if (response.code === 200) {\n          this.teachers = response.data;\n        }\n      } catch (error) {\n        console.error('加载教师失败:', error);\n      }\n    },\n    // 加载统计数据\n    async loadOverallStats() {\n      try {\n        const response = await this.$api.course.getOverallStats();\n        if (response.code === 200) {\n          this.overallStats = response.data;\n        }\n      } catch (error) {\n        console.error('加载统计数据失败:', error);\n      }\n    },\n    // 搜索课程\n    async searchCourses() {\n      this.currentPage = 1;\n      await this.loadCoursesByCondition();\n    },\n    // 根据条件加载课程\n    async loadCoursesByCondition() {\n      this.loading = true;\n      try {\n        const response = await this.$api.course.getCoursesByCondition(this.searchForm);\n        if (response.code === 200) {\n          this.courseList = response.data;\n          this.total = response.data.length;\n        }\n      } catch (error) {\n        this.$message.error('搜索失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 重置搜索\n    resetSearch() {\n      this.searchForm = {\n        courseNo: '',\n        title: '',\n        categoryId: null,\n        teacherId: null,\n        difficultyLevel: null,\n        reviewStatus: null,\n        publishStatus: null,\n        isLive: null,\n        isFree: null\n      };\n      this.loadCourses();\n    },\n    // 显示创建对话框\n    showCreateDialog() {\n      this.isEdit = false;\n      this.courseForm = {\n        courseNo: '',\n        title: '',\n        subtitle: '',\n        categoryId: null,\n        teacherId: null,\n        difficultyLevel: 1,\n        duration: 0,\n        lessonCount: 0,\n        originalPrice: 0,\n        currentPrice: 0,\n        isFree: false,\n        isLive: false,\n        liveStartTime: null,\n        liveEndTime: null,\n        maxStudents: 0,\n        coverImage: '',\n        videoUrl: '',\n        description: '',\n        objectives: '',\n        requirements: '',\n        tags: ''\n      };\n      this.showCourseDialog = true;\n    },\n    // 生成课程编号\n    async generateCourseNo() {\n      try {\n        const response = await this.$api.course.generateCourseNo();\n        if (response.code === 200) {\n          this.courseForm.courseNo = response.data;\n        }\n      } catch (error) {\n        this.$message.error('生成课程编号失败');\n      }\n    },\n    // 保存课程\n    async saveCourse() {\n      this.$refs.courseForm.validate(async valid => {\n        if (valid) {\n          try {\n            const response = this.isEdit ? await this.$api.course.updateCourse(this.courseForm.id, this.courseForm) : await this.$api.course.createCourse(this.courseForm);\n            if (response.code === 200) {\n              this.$message.success(response.message);\n              this.showCourseDialog = false;\n              this.loadCourses();\n              this.loadOverallStats();\n            } else {\n              this.$message.error(response.message);\n            }\n          } catch (error) {\n            this.$message.error('保存失败');\n          }\n        }\n      });\n    },\n    // 处理下拉菜单命令\n    handleCommand(command) {\n      const {\n        action,\n        row\n      } = command;\n      switch (action) {\n        case 'view':\n          this.viewCourse(row);\n          break;\n        case 'edit':\n          this.editCourse(row);\n          break;\n        case 'review':\n          this.reviewCourse(row);\n          break;\n        case 'publish':\n          this.publishCourse(row, 1);\n          break;\n        case 'unpublish':\n          this.publishCourse(row, 2);\n          break;\n        case 'materials':\n          this.manageMaterials(row);\n          break;\n        case 'price':\n          this.managePrice(row);\n          break;\n        case 'delete':\n          this.deleteCourse(row);\n          break;\n      }\n    },\n    // 编辑课程\n    editCourse(course) {\n      this.isEdit = true;\n      this.courseForm = {\n        ...course\n      };\n      this.showCourseDialog = true;\n    },\n    // 删除课程\n    deleteCourse(course) {\n      this.$confirm('确定要删除这个课程吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const response = await this.$api.course.deleteCourse(course.id);\n          if (response.code === 200) {\n            this.$message.success('删除成功');\n            this.loadCourses();\n            this.loadOverallStats();\n          } else {\n            this.$message.error(response.message);\n          }\n        } catch (error) {\n          this.$message.error('删除失败');\n        }\n      });\n    },\n    // 工具方法\n    getDifficultyText(level) {\n      const texts = {\n        1: '初级',\n        2: '中级',\n        3: '高级'\n      };\n      return texts[level] || '未知';\n    },\n    getReviewStatusText(status) {\n      const texts = {\n        0: '待审核',\n        1: '审核通过',\n        2: '审核拒绝'\n      };\n      return texts[status] || '未知';\n    },\n    getReviewStatusType(status) {\n      const types = {\n        0: 'warning',\n        1: 'success',\n        2: 'danger'\n      };\n      return types[status] || 'info';\n    },\n    getPublishStatusText(status) {\n      const texts = {\n        0: '未发布',\n        1: '已发布',\n        2: '已下架'\n      };\n      return texts[status] || '未知';\n    },\n    getPublishStatusType(status) {\n      const types = {\n        0: 'info',\n        1: 'success',\n        2: 'warning'\n      };\n      return types[status] || 'info';\n    },\n    canPublish(course) {\n      return course.reviewStatus === 1 && course.publishStatus === 0;\n    },\n    canDelete(course) {\n      return course.publishStatus !== 1 && (course.currentStudents || 0) === 0;\n    },\n    formatDate(date) {\n      if (!date) return '-';\n      return new Date(date).toLocaleString();\n    },\n    // 分页相关\n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.currentPage = 1;\n      this.loadCourses();\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.loadCourses();\n    },\n    // 选择相关\n    handleSelectionChange(selection) {\n      this.selectedCourses = selection;\n    },\n    // 刷新数据\n    refreshData() {\n      this.init();\n    }\n  }\n};","map":{"version":3,"names":["name","data","loading","courseList","selectedCourses","currentPage","pageSize","total","overallStats","searchForm","courseNo","title","categoryId","teacherId","difficultyLevel","reviewStatus","publishStatus","isLive","isFree","categories","teachers","showCourseDialog","isEdit","courseForm","subtitle","duration","lessonCount","originalPrice","currentPrice","liveStartTime","liveEndTime","maxStudents","coverImage","videoUrl","description","objectives","requirements","tags","courseRules","required","message","trigger","computed","dialogTitle","mounted","init","methods","Promise","all","loadCourses","loadCategories","loadTeachers","loadOverallStats","response","$api","course","getCoursesByPage","code","courses","error","$message","category","getAllCategories","console","teacher","getAllTeachers","getOverallStats","searchCourses","loadCoursesByCondition","getCoursesByCondition","length","resetSearch","showCreateDialog","generateCourseNo","saveCourse","$refs","validate","valid","updateCourse","id","createCourse","success","handleCommand","command","action","row","viewCourse","editCourse","reviewCourse","publishCourse","manageMaterials","managePrice","deleteCourse","$confirm","confirmButtonText","cancelButtonText","type","then","getDifficultyText","level","texts","getReviewStatusText","status","getReviewStatusType","types","getPublishStatusText","getPublishStatusType","canPublish","canDelete","currentStudents","formatDate","date","Date","toLocaleString","handleSizeChange","val","handleCurrentChange","handleSelectionChange","selection","refreshData"],"sources":["src/views/education/Courses.vue"],"sourcesContent":["<template>\r\n  <div class=\"courses-container\">\r\n    <!-- 页面标题和统计卡片 -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-title\">\r\n        <h2><i class=\"el-icon-video-camera\"></i> 课程管理</h2>\r\n        <p>管理平台所有课程，包括审核、发布、分析等功能</p>\r\n      </div>\r\n      \r\n      <!-- 统计卡片 -->\r\n      <div class=\"stats-cards\">\r\n        <div class=\"stat-card total\">\r\n          <div class=\"stat-icon\">\r\n            <i class=\"el-icon-video-camera\"></i>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">{{ overallStats.totalCourses || 0 }}</div>\r\n            <div class=\"stat-label\">总课程数</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card pending\">\r\n          <div class=\"stat-icon\">\r\n            <i class=\"el-icon-warning\"></i>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">{{ overallStats.pendingReview || 0 }}</div>\r\n            <div class=\"stat-label\">待审核</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card published\">\r\n          <div class=\"stat-icon\">\r\n            <i class=\"el-icon-success\"></i>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">{{ overallStats.published || 0 }}</div>\r\n            <div class=\"stat-label\">已发布</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card live\">\r\n          <div class=\"stat-icon\">\r\n            <i class=\"el-icon-video-play\"></i>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">{{ overallStats.liveCourses || 0 }}</div>\r\n            <div class=\"stat-label\">直播课程</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 搜索和筛选区域 -->\r\n    <div class=\"search-section\">\r\n      <el-card>\r\n        <div class=\"search-form\">\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"6\">\r\n              <el-input \r\n                v-model=\"searchForm.courseNo\" \r\n                placeholder=\"课程编号\"\r\n                prefix-icon=\"el-icon-document\"\r\n                clearable>\r\n              </el-input>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <el-input \r\n                v-model=\"searchForm.title\" \r\n                placeholder=\"课程标题\"\r\n                prefix-icon=\"el-icon-edit\"\r\n                clearable>\r\n              </el-input>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <el-select v-model=\"searchForm.categoryId\" placeholder=\"选择分类\" clearable>\r\n                <el-option \r\n                  v-for=\"category in categories\" \r\n                  :key=\"category.id\" \r\n                  :label=\"category.categoryName\" \r\n                  :value=\"category.id\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <el-select v-model=\"searchForm.teacherId\" placeholder=\"选择教师\" clearable>\r\n                <el-option \r\n                  v-for=\"teacher in teachers\" \r\n                  :key=\"teacher.id\" \r\n                  :label=\"teacher.realName\" \r\n                  :value=\"teacher.id\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-col>\r\n          </el-row>\r\n          \r\n          <el-row :gutter=\"20\" style=\"margin-top: 15px;\">\r\n            <el-col :span=\"4\">\r\n              <el-select v-model=\"searchForm.difficultyLevel\" placeholder=\"难度等级\" clearable>\r\n                <el-option label=\"初级\" :value=\"1\"></el-option>\r\n                <el-option label=\"中级\" :value=\"2\"></el-option>\r\n                <el-option label=\"高级\" :value=\"3\"></el-option>\r\n              </el-select>\r\n            </el-col>\r\n            <el-col :span=\"4\">\r\n              <el-select v-model=\"searchForm.reviewStatus\" placeholder=\"审核状态\" clearable>\r\n                <el-option label=\"待审核\" :value=\"0\"></el-option>\r\n                <el-option label=\"审核通过\" :value=\"1\"></el-option>\r\n                <el-option label=\"审核拒绝\" :value=\"2\"></el-option>\r\n              </el-select>\r\n            </el-col>\r\n            <el-col :span=\"4\">\r\n              <el-select v-model=\"searchForm.publishStatus\" placeholder=\"发布状态\" clearable>\r\n                <el-option label=\"未发布\" :value=\"0\"></el-option>\r\n                <el-option label=\"已发布\" :value=\"1\"></el-option>\r\n                <el-option label=\"已下架\" :value=\"2\"></el-option>\r\n              </el-select>\r\n            </el-col>\r\n            <el-col :span=\"4\">\r\n              <el-select v-model=\"searchForm.isLive\" placeholder=\"课程类型\" clearable>\r\n                <el-option label=\"录播课程\" :value=\"false\"></el-option>\r\n                <el-option label=\"直播课程\" :value=\"true\"></el-option>\r\n              </el-select>\r\n            </el-col>\r\n            <el-col :span=\"4\">\r\n              <el-select v-model=\"searchForm.isFree\" placeholder=\"价格类型\" clearable>\r\n                <el-option label=\"付费课程\" :value=\"false\"></el-option>\r\n                <el-option label=\"免费课程\" :value=\"true\"></el-option>\r\n              </el-select>\r\n            </el-col>\r\n            <el-col :span=\"4\">\r\n              <el-button type=\"primary\" @click=\"searchCourses\" icon=\"el-icon-search\">搜索</el-button>\r\n              <el-button @click=\"resetSearch\" icon=\"el-icon-refresh-left\">重置</el-button>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"action-section\">\r\n      <div class=\"action-left\">\r\n        <el-button type=\"primary\" @click=\"showCreateDialog\" icon=\"el-icon-plus\">新增课程</el-button>\r\n        <el-button \r\n          type=\"success\" \r\n          @click=\"batchOperation('review', 1)\" \r\n          :disabled=\"selectedCourses.length === 0\"\r\n          icon=\"el-icon-check\">\r\n          批量审核通过\r\n        </el-button>\r\n        <el-button \r\n          type=\"warning\" \r\n          @click=\"batchOperation('publish', 1)\" \r\n          :disabled=\"selectedCourses.length === 0\"\r\n          icon=\"el-icon-upload2\">\r\n          批量发布\r\n        </el-button>\r\n        <el-button \r\n          type=\"danger\" \r\n          @click=\"batchDelete\" \r\n          :disabled=\"selectedCourses.length === 0\"\r\n          icon=\"el-icon-delete\">\r\n          批量删除\r\n        </el-button>\r\n      </div>\r\n      \r\n      <div class=\"action-right\">\r\n        <el-button @click=\"exportData\" icon=\"el-icon-download\">导出数据</el-button>\r\n        <el-button @click=\"showStatsDialog\" icon=\"el-icon-pie-chart\">统计分析</el-button>\r\n        <el-button @click=\"refreshData\" icon=\"el-icon-refresh\">刷新</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 课程列表 -->\r\n    <div class=\"table-section\">\r\n      <el-table \r\n        :data=\"courseList\" \r\n        v-loading=\"loading\"\r\n        @selection-change=\"handleSelectionChange\"\r\n        stripe \r\n        style=\"width: 100%\">\r\n        \r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        \r\n        <el-table-column prop=\"courseNo\" label=\"课程编号\" width=\"120\" fixed=\"left\">\r\n          <template slot-scope=\"scope\">\r\n            <span class=\"course-no\">{{ scope.row.courseNo }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column prop=\"title\" label=\"课程标题\" width=\"200\" show-overflow-tooltip>\r\n          <template slot-scope=\"scope\">\r\n            <div class=\"course-title\">\r\n              <img v-if=\"scope.row.coverImage\" :src=\"scope.row.coverImage\" class=\"course-cover\" />\r\n              <div>\r\n                <div class=\"title\">{{ scope.row.title }}</div>\r\n                <div v-if=\"scope.row.subtitle\" class=\"subtitle\">{{ scope.row.subtitle }}</div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column prop=\"category\" label=\"分类\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag size=\"small\">{{ scope.row.category ? scope.row.category.categoryName : '-' }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column prop=\"teacher\" label=\"授课教师\" width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.teacher ? scope.row.teacher.realName : '-' }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column prop=\"difficultyLevel\" label=\"难度\" width=\"80\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag \r\n              :type=\"scope.row.difficultyLevel === 1 ? 'success' : scope.row.difficultyLevel === 2 ? 'warning' : 'danger'\"\r\n              size=\"small\">\r\n              {{ getDifficultyText(scope.row.difficultyLevel) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column prop=\"currentPrice\" label=\"价格\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <div v-if=\"scope.row.isFree\" class=\"price free\">免费</div>\r\n            <div v-else class=\"price\">\r\n              <span class=\"current\">¥{{ scope.row.currentPrice }}</span>\r\n              <span v-if=\"scope.row.originalPrice > scope.row.currentPrice\" class=\"original\">¥{{ scope.row.originalPrice }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column prop=\"reviewStatus\" label=\"审核状态\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag \r\n              :type=\"getReviewStatusType(scope.row.reviewStatus)\"\r\n              size=\"small\">\r\n              {{ getReviewStatusText(scope.row.reviewStatus) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column prop=\"publishStatus\" label=\"发布状态\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag \r\n              :type=\"getPublishStatusType(scope.row.publishStatus)\"\r\n              size=\"small\">\r\n              {{ getPublishStatusText(scope.row.publishStatus) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column prop=\"isLive\" label=\"类型\" width=\"80\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"scope.row.isLive ? 'danger' : 'primary'\" size=\"small\">\r\n              {{ scope.row.isLive ? '直播' : '录播' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column label=\"统计数据\" width=\"150\">\r\n          <template slot-scope=\"scope\">\r\n            <div class=\"stats\">\r\n              <div><i class=\"el-icon-view\"></i> 浏览: {{ scope.row.viewCount || 0 }}</div>\r\n              <div><i class=\"el-icon-shopping-cart-2\"></i> 购买: {{ scope.row.purchaseCount || 0 }}</div>\r\n              <div><i class=\"el-icon-star-on\"></i> 评分: {{ scope.row.rating || 5.0 }}</div>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"150\">\r\n          <template slot-scope=\"scope\">\r\n            {{ formatDate(scope.row.createTime) }}\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n          <template slot-scope=\"scope\">\r\n            <el-dropdown @command=\"handleCommand\">\r\n              <el-button type=\"primary\" size=\"mini\">\r\n                操作<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n              </el-button>\r\n              <el-dropdown-menu slot=\"dropdown\">\r\n                <el-dropdown-item :command=\"{action: 'view', row: scope.row}\">查看详情</el-dropdown-item>\r\n                <el-dropdown-item :command=\"{action: 'edit', row: scope.row}\">编辑课程</el-dropdown-item>\r\n                \r\n                <el-dropdown-item \r\n                  v-if=\"scope.row.reviewStatus === 0\"\r\n                  :command=\"{action: 'review', row: scope.row}\">\r\n                  审核课程\r\n                </el-dropdown-item>\r\n                \r\n                <el-dropdown-item \r\n                  v-if=\"canPublish(scope.row)\"\r\n                  :command=\"{action: 'publish', row: scope.row}\">\r\n                  发布课程\r\n                </el-dropdown-item>\r\n                \r\n                <el-dropdown-item \r\n                  v-if=\"scope.row.publishStatus === 1\"\r\n                  :command=\"{action: 'unpublish', row: scope.row}\">\r\n                  下架课程\r\n                </el-dropdown-item>\r\n                \r\n                <el-dropdown-item \r\n                  :command=\"{action: 'materials', row: scope.row}\">\r\n                  课程资料\r\n                </el-dropdown-item>\r\n                \r\n                <el-dropdown-item \r\n                  :command=\"{action: 'price', row: scope.row}\">\r\n                  价格设置\r\n                </el-dropdown-item>\r\n                \r\n                <el-dropdown-item \r\n                  v-if=\"canDelete(scope.row)\"\r\n                  :command=\"{action: 'delete', row: scope.row}\"\r\n                  divided>\r\n                  删除课程\r\n                </el-dropdown-item>\r\n              </el-dropdown-menu>\r\n            </el-dropdown>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-section\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 创建/编辑课程对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      :visible.sync=\"showCourseDialog\" \r\n      width=\"800px\"\r\n      :close-on-click-modal=\"false\">\r\n      \r\n      <el-form \r\n        :model=\"courseForm\" \r\n        :rules=\"courseRules\" \r\n        ref=\"courseForm\" \r\n        label-width=\"100px\">\r\n        \r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"课程编号\" prop=\"courseNo\">\r\n              <el-input \r\n                v-model=\"courseForm.courseNo\" \r\n                placeholder=\"自动生成\"\r\n                :disabled=\"isEdit\">\r\n                <el-button slot=\"append\" @click=\"generateCourseNo\" :disabled=\"isEdit\">生成</el-button>\r\n              </el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"课程分类\" prop=\"categoryId\">\r\n              <el-select v-model=\"courseForm.categoryId\" placeholder=\"选择分类\">\r\n                <el-option \r\n                  v-for=\"category in categories\" \r\n                  :key=\"category.id\" \r\n                  :label=\"category.categoryName\" \r\n                  :value=\"category.id\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        \r\n        <el-form-item label=\"课程标题\" prop=\"title\">\r\n          <el-input v-model=\"courseForm.title\" placeholder=\"请输入课程标题\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"副标题\">\r\n          <el-input v-model=\"courseForm.subtitle\" placeholder=\"请输入课程副标题\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"授课教师\" prop=\"teacherId\">\r\n          <el-select v-model=\"courseForm.teacherId\" placeholder=\"选择教师\" filterable>\r\n            <el-option \r\n              v-for=\"teacher in teachers\" \r\n              :key=\"teacher.id\" \r\n              :label=\"teacher.realName\" \r\n              :value=\"teacher.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"难度等级\" prop=\"difficultyLevel\">\r\n              <el-select v-model=\"courseForm.difficultyLevel\" placeholder=\"选择难度\">\r\n                <el-option label=\"初级\" :value=\"1\"></el-option>\r\n                <el-option label=\"中级\" :value=\"2\"></el-option>\r\n                <el-option label=\"高级\" :value=\"3\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"课程时长\">\r\n              <el-input-number \r\n                v-model=\"courseForm.duration\" \r\n                :min=\"0\" \r\n                placeholder=\"分钟\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"课时数\">\r\n              <el-input-number \r\n                v-model=\"courseForm.lessonCount\" \r\n                :min=\"0\" \r\n                placeholder=\"课时\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        \r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"原价\">\r\n              <el-input-number \r\n                v-model=\"courseForm.originalPrice\" \r\n                :min=\"0\" \r\n                :precision=\"2\"\r\n                placeholder=\"原价\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <el-form-item label=\"现价\">\r\n                <el-input-number \r\n                  v-model=\"courseForm.currentPrice\" \r\n                  :min=\"0\" \r\n                  :precision=\"2\"\r\n                  placeholder=\"现价\">\r\n                </el-input-number>\r\n              </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"免费课程\">\r\n                  <el-switch v-model=\"courseForm.isFree\"></el-switch>\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            \r\n            <el-form-item label=\"课程类型\">\r\n              <el-radio-group v-model=\"courseForm.isLive\">\r\n                <el-radio :label=\"false\">录播课程</el-radio>\r\n                <el-radio :label=\"true\">直播课程</el-radio>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n            \r\n            <div v-if=\"courseForm.isLive\">\r\n              <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"直播开始\">\r\n                    <el-date-picker\r\n                      v-model=\"courseForm.liveStartTime\"\r\n                      type=\"datetime\"\r\n                      placeholder=\"选择开始时间\">\r\n                    </el-date-picker>\r\n                  </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"直播结束\">\r\n                    <el-date-picker\r\n                      v-model=\"courseForm.liveEndTime\"\r\n                      type=\"datetime\"\r\n                      placeholder=\"选择结束时间\">\r\n                    </el-date-picker>\r\n                  </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"最大人数\">\r\n                    <el-input-number \r\n                      v-model=\"courseForm.maxStudents\" \r\n                      :min=\"0\" \r\n                      placeholder=\"人数\">\r\n                    </el-input-number>\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n            </div>\r\n            \r\n            <el-form-item label=\"封面图片\">\r\n              <el-input v-model=\"courseForm.coverImage\" placeholder=\"请输入封面图片URL\"></el-input>\r\n            </el-form-item>\r\n            \r\n            <el-form-item label=\"试听视频\">\r\n              <el-input v-model=\"courseForm.videoUrl\" placeholder=\"请输入试听视频URL\"></el-input>\r\n            </el-form-item>\r\n            \r\n            <el-form-item label=\"课程描述\">\r\n              <el-input \r\n                v-model=\"courseForm.description\" \r\n                type=\"textarea\" \r\n                :rows=\"3\"\r\n                placeholder=\"请输入课程描述\">\r\n              </el-input>\r\n            </el-form-item>\r\n            \r\n            <el-form-item label=\"学习目标\">\r\n              <el-input \r\n                v-model=\"courseForm.objectives\" \r\n                type=\"textarea\" \r\n                :rows=\"3\"\r\n                placeholder=\"请输入学习目标\">\r\n              </el-input>\r\n            </el-form-item>\r\n            \r\n            <el-form-item label=\"学习要求\">\r\n              <el-input \r\n                v-model=\"courseForm.requirements\" \r\n                type=\"textarea\" \r\n                :rows=\"3\"\r\n                placeholder=\"请输入学习要求\">\r\n              </el-input>\r\n            </el-form-item>\r\n            \r\n            <el-form-item label=\"课程标签\">\r\n              <el-input v-model=\"courseForm.tags\" placeholder=\"请输入标签，用逗号分隔\"></el-input>\r\n            </el-form-item>\r\n            \r\n          </el-form>\r\n          \r\n          <div slot=\"footer\">\r\n            <el-button @click=\"showCourseDialog = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"saveCourse\">确定</el-button>\r\n          </div>\r\n        </el-dialog>\r\n\r\n        <!-- 其他对话框... -->\r\n        <!-- 审核对话框、统计对话框等 -->\r\n        \r\n      </div>\r\n    </template>\r\n\r\n    <script>\r\n    export default {\r\n      name: 'Courses',\r\n      data() {\r\n        return {\r\n          loading: false,\r\n          courseList: [],\r\n          selectedCourses: [],\r\n          currentPage: 1,\r\n          pageSize: 10,\r\n          total: 0,\r\n          \r\n          // 统计数据\r\n          overallStats: {},\r\n          \r\n          // 搜索表单\r\n          searchForm: {\r\n            courseNo: '',\r\n            title: '',\r\n            categoryId: null,\r\n            teacherId: null,\r\n            difficultyLevel: null,\r\n            reviewStatus: null,\r\n            publishStatus: null,\r\n            isLive: null,\r\n            isFree: null\r\n          },\r\n          \r\n          // 分类和教师数据\r\n          categories: [],\r\n          teachers: [],\r\n          \r\n          // 对话框相关\r\n          showCourseDialog: false,\r\n          isEdit: false,\r\n          courseForm: {\r\n            courseNo: '',\r\n            title: '',\r\n            subtitle: '',\r\n            categoryId: null,\r\n            teacherId: null,\r\n            difficultyLevel: 1,\r\n            duration: 0,\r\n            lessonCount: 0,\r\n            originalPrice: 0,\r\n            currentPrice: 0,\r\n            isFree: false,\r\n            isLive: false,\r\n            liveStartTime: null,\r\n            liveEndTime: null,\r\n            maxStudents: 0,\r\n            coverImage: '',\r\n            videoUrl: '',\r\n            description: '',\r\n            objectives: '',\r\n            requirements: '',\r\n            tags: ''\r\n          },\r\n          \r\n          // 表单验证规则\r\n          courseRules: {\r\n            courseNo: [\r\n              { required: true, message: '请输入课程编号', trigger: 'blur' }\r\n            ],\r\n            title: [\r\n              { required: true, message: '请输入课程标题', trigger: 'blur' }\r\n            ],\r\n            categoryId: [\r\n              { required: true, message: '请选择课程分类', trigger: 'change' }\r\n            ],\r\n            teacherId: [\r\n              { required: true, message: '请选择授课教师', trigger: 'change' }\r\n            ],\r\n            difficultyLevel: [\r\n              { required: true, message: '请选择难度等级', trigger: 'change' }\r\n            ]\r\n          }\r\n        }\r\n      },\r\n      \r\n      computed: {\r\n        dialogTitle() {\r\n          return this.isEdit ? '编辑课程' : '新增课程'\r\n        }\r\n      },\r\n      \r\n      mounted() {\r\n        this.init()\r\n      },\r\n      \r\n      methods: {\r\n        // 初始化\r\n        async init() {\r\n          await Promise.all([\r\n            this.loadCourses(),\r\n            this.loadCategories(),\r\n            this.loadTeachers(),\r\n            this.loadOverallStats()\r\n          ])\r\n        },\r\n        \r\n        // 加载课程列表\r\n        async loadCourses() {\r\n          this.loading = true\r\n          try {\r\n            const response = await this.$api.course.getCoursesByPage(this.currentPage, this.pageSize)\r\n            if (response.code === 200) {\r\n              this.courseList = response.data.courses\r\n              this.total = response.data.total\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('加载课程列表失败')\r\n          } finally {\r\n            this.loading = false\r\n          }\r\n        },\r\n        \r\n        // 加载分类\r\n        async loadCategories() {\r\n          try {\r\n            const response = await this.$api.category.getAllCategories()\r\n            if (response.code === 200) {\r\n              this.categories = response.data\r\n            }\r\n          } catch (error) {\r\n            console.error('加载分类失败:', error)\r\n          }\r\n        },\r\n        \r\n        // 加载教师\r\n        async loadTeachers() {\r\n          try {\r\n            const response = await this.$api.teacher.getAllTeachers()\r\n            if (response.code === 200) {\r\n              this.teachers = response.data\r\n            }\r\n          } catch (error) {\r\n            console.error('加载教师失败:', error)\r\n          }\r\n        },\r\n        \r\n        // 加载统计数据\r\n        async loadOverallStats() {\r\n          try {\r\n            const response = await this.$api.course.getOverallStats()\r\n            if (response.code === 200) {\r\n              this.overallStats = response.data\r\n            }\r\n          } catch (error) {\r\n            console.error('加载统计数据失败:', error)\r\n          }\r\n        },\r\n        \r\n        // 搜索课程\r\n        async searchCourses() {\r\n          this.currentPage = 1\r\n          await this.loadCoursesByCondition()\r\n        },\r\n        \r\n        // 根据条件加载课程\r\n        async loadCoursesByCondition() {\r\n          this.loading = true\r\n          try {\r\n            const response = await this.$api.course.getCoursesByCondition(this.searchForm)\r\n            if (response.code === 200) {\r\n              this.courseList = response.data\r\n              this.total = response.data.length\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('搜索失败')\r\n          } finally {\r\n            this.loading = false\r\n          }\r\n        },\r\n        \r\n        // 重置搜索\r\n        resetSearch() {\r\n          this.searchForm = {\r\n            courseNo: '',\r\n            title: '',\r\n            categoryId: null,\r\n            teacherId: null,\r\n            difficultyLevel: null,\r\n            reviewStatus: null,\r\n            publishStatus: null,\r\n            isLive: null,\r\n            isFree: null\r\n          }\r\n          this.loadCourses()\r\n        },\r\n        \r\n        // 显示创建对话框\r\n        showCreateDialog() {\r\n          this.isEdit = false\r\n          this.courseForm = {\r\n            courseNo: '',\r\n            title: '',\r\n            subtitle: '',\r\n            categoryId: null,\r\n            teacherId: null,\r\n            difficultyLevel: 1,\r\n            duration: 0,\r\n            lessonCount: 0,\r\n            originalPrice: 0,\r\n            currentPrice: 0,\r\n            isFree: false,\r\n            isLive: false,\r\n            liveStartTime: null,\r\n            liveEndTime: null,\r\n            maxStudents: 0,\r\n            coverImage: '',\r\n            videoUrl: '',\r\n            description: '',\r\n            objectives: '',\r\n            requirements: '',\r\n            tags: ''\r\n          }\r\n          this.showCourseDialog = true\r\n        },\r\n        \r\n        // 生成课程编号\r\n        async generateCourseNo() {\r\n          try {\r\n            const response = await this.$api.course.generateCourseNo()\r\n            if (response.code === 200) {\r\n              this.courseForm.courseNo = response.data\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('生成课程编号失败')\r\n          }\r\n        },\r\n        \r\n        // 保存课程\r\n        async saveCourse() {\r\n          this.$refs.courseForm.validate(async (valid) => {\r\n            if (valid) {\r\n              try {\r\n                const response = this.isEdit \r\n                  ? await this.$api.course.updateCourse(this.courseForm.id, this.courseForm)\r\n                  : await this.$api.course.createCourse(this.courseForm)\r\n                \r\n                if (response.code === 200) {\r\n                  this.$message.success(response.message)\r\n                  this.showCourseDialog = false\r\n                  this.loadCourses()\r\n                  this.loadOverallStats()\r\n                } else {\r\n                  this.$message.error(response.message)\r\n                }\r\n              } catch (error) {\r\n                this.$message.error('保存失败')\r\n              }\r\n            }\r\n          })\r\n        },\r\n        \r\n        // 处理下拉菜单命令\r\n        handleCommand(command) {\r\n          const { action, row } = command\r\n          \r\n          switch (action) {\r\n            case 'view':\r\n              this.viewCourse(row)\r\n              break\r\n            case 'edit':\r\n              this.editCourse(row)\r\n              break\r\n            case 'review':\r\n              this.reviewCourse(row)\r\n              break\r\n            case 'publish':\r\n              this.publishCourse(row, 1)\r\n              break\r\n            case 'unpublish':\r\n              this.publishCourse(row, 2)\r\n              break\r\n            case 'materials':\r\n              this.manageMaterials(row)\r\n              break\r\n            case 'price':\r\n              this.managePrice(row)\r\n              break\r\n            case 'delete':\r\n              this.deleteCourse(row)\r\n              break\r\n          }\r\n        },\r\n        \r\n        // 编辑课程\r\n        editCourse(course) {\r\n          this.isEdit = true\r\n          this.courseForm = { ...course }\r\n          this.showCourseDialog = true\r\n        },\r\n        \r\n        // 删除课程\r\n        deleteCourse(course) {\r\n          this.$confirm('确定要删除这个课程吗？', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(async () => {\r\n            try {\r\n              const response = await this.$api.course.deleteCourse(course.id)\r\n              if (response.code === 200) {\r\n                this.$message.success('删除成功')\r\n                this.loadCourses()\r\n                this.loadOverallStats()\r\n              } else {\r\n                this.$message.error(response.message)\r\n              }\r\n            } catch (error) {\r\n              this.$message.error('删除失败')\r\n            }\r\n          })\r\n        },\r\n        \r\n        // 工具方法\r\n        getDifficultyText(level) {\r\n          const texts = { 1: '初级', 2: '中级', 3: '高级' }\r\n          return texts[level] || '未知'\r\n        },\r\n        \r\n        getReviewStatusText(status) {\r\n          const texts = { 0: '待审核', 1: '审核通过', 2: '审核拒绝' }\r\n          return texts[status] || '未知'\r\n        },\r\n        \r\n        getReviewStatusType(status) {\r\n          const types = { 0: 'warning', 1: 'success', 2: 'danger' }\r\n          return types[status] || 'info'\r\n        },\r\n        \r\n        getPublishStatusText(status) {\r\n          const texts = { 0: '未发布', 1: '已发布', 2: '已下架' }\r\n          return texts[status] || '未知'\r\n        },\r\n        \r\n        getPublishStatusType(status) {\r\n          const types = { 0: 'info', 1: 'success', 2: 'warning' }\r\n          return types[status] || 'info'\r\n        },\r\n        \r\n        canPublish(course) {\r\n          return course.reviewStatus === 1 && course.publishStatus === 0\r\n        },\r\n        \r\n        canDelete(course) {\r\n          return course.publishStatus !== 1 && (course.currentStudents || 0) === 0\r\n        },\r\n        \r\n        formatDate(date) {\r\n          if (!date) return '-'\r\n          return new Date(date).toLocaleString()\r\n        },\r\n        \r\n        // 分页相关\r\n        handleSizeChange(val) {\r\n          this.pageSize = val\r\n          this.currentPage = 1\r\n          this.loadCourses()\r\n        },\r\n        \r\n        handleCurrentChange(val) {\r\n          this.currentPage = val\r\n          this.loadCourses()\r\n        },\r\n        \r\n        // 选择相关\r\n        handleSelectionChange(selection) {\r\n          this.selectedCourses = selection\r\n        },\r\n        \r\n        // 刷新数据\r\n        refreshData() {\r\n          this.init()\r\n        }\r\n      }\r\n    }\r\n    </script>\r\n\r\n    <style scoped>\r\n    .courses-container {\r\n      padding: 20px;\r\n      background: #f0f2f5;\r\n      min-height: 100vh;\r\n    }\r\n\r\n    .page-header {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .header-title h2 {\r\n  margin: 0;\r\n  color: #00d4aa;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n    .header-title p {\r\n      margin: 5px 0 0 0;\r\n      color: #666;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .stats-cards {\r\n      display: flex;\r\n      gap: 20px;\r\n      margin-top: 20px;\r\n    }\r\n\r\n    .stat-card {\r\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n      border-radius: 12px;\r\n      padding: 20px;\r\n      flex: 1;\r\n      color: white;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 15px;\r\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n      transition: transform 0.2s;\r\n    }\r\n\r\n    .stat-card:hover {\r\n      transform: translateY(-2px);\r\n    }\r\n\r\n    .stat-card.total {\r\n      background: linear-gradient(135deg, #2c5aa0 0%, #1e3a8a 100%);\r\n    }\r\n\r\n    .stat-card.pending {\r\n      background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);\r\n    }\r\n\r\n    .stat-card.published {\r\n      background: linear-gradient(135deg, #10b981 0%, #059669 100%);\r\n    }\r\n\r\n    .stat-card.live {\r\n      background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\r\n    }\r\n\r\n    .stat-icon {\r\n      font-size: 32px;\r\n      opacity: 0.8;\r\n    }\r\n\r\n    .stat-value {\r\n      font-size: 28px;\r\n      font-weight: bold;\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    .stat-label {\r\n      font-size: 14px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .search-section {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .search-form {\r\n      padding: 10px;\r\n    }\r\n\r\n    .action-section {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .table-section {\r\n      background: white;\r\n      border-radius: 8px;\r\n      overflow: hidden;\r\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .course-no {\r\n      font-family: 'Courier New', monospace;\r\n      font-weight: bold;\r\n      color: #2c5aa0;\r\n    }\r\n\r\n    .course-title {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 10px;\r\n    }\r\n\r\n    .course-cover {\r\n      width: 40px;\r\n      height: 30px;\r\n      object-fit: cover;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    .title {\r\n      font-weight: 600;\r\n      color: #333;\r\n    }\r\n\r\n    .subtitle {\r\n      font-size: 12px;\r\n      color: #666;\r\n      margin-top: 2px;\r\n    }\r\n\r\n    .price {\r\n      text-align: center;\r\n    }\r\n\r\n    .price.free {\r\n      color: #67c23a;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .price .current {\r\n      color: #e6a23c;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .price .original {\r\n      color: #999;\r\n      text-decoration: line-through;\r\n      font-size: 12px;\r\n      margin-left: 5px;\r\n    }\r\n\r\n    .stats {\r\n      font-size: 12px;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    .stats div {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 4px;\r\n      margin-bottom: 2px;\r\n    }\r\n\r\n    .stats i {\r\n      color: #666;\r\n    }\r\n\r\n    .pagination-section {\r\n      padding: 20px;\r\n      text-align: center;\r\n      background: white;\r\n    }\r\n\r\n    /* 响应式设计 */\r\n    @media (max-width: 768px) {\r\n      .stats-cards {\r\n        flex-direction: column;\r\n      }\r\n      \r\n      .action-section {\r\n        flex-direction: column;\r\n        gap: 10px;\r\n      }\r\n      \r\n      .action-left,\r\n      .action-right {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 10px;\r\n      }\r\n    }\r\n    </style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}