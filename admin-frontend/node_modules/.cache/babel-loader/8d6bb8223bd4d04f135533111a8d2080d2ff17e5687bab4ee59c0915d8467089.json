{"ast":null,"code":"import { studentApi } from '@/api';\nexport default {\n  name: 'Students',\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      studentList: [],\n      selectedStudents: [],\n      statistics: {},\n      searchForm: {\n        studentNo: '',\n        realName: '',\n        level: null,\n        parentPhone: '',\n        grade: null\n      },\n      pagination: {\n        page: 1,\n        size: 10,\n        total: 0\n      },\n      dialogVisible: false,\n      levelDialogVisible: false,\n      parentDialogVisible: false,\n      progressDialogVisible: false,\n      isEdit: false,\n      currentStudent: {},\n      parentInfo: {},\n      progressInfo: {},\n      studentForm: {\n        studentNo: '',\n        realName: '',\n        grade: '',\n        school: '',\n        parentName: '',\n        parentPhone: '',\n        level: 1,\n        inviteCode: '',\n        provinceCode: '',\n        cityCode: '',\n        areaCode: ''\n      },\n      levelForm: {\n        level: null\n      },\n      formRules: {\n        realName: [{\n          required: true,\n          message: '请输入学生姓名',\n          trigger: 'blur'\n        }],\n        grade: [{\n          required: true,\n          message: '请选择年级',\n          trigger: 'change'\n        }],\n        parentPhone: [{\n          required: true,\n          message: '请输入家长电话',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入正确的手机号',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    dialogTitle() {\n      return this.isEdit ? '编辑学生' : '新增学生';\n    }\n  },\n  created() {\n    this.loadStudents();\n    this.loadStatistics();\n  },\n  methods: {\n    async loadStudents() {\n      this.loading = true;\n      try {\n        const params = {\n          page: this.pagination.page,\n          size: this.pagination.size,\n          ...this.searchForm\n        };\n        const response = await studentApi.getStudentsByPage(params);\n        if (response.code === 200) {\n          this.studentList = response.data.students || [];\n          this.pagination.total = response.data.total || 0;\n        }\n      } catch (error) {\n        this.$message.error('加载学生列表失败');\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async loadStatistics() {\n      try {\n        const response = await studentApi.getStatistics();\n        if (response.code === 200) {\n          this.statistics = response.data || {};\n        }\n      } catch (error) {\n        console.error('加载统计数据失败:', error);\n      }\n    },\n    handleSearch() {\n      this.pagination.page = 1;\n      this.loadStudents();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.pagination.page = 1;\n      this.loadStudents();\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val;\n      this.pagination.page = 1;\n      this.loadStudents();\n    },\n    handleCurrentChange(val) {\n      this.pagination.page = val;\n      this.loadStudents();\n    },\n    handleSelectionChange(selection) {\n      this.selectedStudents = selection;\n    },\n    handleCreate() {\n      this.isEdit = false;\n      this.dialogVisible = true;\n      this.generateStudentNo();\n      this.generateInviteCode();\n    },\n    async generateStudentNo() {\n      try {\n        const response = await studentApi.generateStudentNo();\n        if (response.code === 200) {\n          this.studentForm.studentNo = response.data;\n        }\n      } catch (error) {\n        console.error('生成学号失败:', error);\n      }\n    },\n    async generateInviteCode() {\n      try {\n        const response = await studentApi.generateInviteCode();\n        if (response.code === 200) {\n          this.studentForm.inviteCode = response.data;\n        }\n      } catch (error) {\n        console.error('生成邀请码失败:', error);\n      }\n    },\n    handleCommand(command) {\n      switch (command.type) {\n        case 'edit':\n          this.handleEdit(command.data);\n          break;\n        case 'level':\n          this.handleLevelAdjust(command.data);\n          break;\n        case 'parent':\n          this.handleViewParent(command.data);\n          break;\n        case 'progress':\n          this.handleViewProgress(command.data);\n          break;\n        case 'reward':\n          this.handleReward(command.data);\n          break;\n        case 'delete':\n          this.handleDelete(command.data);\n          break;\n      }\n    },\n    handleEdit(student) {\n      this.isEdit = true;\n      this.currentStudent = student;\n      this.studentForm = {\n        ...student\n      };\n      this.dialogVisible = true;\n    },\n    handleLevelAdjust(student) {\n      this.currentStudent = student;\n      this.levelForm.level = student.level;\n      this.levelDialogVisible = true;\n    },\n    async handleViewParent(student) {\n      try {\n        const response = await studentApi.getParentInfo(student.id);\n        if (response.code === 200) {\n          this.parentInfo = response.data || {};\n          this.parentDialogVisible = true;\n        }\n      } catch (error) {\n        this.$message.error('加载家长信息失败');\n      }\n    },\n    async handleViewProgress(student) {\n      try {\n        const response = await studentApi.getLearningProgress(student.id);\n        if (response.code === 200) {\n          this.progressInfo = response.data || {};\n          this.progressDialogVisible = true;\n        }\n      } catch (error) {\n        this.$message.error('加载学习进度失败');\n      }\n    },\n    handleReward(student) {\n      this.$message.info('邀请奖励功能开发中...');\n    },\n    async handleSubmit() {\n      try {\n        await this.$refs.studentForm.validate();\n        this.submitting = true;\n        const response = this.isEdit ? await studentApi.updateStudent(this.currentStudent.id, this.studentForm) : await studentApi.createStudent(this.studentForm);\n        if (response.code === 200) {\n          this.$message.success(this.isEdit ? '更新成功' : '创建成功');\n          this.dialogVisible = false;\n          this.loadStudents();\n          this.loadStatistics();\n        } else {\n          this.$message.error(response.message || '操作失败');\n        }\n      } catch (error) {\n        if (error !== false) {\n          // 不是表单验证错误\n          this.$message.error('操作失败');\n        }\n      } finally {\n        this.submitting = false;\n      }\n    },\n    async handleLevelSubmit() {\n      if (!this.levelForm.level) {\n        this.$message.warning('请选择新等级');\n        return;\n      }\n      this.submitting = true;\n      try {\n        const response = await studentApi.updateLevel(this.currentStudent.id, {\n          level: this.levelForm.level\n        });\n        if (response.code === 200) {\n          this.$message.success('等级调整成功');\n          this.levelDialogVisible = false;\n          this.loadStudents();\n          this.loadStatistics();\n        } else {\n          this.$message.error(response.message || '调整失败');\n        }\n      } catch (error) {\n        this.$message.error('调整失败');\n      } finally {\n        this.submitting = false;\n      }\n    },\n    async handleDelete(student) {\n      try {\n        await this.$confirm('确定要删除该学生吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        const response = await studentApi.deleteStudent(student.id);\n        if (response.code === 200) {\n          this.$message.success('删除成功');\n          this.loadStudents();\n          this.loadStatistics();\n        } else {\n          this.$message.error(response.message || '删除失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败');\n        }\n      }\n    },\n    async handleBatchUpgrade() {\n      if (this.selectedStudents.length === 0) {\n        this.$message.warning('请先选择学生');\n        return;\n      }\n      try {\n        await this.$confirm('确定要进行批量等级升级吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        const response = await studentApi.autoUpgradeLevel();\n        if (response.code === 200) {\n          this.$message.success('批量升级成功');\n          this.loadStudents();\n          this.loadStatistics();\n        } else {\n          this.$message.error(response.message || '升级失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('升级失败');\n        }\n      }\n    },\n    async handleBatchDelete() {\n      if (this.selectedStudents.length === 0) {\n        this.$message.warning('请先选择学生');\n        return;\n      }\n      try {\n        await this.$confirm(`确定要删除选中的 ${this.selectedStudents.length} 个学生吗？`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n\n        // 批量删除逻辑\n        for (const student of this.selectedStudents) {\n          await studentApi.deleteStudent(student.id);\n        }\n        this.$message.success('批量删除成功');\n        this.loadStudents();\n        this.loadStatistics();\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('批量删除失败');\n        }\n      }\n    },\n    handleExport() {\n      this.$message.info('导出功能开发中...');\n    },\n    resetForm() {\n      this.$refs.studentForm?.resetFields();\n      this.studentForm = {\n        studentNo: '',\n        realName: '',\n        grade: '',\n        school: '',\n        parentName: '',\n        parentPhone: '',\n        level: 1,\n        inviteCode: '',\n        provinceCode: '',\n        cityCode: '',\n        areaCode: ''\n      };\n      this.currentStudent = {};\n    },\n    getLevelText(level) {\n      const levelMap = {\n        1: '青铜',\n        2: '白银',\n        3: '黄金'\n      };\n      return levelMap[level] || '未知';\n    },\n    getLevelTagType(level) {\n      const typeMap = {\n        1: 'warning',\n        2: 'info',\n        3: 'success'\n      };\n      return typeMap[level] || 'info';\n    },\n    formatTime(time) {\n      if (!time) return '-';\n      return new Date(time).toLocaleDateString();\n    }\n  }\n};","map":{"version":3,"names":["studentApi","name","data","loading","submitting","studentList","selectedStudents","statistics","searchForm","studentNo","realName","level","parentPhone","grade","pagination","page","size","total","dialogVisible","levelDialogVisible","parentDialogVisible","progressDialogVisible","isEdit","currentStudent","parentInfo","progressInfo","studentForm","school","parentName","inviteCode","provinceCode","cityCode","areaCode","levelForm","formRules","required","message","trigger","pattern","computed","dialogTitle","created","loadStudents","loadStatistics","methods","params","response","getStudentsByPage","code","students","error","$message","console","getStatistics","handleSearch","handleReset","$refs","resetFields","handleSizeChange","val","handleCurrentChange","handleSelectionChange","selection","handleCreate","generateStudentNo","generateInviteCode","handleCommand","command","type","handleEdit","handleLevelAdjust","handleViewParent","handleViewProgress","handleReward","handleDelete","student","getParentInfo","id","getLearningProgress","info","handleSubmit","validate","updateStudent","createStudent","success","handleLevelSubmit","warning","updateLevel","$confirm","confirmButtonText","cancelButtonText","deleteStudent","handleBatchUpgrade","length","autoUpgradeLevel","handleBatchDelete","handleExport","resetForm","getLevelText","levelMap","getLevelTagType","typeMap","formatTime","time","Date","toLocaleDateString"],"sources":["src/views/education/Students.vue"],"sourcesContent":["<template>\r\n  <div class=\"students-container\">\r\n    <!-- 页面头部 -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <h1 class=\"page-title\">\r\n          <i class=\"el-icon-user-solid\"></i>\r\n          学生管理\r\n        </h1>\r\n        <p class=\"page-description\">管理和监控学生信息、等级升级、学习进度</p>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"handleCreate\">\r\n          新增学生\r\n        </el-button>\r\n        <el-button type=\"success\" icon=\"el-icon-upload2\" @click=\"handleBatchUpgrade\">\r\n          批量升级\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 统计卡片 -->\r\n    <div class=\"stats-cards\">\r\n      <div class=\"stat-card total\">\r\n        <div class=\"stat-icon\">\r\n          <i class=\"el-icon-user-solid\"></i>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <div class=\"stat-value\">{{ statistics.totalStudents || 0 }}</div>\r\n          <div class=\"stat-label\">学生总数</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"stat-card bronze\">\r\n        <div class=\"stat-icon\">\r\n          <i class=\"el-icon-medal-1\"></i>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <div class=\"stat-value\">{{ statistics.bronzeStudents || 0 }}</div>\r\n          <div class=\"stat-label\">青铜学生</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"stat-card silver\">\r\n        <div class=\"stat-icon\">\r\n          <i class=\"el-icon-medal-1\"></i>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <div class=\"stat-value\">{{ statistics.silverStudents || 0 }}</div>\r\n          <div class=\"stat-label\">白银学生</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"stat-card gold\">\r\n        <div class=\"stat-icon\">\r\n          <i class=\"el-icon-trophy\"></i>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <div class=\"stat-value\">{{ statistics.goldStudents || 0 }}</div>\r\n          <div class=\"stat-label\">黄金学生</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 搜索和筛选 -->\r\n    <div class=\"search-filters\">\r\n      <el-card>\r\n        <el-form :model=\"searchForm\" ref=\"searchForm\" inline>\r\n          <el-form-item label=\"学号\" prop=\"studentNo\">\r\n            <el-input\r\n              v-model=\"searchForm.studentNo\"\r\n              placeholder=\"请输入学号\"\r\n              clearable\r\n              style=\"width: 180px\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"学生姓名\" prop=\"realName\">\r\n            <el-input\r\n              v-model=\"searchForm.realName\"\r\n              placeholder=\"请输入学生姓名\"\r\n              clearable\r\n              style=\"width: 180px\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"学生等级\" prop=\"level\">\r\n            <el-select v-model=\"searchForm.level\" placeholder=\"请选择等级\" clearable>\r\n              <el-option label=\"青铜\" :value=\"1\" />\r\n              <el-option label=\"白银\" :value=\"2\" />\r\n              <el-option label=\"黄金\" :value=\"3\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"家长电话\" prop=\"parentPhone\">\r\n            <el-input\r\n              v-model=\"searchForm.parentPhone\"\r\n              placeholder=\"请输入家长电话\"\r\n              clearable\r\n              style=\"width: 180px\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"年级\" prop=\"grade\">\r\n            <el-select v-model=\"searchForm.grade\" placeholder=\"请选择年级\" clearable>\r\n              <el-option label=\"小学一年级\" value=\"1\" />\r\n              <el-option label=\"小学二年级\" value=\"2\" />\r\n              <el-option label=\"小学三年级\" value=\"3\" />\r\n              <el-option label=\"小学四年级\" value=\"4\" />\r\n              <el-option label=\"小学五年级\" value=\"5\" />\r\n              <el-option label=\"小学六年级\" value=\"6\" />\r\n              <el-option label=\"初中一年级\" value=\"7\" />\r\n              <el-option label=\"初中二年级\" value=\"8\" />\r\n              <el-option label=\"初中三年级\" value=\"9\" />\r\n              <el-option label=\"高中一年级\" value=\"10\" />\r\n              <el-option label=\"高中二年级\" value=\"11\" />\r\n              <el-option label=\"高中三年级\" value=\"12\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">\r\n              搜索\r\n            </el-button>\r\n            <el-button icon=\"el-icon-refresh\" @click=\"handleReset\">\r\n              重置\r\n            </el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 学生列表 -->\r\n    <div class=\"students-table\">\r\n      <el-card>\r\n        <div class=\"table-header\">\r\n          <div class=\"table-title\">学生列表</div>\r\n          <div class=\"table-actions\">\r\n            <el-button \r\n              type=\"primary\" \r\n              icon=\"el-icon-download\" \r\n              size=\"small\"\r\n              @click=\"handleExport\"\r\n            >\r\n              导出数据\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n        \r\n        <el-table\r\n          :data=\"studentList\"\r\n          v-loading=\"loading\"\r\n          style=\"width: 100%\"\r\n          @selection-change=\"handleSelectionChange\"\r\n        >\r\n          <el-table-column type=\"selection\" width=\"55\" />\r\n          <el-table-column prop=\"studentNo\" label=\"学号\" width=\"120\" />\r\n          <el-table-column prop=\"realName\" label=\"学生姓名\" width=\"100\" />\r\n          <el-table-column label=\"等级\" width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag\r\n                :type=\"getLevelTagType(scope.row.level)\"\r\n                size=\"small\"\r\n              >\r\n                {{ getLevelText(scope.row.level) }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"grade\" label=\"年级\" width=\"100\" />\r\n          <el-table-column prop=\"school\" label=\"学校\" width=\"150\" show-overflow-tooltip />\r\n          <el-table-column prop=\"parentName\" label=\"家长姓名\" width=\"100\" />\r\n          <el-table-column prop=\"parentPhone\" label=\"家长电话\" width=\"120\" />\r\n          <el-table-column label=\"消费金额\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <span class=\"amount-text\">¥{{ (scope.row.totalAmount || 0).toFixed(2) }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"课程数\" width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ scope.row.totalCourses || 0 }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"学习天数\" width=\"90\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ scope.row.learningDays || 0 }}天</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"邀请码\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag size=\"mini\" type=\"info\">{{ scope.row.inviteCode || '-' }}</el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"最后活跃\" width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ formatTime(scope.row.lastActiveTime) }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"状态\" width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag\r\n                :type=\"scope.row.status === 1 ? 'success' : 'danger'\"\r\n                size=\"small\"\r\n              >\r\n                {{ scope.row.status === 1 ? '正常' : '禁用' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" fixed=\"right\" width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <el-dropdown @command=\"handleCommand\" trigger=\"click\">\r\n                <el-button type=\"primary\" size=\"mini\">\r\n                  操作<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n                </el-button>\r\n                <el-dropdown-menu slot=\"dropdown\">\r\n                  <el-dropdown-item :command=\"{type: 'edit', data: scope.row}\">\r\n                    <i class=\"el-icon-edit\"></i> 编辑\r\n                  </el-dropdown-item>\r\n                  <el-dropdown-item :command=\"{type: 'level', data: scope.row}\">\r\n                    <i class=\"el-icon-medal-1\"></i> 调整等级\r\n                  </el-dropdown-item>\r\n                  <el-dropdown-item :command=\"{type: 'parent', data: scope.row}\">\r\n                    <i class=\"el-icon-user\"></i> 查看家长\r\n                  </el-dropdown-item>\r\n                  <el-dropdown-item :command=\"{type: 'progress', data: scope.row}\">\r\n                    <i class=\"el-icon-data-line\"></i> 学习进度\r\n                  </el-dropdown-item>\r\n                  <el-dropdown-item :command=\"{type: 'reward', data: scope.row}\">\r\n                    <i class=\"el-icon-coin\"></i> 邀请奖励\r\n                  </el-dropdown-item>\r\n                  <el-dropdown-item :command=\"{type: 'delete', data: scope.row}\" divided>\r\n                    <i class=\"el-icon-delete\"></i> 删除\r\n                  </el-dropdown-item>\r\n                </el-dropdown-menu>\r\n              </el-dropdown>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 分页 -->\r\n        <div class=\"pagination-wrapper\">\r\n          <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pagination.page\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            :page-size=\"pagination.size\"\r\n            :total=\"pagination.total\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n          />\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 批量操作栏 -->\r\n    <div v-if=\"selectedStudents.length > 0\" class=\"batch-actions\">\r\n      <el-card>\r\n        <span>已选择 {{ selectedStudents.length }} 个学生</span>\r\n        <el-button type=\"primary\" icon=\"el-icon-upload2\" @click=\"handleBatchUpgrade\">\r\n          批量升级\r\n        </el-button>\r\n        <el-button type=\"danger\" icon=\"el-icon-delete\" @click=\"handleBatchDelete\">\r\n          批量删除\r\n        </el-button>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 学生表单对话框 -->\r\n    <el-dialog\r\n      :title=\"dialogTitle\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"800px\"\r\n      @close=\"resetForm\"\r\n    >\r\n      <el-form\r\n        :model=\"studentForm\"\r\n        :rules=\"formRules\"\r\n        ref=\"studentForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"学号\" prop=\"studentNo\">\r\n              <el-input v-model=\"studentForm.studentNo\" placeholder=\"自动生成\" readonly />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"学生姓名\" prop=\"realName\">\r\n              <el-input v-model=\"studentForm.realName\" placeholder=\"请输入学生姓名\" />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"年级\" prop=\"grade\">\r\n              <el-select v-model=\"studentForm.grade\" placeholder=\"请选择年级\">\r\n                <el-option label=\"小学一年级\" value=\"1\" />\r\n                <el-option label=\"小学二年级\" value=\"2\" />\r\n                <el-option label=\"小学三年级\" value=\"3\" />\r\n                <el-option label=\"小学四年级\" value=\"4\" />\r\n                <el-option label=\"小学五年级\" value=\"5\" />\r\n                <el-option label=\"小学六年级\" value=\"6\" />\r\n                <el-option label=\"初中一年级\" value=\"7\" />\r\n                <el-option label=\"初中二年级\" value=\"8\" />\r\n                <el-option label=\"初中三年级\" value=\"9\" />\r\n                <el-option label=\"高中一年级\" value=\"10\" />\r\n                <el-option label=\"高中二年级\" value=\"11\" />\r\n                <el-option label=\"高中三年级\" value=\"12\" />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"学校\" prop=\"school\">\r\n              <el-input v-model=\"studentForm.school\" placeholder=\"请输入学校名称\" />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"家长姓名\" prop=\"parentName\">\r\n              <el-input v-model=\"studentForm.parentName\" placeholder=\"请输入家长姓名\" />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"家长电话\" prop=\"parentPhone\">\r\n              <el-input v-model=\"studentForm.parentPhone\" placeholder=\"请输入家长电话\" />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"学生等级\" prop=\"level\">\r\n              <el-select v-model=\"studentForm.level\" placeholder=\"请选择等级\">\r\n                <el-option label=\"青铜\" :value=\"1\" />\r\n                <el-option label=\"白银\" :value=\"2\" />\r\n                <el-option label=\"黄金\" :value=\"3\" />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"邀请码\" prop=\"inviteCode\">\r\n              <el-input v-model=\"studentForm.inviteCode\" placeholder=\"自动生成\" readonly />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-form-item label=\"省市区\">\r\n          <el-col :span=\"8\">\r\n            <el-select v-model=\"studentForm.provinceCode\" placeholder=\"省份\">\r\n              <el-option label=\"北京市\" value=\"110000\" />\r\n              <el-option label=\"上海市\" value=\"310000\" />\r\n              <el-option label=\"广东省\" value=\"440000\" />\r\n              <el-option label=\"浙江省\" value=\"330000\" />\r\n              <el-option label=\"江苏省\" value=\"320000\" />\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-select v-model=\"studentForm.cityCode\" placeholder=\"城市\">\r\n              <el-option label=\"北京市\" value=\"110100\" />\r\n              <el-option label=\"上海市\" value=\"310100\" />\r\n              <el-option label=\"广州市\" value=\"440100\" />\r\n              <el-option label=\"深圳市\" value=\"440300\" />\r\n              <el-option label=\"杭州市\" value=\"330100\" />\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-select v-model=\"studentForm.areaCode\" placeholder=\"区县\">\r\n              <el-option label=\"朝阳区\" value=\"110105\" />\r\n              <el-option label=\"海淀区\" value=\"110108\" />\r\n              <el-option label=\"黄浦区\" value=\"310101\" />\r\n              <el-option label=\"徐汇区\" value=\"310104\" />\r\n            </el-select>\r\n          </el-col>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\r\n          {{ isEdit ? '更新' : '创建' }}\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 等级调整对话框 -->\r\n    <el-dialog title=\"调整学生等级\" :visible.sync=\"levelDialogVisible\" width=\"400px\">\r\n      <el-form :model=\"levelForm\" ref=\"levelForm\" label-width=\"80px\">\r\n        <el-form-item label=\"学生姓名\">\r\n          <span>{{ currentStudent.realName }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"当前等级\">\r\n          <el-tag :type=\"getLevelTagType(currentStudent.level)\">\r\n            {{ getLevelText(currentStudent.level) }}\r\n          </el-tag>\r\n        </el-form-item>\r\n        <el-form-item label=\"新等级\" prop=\"level\">\r\n          <el-select v-model=\"levelForm.level\" placeholder=\"请选择新等级\">\r\n            <el-option label=\"青铜\" :value=\"1\" />\r\n            <el-option label=\"白银\" :value=\"2\" />\r\n            <el-option label=\"黄金\" :value=\"3\" />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"levelDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleLevelSubmit\" :loading=\"submitting\">\r\n          确定\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 家长信息对话框 -->\r\n    <el-dialog title=\"家长信息\" :visible.sync=\"parentDialogVisible\" width=\"500px\">\r\n      <div class=\"parent-info\" v-if=\"parentInfo\">\r\n        <el-descriptions :column=\"1\" border>\r\n          <el-descriptions-item label=\"家长姓名\">\r\n            {{ parentInfo.parentName || '-' }}\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"联系电话\">\r\n            {{ parentInfo.parentPhone || '-' }}\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"微信号\">\r\n            {{ parentInfo.parentWechat || '-' }}\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"邮箱\">\r\n            {{ parentInfo.parentEmail || '-' }}\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"关系\">\r\n            {{ parentInfo.relationship || '-' }}\r\n          </el-descriptions-item>\r\n        </el-descriptions>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 学习进度对话框 -->\r\n    <el-dialog title=\"学习进度\" :visible.sync=\"progressDialogVisible\" width=\"600px\">\r\n      <div class=\"progress-info\" v-if=\"progressInfo\">\r\n        <el-row :gutter=\"20\" class=\"progress-stats\">\r\n          <el-col :span=\"6\">\r\n            <div class=\"progress-card\">\r\n              <div class=\"progress-value\">{{ progressInfo.totalCourses || 0 }}</div>\r\n              <div class=\"progress-label\">总课程数</div>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"progress-card\">\r\n              <div class=\"progress-value\">{{ progressInfo.completedCourses || 0 }}</div>\r\n              <div class=\"progress-label\">已完成</div>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"progress-card\">\r\n              <div class=\"progress-value\">{{ progressInfo.studyHours || 0 }}</div>\r\n              <div class=\"progress-label\">学习时长(h)</div>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"progress-card\">\r\n              <div class=\"progress-value\">{{ (progressInfo.completionRate || 0).toFixed(1) }}%</div>\r\n              <div class=\"progress-label\">完成率</div>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n        <div class=\"progress-chart\">\r\n          <el-progress \r\n            :percentage=\"progressInfo.completionRate || 0\"\r\n            :stroke-width=\"20\"\r\n            :text-inside=\"true\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { studentApi } from '@/api'\r\n\r\nexport default {\r\n  name: 'Students',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      submitting: false,\r\n      studentList: [],\r\n      selectedStudents: [],\r\n      statistics: {},\r\n      searchForm: {\r\n        studentNo: '',\r\n        realName: '',\r\n        level: null,\r\n        parentPhone: '',\r\n        grade: null\r\n      },\r\n      pagination: {\r\n        page: 1,\r\n        size: 10,\r\n        total: 0\r\n      },\r\n      dialogVisible: false,\r\n      levelDialogVisible: false,\r\n      parentDialogVisible: false,\r\n      progressDialogVisible: false,\r\n      isEdit: false,\r\n      currentStudent: {},\r\n      parentInfo: {},\r\n      progressInfo: {},\r\n      studentForm: {\r\n        studentNo: '',\r\n        realName: '',\r\n        grade: '',\r\n        school: '',\r\n        parentName: '',\r\n        parentPhone: '',\r\n        level: 1,\r\n        inviteCode: '',\r\n        provinceCode: '',\r\n        cityCode: '',\r\n        areaCode: ''\r\n      },\r\n      levelForm: {\r\n        level: null\r\n      },\r\n      formRules: {\r\n        realName: [\r\n          { required: true, message: '请输入学生姓名', trigger: 'blur' }\r\n        ],\r\n        grade: [\r\n          { required: true, message: '请选择年级', trigger: 'change' }\r\n        ],\r\n        parentPhone: [\r\n          { required: true, message: '请输入家长电话', trigger: 'blur' },\r\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dialogTitle() {\r\n      return this.isEdit ? '编辑学生' : '新增学生'\r\n    }\r\n  },\r\n  created() {\r\n    this.loadStudents()\r\n    this.loadStatistics()\r\n  },\r\n  methods: {\r\n    async loadStudents() {\r\n      this.loading = true\r\n      try {\r\n        const params = {\r\n          page: this.pagination.page,\r\n          size: this.pagination.size,\r\n          ...this.searchForm\r\n        }\r\n        const response = await studentApi.getStudentsByPage(params)\r\n        if (response.code === 200) {\r\n          this.studentList = response.data.students || []\r\n          this.pagination.total = response.data.total || 0\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('加载学生列表失败')\r\n        console.error(error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    async loadStatistics() {\r\n      try {\r\n        const response = await studentApi.getStatistics()\r\n        if (response.code === 200) {\r\n          this.statistics = response.data || {}\r\n        }\r\n      } catch (error) {\r\n        console.error('加载统计数据失败:', error)\r\n      }\r\n    },\r\n    handleSearch() {\r\n      this.pagination.page = 1\r\n      this.loadStudents()\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields()\r\n      this.pagination.page = 1\r\n      this.loadStudents()\r\n    },\r\n    handleSizeChange(val) {\r\n      this.pagination.size = val\r\n      this.pagination.page = 1\r\n      this.loadStudents()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.pagination.page = val\r\n      this.loadStudents()\r\n    },\r\n    handleSelectionChange(selection) {\r\n      this.selectedStudents = selection\r\n    },\r\n    handleCreate() {\r\n      this.isEdit = false\r\n      this.dialogVisible = true\r\n      this.generateStudentNo()\r\n      this.generateInviteCode()\r\n    },\r\n    async generateStudentNo() {\r\n      try {\r\n        const response = await studentApi.generateStudentNo()\r\n        if (response.code === 200) {\r\n          this.studentForm.studentNo = response.data\r\n        }\r\n      } catch (error) {\r\n        console.error('生成学号失败:', error)\r\n      }\r\n    },\r\n    async generateInviteCode() {\r\n      try {\r\n        const response = await studentApi.generateInviteCode()\r\n        if (response.code === 200) {\r\n          this.studentForm.inviteCode = response.data\r\n        }\r\n      } catch (error) {\r\n        console.error('生成邀请码失败:', error)\r\n      }\r\n    },\r\n    handleCommand(command) {\r\n      switch (command.type) {\r\n        case 'edit':\r\n          this.handleEdit(command.data)\r\n          break\r\n        case 'level':\r\n          this.handleLevelAdjust(command.data)\r\n          break\r\n        case 'parent':\r\n          this.handleViewParent(command.data)\r\n          break\r\n        case 'progress':\r\n          this.handleViewProgress(command.data)\r\n          break\r\n        case 'reward':\r\n          this.handleReward(command.data)\r\n          break\r\n        case 'delete':\r\n          this.handleDelete(command.data)\r\n          break\r\n      }\r\n    },\r\n    handleEdit(student) {\r\n      this.isEdit = true\r\n      this.currentStudent = student\r\n      this.studentForm = { ...student }\r\n      this.dialogVisible = true\r\n    },\r\n    handleLevelAdjust(student) {\r\n      this.currentStudent = student\r\n      this.levelForm.level = student.level\r\n      this.levelDialogVisible = true\r\n    },\r\n    async handleViewParent(student) {\r\n      try {\r\n        const response = await studentApi.getParentInfo(student.id)\r\n        if (response.code === 200) {\r\n          this.parentInfo = response.data || {}\r\n          this.parentDialogVisible = true\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('加载家长信息失败')\r\n      }\r\n    },\r\n    async handleViewProgress(student) {\r\n      try {\r\n        const response = await studentApi.getLearningProgress(student.id)\r\n        if (response.code === 200) {\r\n          this.progressInfo = response.data || {}\r\n          this.progressDialogVisible = true\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('加载学习进度失败')\r\n      }\r\n    },\r\n    handleReward(student) {\r\n      this.$message.info('邀请奖励功能开发中...')\r\n    },\r\n    async handleSubmit() {\r\n      try {\r\n        await this.$refs.studentForm.validate()\r\n        this.submitting = true\r\n        \r\n        const response = this.isEdit \r\n          ? await studentApi.updateStudent(this.currentStudent.id, this.studentForm)\r\n          : await studentApi.createStudent(this.studentForm)\r\n          \r\n        if (response.code === 200) {\r\n          this.$message.success(this.isEdit ? '更新成功' : '创建成功')\r\n          this.dialogVisible = false\r\n          this.loadStudents()\r\n          this.loadStatistics()\r\n        } else {\r\n          this.$message.error(response.message || '操作失败')\r\n        }\r\n      } catch (error) {\r\n        if (error !== false) { // 不是表单验证错误\r\n          this.$message.error('操作失败')\r\n        }\r\n      } finally {\r\n        this.submitting = false\r\n      }\r\n    },\r\n    async handleLevelSubmit() {\r\n      if (!this.levelForm.level) {\r\n        this.$message.warning('请选择新等级')\r\n        return\r\n      }\r\n      \r\n      this.submitting = true\r\n      try {\r\n        const response = await studentApi.updateLevel(this.currentStudent.id, {\r\n          level: this.levelForm.level\r\n        })\r\n        if (response.code === 200) {\r\n          this.$message.success('等级调整成功')\r\n          this.levelDialogVisible = false\r\n          this.loadStudents()\r\n          this.loadStatistics()\r\n        } else {\r\n          this.$message.error(response.message || '调整失败')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('调整失败')\r\n      } finally {\r\n        this.submitting = false\r\n      }\r\n    },\r\n    async handleDelete(student) {\r\n      try {\r\n        await this.$confirm('确定要删除该学生吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        \r\n        const response = await studentApi.deleteStudent(student.id)\r\n        if (response.code === 200) {\r\n          this.$message.success('删除成功')\r\n          this.loadStudents()\r\n          this.loadStatistics()\r\n        } else {\r\n          this.$message.error(response.message || '删除失败')\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败')\r\n        }\r\n      }\r\n    },\r\n    async handleBatchUpgrade() {\r\n      if (this.selectedStudents.length === 0) {\r\n        this.$message.warning('请先选择学生')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        await this.$confirm('确定要进行批量等级升级吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        \r\n        const response = await studentApi.autoUpgradeLevel()\r\n        if (response.code === 200) {\r\n          this.$message.success('批量升级成功')\r\n          this.loadStudents()\r\n          this.loadStatistics()\r\n        } else {\r\n          this.$message.error(response.message || '升级失败')\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('升级失败')\r\n        }\r\n      }\r\n    },\r\n    async handleBatchDelete() {\r\n      if (this.selectedStudents.length === 0) {\r\n        this.$message.warning('请先选择学生')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        await this.$confirm(`确定要删除选中的 ${this.selectedStudents.length} 个学生吗？`, '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        \r\n        // 批量删除逻辑\r\n        for (const student of this.selectedStudents) {\r\n          await studentApi.deleteStudent(student.id)\r\n        }\r\n        \r\n        this.$message.success('批量删除成功')\r\n        this.loadStudents()\r\n        this.loadStatistics()\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('批量删除失败')\r\n        }\r\n      }\r\n    },\r\n    handleExport() {\r\n      this.$message.info('导出功能开发中...')\r\n    },\r\n    resetForm() {\r\n      this.$refs.studentForm?.resetFields()\r\n      this.studentForm = {\r\n        studentNo: '',\r\n        realName: '',\r\n        grade: '',\r\n        school: '',\r\n        parentName: '',\r\n        parentPhone: '',\r\n        level: 1,\r\n        inviteCode: '',\r\n        provinceCode: '',\r\n        cityCode: '',\r\n        areaCode: ''\r\n      }\r\n      this.currentStudent = {}\r\n    },\r\n    getLevelText(level) {\r\n      const levelMap = {\r\n        1: '青铜',\r\n        2: '白银',\r\n        3: '黄金'\r\n      }\r\n      return levelMap[level] || '未知'\r\n    },\r\n    getLevelTagType(level) {\r\n      const typeMap = {\r\n        1: 'warning',\r\n        2: 'info',\r\n        3: 'success'\r\n      }\r\n      return typeMap[level] || 'info'\r\n    },\r\n    formatTime(time) {\r\n      if (!time) return '-'\r\n      return new Date(time).toLocaleDateString()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.students-container {\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n}\r\n\r\n/* 页面头部 */\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  background: linear-gradient(135deg, #00d4aa 0%, #00b894 100%);\r\n  padding: 30px;\r\n  border-radius: 12px;\r\n  color: white;\r\n}\r\n\r\n.header-content .page-title {\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  margin: 0 0 8px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.header-content .page-description {\r\n  font-size: 16px;\r\n  opacity: 0.9;\r\n  margin: 0;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  gap: 12px;\r\n}\r\n\r\n/* 统计卡片 */\r\n.stats-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  padding: 24px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.stat-icon {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 16px;\r\n  font-size: 24px;\r\n  color: white;\r\n}\r\n\r\n.stat-card.total .stat-icon { background: linear-gradient(135deg, #00d4aa 0%, #00b894 100%); }\r\n.stat-card.bronze .stat-icon { background: linear-gradient(135deg, #cd7f32 0%, #b8860b 100%); }\r\n.stat-card.silver .stat-icon { background: linear-gradient(135deg, #c0c0c0 0%, #a8a8a8 100%); }\r\n.stat-card.gold .stat-icon { background: linear-gradient(135deg, #ffd700 0%, #ffb347 100%); }\r\n\r\n.stat-content .stat-value {\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n  line-height: 1;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.stat-content .stat-label {\r\n  font-size: 14px;\r\n  color: #7f8c8d;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 搜索筛选 */\r\n.search-filters {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 表格 */\r\n.students-table {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.table-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.table-title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.amount-text {\r\n  color: #e74c3c;\r\n  font-weight: 600;\r\n}\r\n\r\n.pagination-wrapper {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n\r\n/* 批量操作 */\r\n.batch-actions {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 1000;\r\n}\r\n\r\n.batch-actions .el-card {\r\n  padding: 8px 24px;\r\n  border-radius: 30px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n/* 家长信息 */\r\n.parent-info {\r\n  margin: 16px 0;\r\n}\r\n\r\n/* 学习进度 */\r\n.progress-info {\r\n  margin: 16px 0;\r\n}\r\n\r\n.progress-stats {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.progress-card {\r\n  text-align: center;\r\n  padding: 16px;\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n}\r\n\r\n.progress-value {\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.progress-label {\r\n  font-size: 12px;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.progress-chart {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .students-container {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .page-header {\r\n    flex-direction: column;\r\n    text-align: center;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .stats-cards {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  \r\n  .header-actions {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}