{"ast":null,"code":"export default {\n  name: 'Login',\n  data() {\n    return {\n      loading: false,\n      loginData: {\n        username: 'admin',\n        password: '123456'\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度至少6位',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.$api.user.login(this.loginData.username, this.loginData.password).then(response => {\n            this.$message.success('登录成功');\n\n            // 存储用户信息和token\n            this.$store.dispatch('login', {\n              user: response.data.user,\n              token: response.data.token\n            });\n\n            // 跳转到仪表盘\n            this.$router.push('/workspace');\n          }).catch(error => {\n            console.error('登录失败:', error);\n          }).finally(() => {\n            this.loading = false;\n          });\n        }\n      });\n    }\n  },\n  created() {\n    // 如果已经登录，直接跳转到仪表盘\n    if (this.$store.getters.isLoggedIn) {\n      this.$router.push('/dashboard');\n    }\n  }\n};","map":{"version":3,"names":["name","data","loading","loginData","username","password","loginRules","required","message","trigger","min","methods","handleLogin","$refs","loginForm","validate","valid","$api","user","login","then","response","$message","success","$store","dispatch","token","$router","push","catch","error","console","finally","created","getters","isLoggedIn"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-form\">\r\n      <div class=\"login-header\">\r\n        <h2>管理员后台登录</h2>\r\n        <p>请输入您的登录凭据</p>\r\n      </div>\r\n      \r\n      <el-form \r\n        ref=\"loginForm\" \r\n        :model=\"loginData\" \r\n        :rules=\"loginRules\" \r\n        label-width=\"0px\"\r\n        class=\"login-form-content\"\r\n      >\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginData.username\"\r\n            placeholder=\"用户名\"\r\n            prefix-icon=\"el-icon-user\"\r\n            size=\"large\"\r\n            clearable\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginData.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            size=\"large\"\r\n            show-password\r\n            @keyup.enter.native=\"handleLogin\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button \r\n            type=\"primary\" \r\n            size=\"large\" \r\n            :loading=\"loading\" \r\n            @click=\"handleLogin\"\r\n            class=\"login-btn\"\r\n          >\r\n            {{ loading ? '登录中...' : '登录' }}\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <div class=\"login-footer\">\r\n        <p>默认账号：admin / 123456</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      loginData: {\r\n        username: 'admin',\r\n        password: '123456'\r\n      },\r\n      loginRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度至少6位', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          \r\n          this.$api.user.login(this.loginData.username, this.loginData.password)\r\n            .then(response => {\r\n              this.$message.success('登录成功')\r\n              \r\n              // 存储用户信息和token\r\n              this.$store.dispatch('login', {\r\n                user: response.data.user,\r\n                token: response.data.token\r\n              })\r\n              \r\n              // 跳转到仪表盘\r\n              this.$router.push('/workspace')\r\n            })\r\n            .catch(error => {\r\n              console.error('登录失败:', error)\r\n            })\r\n            .finally(() => {\r\n              this.loading = false\r\n            })\r\n        }\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    // 如果已经登录，直接跳转到仪表盘\r\n    if (this.$store.getters.isLoggedIn) {\r\n      this.$router.push('/dashboard')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\r\n\r\n.login-form {\r\n  background: white;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\n.login-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.login-header h2 {\r\n  color: #303133;\r\n  margin: 0 0 10px 0;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.login-header p {\r\n  color: #909399;\r\n  margin: 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.login-form-content {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-form-content .el-form-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  height: 45px;\r\n  font-size: 16px;\r\n  border-radius: 6px;\r\n}\r\n\r\n.login-footer {\r\n  text-align: center;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #f0f0f0;\r\n}\r\n\r\n.login-footer p {\r\n  color: #909399;\r\n  font-size: 12px;\r\n  margin: 0;\r\n}\r\n\r\n/* 响应式 */\r\n@media (max-width: 480px) {\r\n  .login-form {\r\n    padding: 30px 20px;\r\n  }\r\n  \r\n  .login-header h2 {\r\n    font-size: 24px;\r\n  }\r\n}\r\n</style> "],"mappings":"AA0DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAC,SAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAd,OAAA;UAEA,KAAAe,IAAA,CAAAC,IAAA,CAAAC,KAAA,MAAAhB,SAAA,CAAAC,QAAA,OAAAD,SAAA,CAAAE,QAAA,EACAe,IAAA,CAAAC,QAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;;YAEA;YACA,KAAAC,MAAA,CAAAC,QAAA;cACAP,IAAA,EAAAG,QAAA,CAAApB,IAAA,CAAAiB,IAAA;cACAQ,KAAA,EAAAL,QAAA,CAAApB,IAAA,CAAAyB;YACA;;YAEA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,GACAC,KAAA,CAAAC,KAAA;YACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;UACA,GACAE,OAAA;YACA,KAAA9B,OAAA;UACA;QACA;MACA;IACA;EACA;EACA+B,QAAA;IACA;IACA,SAAAT,MAAA,CAAAU,OAAA,CAAAC,UAAA;MACA,KAAAR,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}