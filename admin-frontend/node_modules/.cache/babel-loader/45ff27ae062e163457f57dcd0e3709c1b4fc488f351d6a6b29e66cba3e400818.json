{"ast":null,"code":"export default {\n  name: 'Login',\n  data() {\n    return {\n      loading: false,\n      loginData: {\n        username: 'admin',\n        password: '123456'\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度至少6位',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.$api.user.login(this.loginData.username, this.loginData.password).then(response => {\n            this.$message.success('登录成功');\n\n            // 存储用户信息和token\n            this.$store.dispatch('login', {\n              user: response.data.user,\n              token: response.data.token\n            });\n\n            // 跳转到仪表盘\n            this.$router.push('/dashboard');\n          }).catch(error => {\n            console.error('登录失败:', error);\n          }).finally(() => {\n            this.loading = false;\n          });\n        }\n      });\n    }\n  },\n  created() {\n    // 如果已经登录，直接跳转到仪表盘\n    if (this.$store.getters.isLoggedIn) {\n      this.$router.push('/dashboard');\n    }\n  }\n};","map":{"version":3,"names":["name","data","loading","loginData","username","password","loginRules","required","message","trigger","min","methods","handleLogin","$refs","loginForm","validate","valid","$api","user","login","then","response","$message","success","$store","dispatch","token","$router","push","catch","error","console","finally","created","getters","isLoggedIn"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-form\">\n      <div class=\"login-header\">\n        <h2>管理员后台登录</h2>\n        <p>请输入您的登录凭据</p>\n      </div>\n      \n      <el-form \n        ref=\"loginForm\" \n        :model=\"loginData\" \n        :rules=\"loginRules\" \n        label-width=\"0px\"\n        class=\"login-form-content\"\n      >\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginData.username\"\n            placeholder=\"用户名\"\n            prefix-icon=\"el-icon-user\"\n            size=\"large\"\n            clearable\n          />\n        </el-form-item>\n        \n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginData.password\"\n            type=\"password\"\n            placeholder=\"密码\"\n            prefix-icon=\"el-icon-lock\"\n            size=\"large\"\n            show-password\n            @keyup.enter.native=\"handleLogin\"\n          />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button \n            type=\"primary\" \n            size=\"large\" \n            :loading=\"loading\" \n            @click=\"handleLogin\"\n            class=\"login-btn\"\n          >\n            {{ loading ? '登录中...' : '登录' }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n      \n      <div class=\"login-footer\">\n        <p>默认账号：admin / 123456</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loading: false,\n      loginData: {\n        username: 'admin',\n        password: '123456'\n      },\n      loginRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度至少6位', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true\n          \n          this.$api.user.login(this.loginData.username, this.loginData.password)\n            .then(response => {\n              this.$message.success('登录成功')\n              \n              // 存储用户信息和token\n              this.$store.dispatch('login', {\n                user: response.data.user,\n                token: response.data.token\n              })\n              \n              // 跳转到仪表盘\n              this.$router.push('/dashboard')\n            })\n            .catch(error => {\n              console.error('登录失败:', error)\n            })\n            .finally(() => {\n              this.loading = false\n            })\n        }\n      })\n    }\n  },\n  created() {\n    // 如果已经登录，直接跳转到仪表盘\n    if (this.$store.getters.isLoggedIn) {\n      this.$router.push('/dashboard')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n}\n\n.login-form {\n  background: white;\n  padding: 40px;\n  border-radius: 10px;\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 400px;\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-header h2 {\n  color: #303133;\n  margin: 0 0 10px 0;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.login-header p {\n  color: #909399;\n  margin: 0;\n  font-size: 14px;\n}\n\n.login-form-content {\n  margin-bottom: 20px;\n}\n\n.login-form-content .el-form-item {\n  margin-bottom: 20px;\n}\n\n.login-btn {\n  width: 100%;\n  height: 45px;\n  font-size: 16px;\n  border-radius: 6px;\n}\n\n.login-footer {\n  text-align: center;\n  padding-top: 20px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.login-footer p {\n  color: #909399;\n  font-size: 12px;\n  margin: 0;\n}\n\n/* 响应式 */\n@media (max-width: 480px) {\n  .login-form {\n    padding: 30px 20px;\n  }\n  \n  .login-header h2 {\n    font-size: 24px;\n  }\n}\n</style> "],"mappings":"AA0DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAC,SAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAd,OAAA;UAEA,KAAAe,IAAA,CAAAC,IAAA,CAAAC,KAAA,MAAAhB,SAAA,CAAAC,QAAA,OAAAD,SAAA,CAAAE,QAAA,EACAe,IAAA,CAAAC,QAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;;YAEA;YACA,KAAAC,MAAA,CAAAC,QAAA;cACAP,IAAA,EAAAG,QAAA,CAAApB,IAAA,CAAAiB,IAAA;cACAQ,KAAA,EAAAL,QAAA,CAAApB,IAAA,CAAAyB;YACA;;YAEA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,GACAC,KAAA,CAAAC,KAAA;YACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;UACA,GACAE,OAAA;YACA,KAAA9B,OAAA;UACA;QACA;MACA;IACA;EACA;EACA+B,QAAA;IACA;IACA,SAAAT,MAAA,CAAAU,OAAA,CAAAC,UAAA;MACA,KAAAR,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}