{"ast":null,"code":"import Layout from '@/components/Layout.vue';\nexport default {\n  name: 'Orders',\n  components: {\n    Layout\n  },\n  data() {\n    return {\n      loading: false,\n      orderList: [],\n      statistics: {\n        totalOrders: 0,\n        pendingOrders: 0,\n        completedOrders: 0,\n        totalRevenue: '0.00'\n      },\n      searchForm: {\n        orderNo: '',\n        studentName: '',\n        orderStatus: null,\n        paymentMethod: null,\n        dateRange: null\n      },\n      pagination: {\n        page: 1,\n        size: 10,\n        total: 0\n      },\n      detailDialogVisible: false,\n      currentOrder: null\n    };\n  },\n  created() {\n    this.loadOrders();\n    this.loadStatistics();\n  },\n  methods: {\n    loadOrders() {\n      this.loading = true;\n      // 模拟数据\n      setTimeout(() => {\n        this.orderList = [{\n          id: 1,\n          orderNo: 'ORD20240116001',\n          studentName: '张小明',\n          courseName: 'Python基础入门课程',\n          teacherName: '李老师',\n          originalPrice: '299.00',\n          discountAmount: '50.00',\n          finalPrice: '249.00',\n          paymentMethod: 'WECHAT',\n          orderStatus: 1,\n          commissionAmount: '49.80',\n          createTime: '2024-01-16 10:30:00',\n          paymentTime: '2024-01-16 10:35:00',\n          remark: '学生主动购买'\n        }, {\n          id: 2,\n          orderNo: 'ORD20240116002',\n          studentName: '王小红',\n          courseName: 'Vue.js实战开发',\n          teacherName: '张老师',\n          originalPrice: '399.00',\n          discountAmount: '0.00',\n          finalPrice: '399.00',\n          paymentMethod: 'ALIPAY',\n          orderStatus: 0,\n          commissionAmount: '79.80',\n          createTime: '2024-01-16 11:20:00',\n          paymentTime: null\n        }, {\n          id: 3,\n          orderNo: 'ORD20240116003',\n          studentName: '李小华',\n          courseName: 'Java SpringBoot框架',\n          teacherName: '王老师',\n          originalPrice: '599.00',\n          discountAmount: '100.00',\n          finalPrice: '499.00',\n          paymentMethod: 'BANK',\n          orderStatus: 2,\n          commissionAmount: '99.80',\n          createTime: '2024-01-16 09:15:00',\n          paymentTime: '2024-01-16 09:20:00',\n          remark: '推荐购买'\n        }];\n        this.pagination.total = 125;\n        this.loading = false;\n      }, 500);\n    },\n    loadStatistics() {\n      // 模拟统计数据\n      this.statistics = {\n        totalOrders: 1256,\n        pendingOrders: 45,\n        completedOrders: 1089,\n        totalRevenue: '256,780.50'\n      };\n    },\n    handleSearch() {\n      this.pagination.page = 1;\n      this.loadOrders();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.pagination.page = 1;\n      this.loadOrders();\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val;\n      this.pagination.page = 1;\n      this.loadOrders();\n    },\n    handleCurrentChange(val) {\n      this.pagination.page = val;\n      this.loadOrders();\n    },\n    handleViewDetail(order) {\n      this.currentOrder = order;\n      this.detailDialogVisible = true;\n    },\n    handleDetailClose() {\n      this.currentOrder = null;\n    },\n    handleCommand(command, order) {\n      switch (command) {\n        case 'refund':\n          this.handleRefund(order);\n          break;\n        case 'cancel':\n          this.handleCancel(order);\n          break;\n        case 'commission':\n          this.handleViewCommission(order);\n          break;\n      }\n    },\n    handleRefund(order) {\n      this.$confirm(`确定要退款订单 ${order.orderNo} 吗？`, '退款确认', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message.success('退款申请已提交');\n        this.loadOrders();\n        this.loadStatistics();\n      }).catch(() => {});\n    },\n    handleCancel(order) {\n      this.$confirm(`确定要取消订单 ${order.orderNo} 吗？`, '取消确认', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message.success('订单已取消');\n        this.loadOrders();\n        this.loadStatistics();\n      }).catch(() => {});\n    },\n    handleViewCommission(order) {\n      this.$message.info(`教师佣金：¥${order.commissionAmount}`);\n    },\n    exportOrders() {\n      this.$message.info('订单导出功能开发中...');\n    },\n    refreshData() {\n      this.loadOrders();\n      this.loadStatistics();\n      this.$message.success('数据已刷新');\n    },\n    getOrderStatusText(status) {\n      const statusMap = {\n        0: '待支付',\n        1: '已支付',\n        2: '已完成',\n        3: '已取消',\n        4: '已退款'\n      };\n      return statusMap[status] || '未知';\n    },\n    getOrderStatusType(status) {\n      const typeMap = {\n        0: 'warning',\n        1: 'success',\n        2: 'info',\n        3: 'danger',\n        4: 'warning'\n      };\n      return typeMap[status] || 'info';\n    },\n    getPaymentMethodText(method) {\n      const methodMap = {\n        'WECHAT': '微信支付',\n        'ALIPAY': '支付宝',\n        'BANK': '银行卡'\n      };\n      return methodMap[method] || method;\n    },\n    getPaymentMethodType(method) {\n      const typeMap = {\n        'WECHAT': 'success',\n        'ALIPAY': 'primary',\n        'BANK': 'warning'\n      };\n      return typeMap[method] || 'info';\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}